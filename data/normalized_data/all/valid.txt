800 square foot e0 with a private bath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-size string-= number800 en.square_feet
e0 in e0 with rent at 1500	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-neighborhood string-= e0
which housing unit has a maximum of two housing types	SW.countComparative entity-en.housing_unit string-housing_type string-<= number2
housing that rents for at least 1500 per month	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string->= ( SW.ensureNumericEntity number1500 en.dollar )
show me e0 and e1	SW.filter entity-en.housing_unit string-housing_type string-= SW.concat
what housing has the cheapest rent	SW.superlative entity-en.housing_unit string-min SW.ensureNumericProperty string-rent
find housing units with unique housing types	SW.countSuperlative entity-en.housing_unit string-min string-housing_type
what is the biggest housing unit	SW.superlative entity-en.housing_unit string-max SW.ensureNumericProperty string-size
which types of housing have a private bathroom	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-has_private_bath )
housing that accepts dogs	SW.filter entity-en.housing_unit string-allows_dogs
housing units with a  orivate bath in the e0 area	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-has_private_bath
e0 with the same rent as e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-rent  )
find housing units with rental charges lesser than 2000 dollars	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-< ( SW.ensureNumericEntity SW.concat )
housing 800 sq in size posted on d0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d0 ) string-size string-= number800 en.square_feet
what is the neighborhood of housing unit of the e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-housing_type string-= e0 )
which kind of housing permits cats inside it	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-allows_cats )
find housing units with private bath located in the neighborhoods of e0	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-neighborhood string-= e0
housing units near two neighborhoods	SW.countComparative entity-en.housing_unit string-neighborhood string-= number2
e0 that are catfriendly	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-housing_type string-= e0
housing type with less than 2 units	SW.countComparative entity-en.housing SW.reverse string-housing_type string-< number2 entity-en.housing_unit
e0 with a master bedroom and private bath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-has_private_bath
find housing units with less than or equal to the rent of e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-rent  )
which housing unit is available for a price of less than 1500 dollars	SW.filter entity-en.housing_unit string-rent string-!= number1500 en.dollar
e0 with a private room for rent at 1500	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-rent string-= number1500 en.dollar
catfriendly housing	SW.filter entity-en.housing_unit string-allows_cats
find e0 posted on d1	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d1 ) string-housing_type string-= e0
housing that isnt in e0	SW.filter entity-en.housing_unit string-neighborhood string-!= e0
unit of average size	string-avg SW.getProperty entity-en.housing_unit string-size
housing unit that costs 1500 dollars rent and allows cats	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-allows_cats
looking for e0	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-housing_type string-= e0
name neighborhoods with two or more housing units	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string->= number2 entity-en.housing_unit
a housing unit on e0 that posted on d1	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d1 ) SW.reverse string-housing_type string-= e0
exclude e0 that are in the same neighborhood as e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-!= e0
which housing unit is posted on or before jan 2	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity date:2015:1:2 )
housing in the neighborhood of e0 or e1	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= SW.concat
what housing with a private room posted jan 2nd	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) string-has_private_room
e0 with a master bathroom	SW.filter entity-en.housing_unit string-has_private_bath
find all housing units posted on d0	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
what is that housing unit size	string-sum SW.getProperty entity-en.housing_unit string-size
housing that allows cats and includes a private bath	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-has_private_bath
what kind of housing is the housing unit posted on jan 2	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 )
show me housing where dogs are allowed	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-allows_dogs
which housing unit around e0 has a private bath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-neighborhood string-= e0
what is the rent of e0 per month	SW.getProperty e0 string-rent
what housing has the latest posting date	SW.superlative entity-en.housing_unit string-max SW.ensureNumericProperty string-posting_date
what housing unit contains a private room and allows cats	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-has_private_room
rent less than 15002000 dollars	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-< ( SW.ensureNumericEntity SW.concat )
e0 with less than 2 units	SW.countComparative entity-en.housing_unit string-housing_type string-< number2
which housing unit has houses of e0 kind	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-housing_type string-= e0
housing unit which is an e0 housing type with a private room	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-has_private_room
what housing units allows dogs	SW.filter entity-en.housing_unit string-allows_dogs
housing that has more than two neighborhood	SW.countComparative entity-en.housing_unit string-neighborhood string-> number2
which neighborhoods have more than two places available	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string->= number2 entity-en.housing_unit
find e0 in the neighborhoods of e1	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e1 ) string-housing_type string-= e0
find housing for less than 1500 dollars	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-< ( SW.ensureNumericEntity number1500 en.dollar )
housing that is 1500month or 2000month	SW.filter entity-en.housing_unit string-rent string-= SW.concat
find an 800 sq ft housing unit posted on d0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d0 ) string-size string-= number800 en.square_feet
which housing unit has two types minimum	SW.countComparative entity-en.housing_unit string-housing_type string->= number2
find housing units in the same size of e0	SW.filter entity-en.housing_unit string-size string-= SW.getProperty e0 string-size
list all housing units that are e0	SW.filter entity-en.housing_unit string-housing_type string-= e0
catfriendly e0 with rent at 1500	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-allows_cats
which housing unit resembles the size of e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-size  )
how many different housing types are there	.size entity-en.housing
find an e0 that is 800 square feet	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-size string-= number800 en.square_feet
find housing that allows cats	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-allows_cats )
which housing unit has an area of 800 square feet	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-size string-= number800 en.square_feet
find the largest housing unit	SW.superlative entity-en.housing_unit string-max SW.ensureNumericProperty string-size
what housing is a two unit type	SW.countComparative entity-en.housing SW.reverse string-housing_type string-= number2 entity-en.housing_unit
e0 for rent at 1500	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-housing_type string-= e0
which housing unit has a monthly rent of more than 1000 dollars	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-> ( SW.ensureNumericEntity number1500 en.dollar )
a housing unit that includes more than two housing types	SW.countComparative entity-en.housing_unit string-housing_type string-> number2
find housing with rental charges between 1500 and 2000 dollars	SW.filter entity-en.housing_unit string-rent string-= SW.concat
what housing unit is in the same neighborhood as e0 and was posted on jan 2	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) SW.reverse string-neighborhood string-= e0
housing unit that allows cats with e0 as neighborhood	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-neighborhood string-= e0
housing unit with a posting date bigger than the date of e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
housing that was posted on d0 or d1	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.concat )
housing that is not the same kind as e0	SW.filter entity-en.housing SW.reverse string-housing_type string-!= e0
housing posted the most recently	SW.superlative entity-en.housing_unit string-max SW.ensureNumericProperty string-posting_date
e0 similar to the e0 in e0	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 )
which housing type allows pets	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-allows_dogs )
dog and cat friendly housing	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-allows_dogs
what housing has a private room	SW.filter entity-en.housing_unit string-has_private_room
what housing costs 1500 dollars and is 800 square feet	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-rent string-= number1500 en.dollar
what is the housing type of the housing unit with a private room	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-has_private_room )
which housing unit is bigger by area	SW.superlative entity-en.housing_unit string-max SW.ensureNumericProperty string-size
list all housing us that are at least 800 or 1000 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string->= ( SW.ensureNumericEntity SW.concat )
which housing unit permits dogs and has a private bath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-allows_dogs
what kind of housing was posted on jan 2	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 )
smallest housing units	SW.superlative entity-en.housing_unit string-min SW.ensureNumericProperty string-size
e0 similar in size to e0	SW.filter entity-en.housing_unit string-size string-= SW.getProperty e0 string-size
what neighborhood has housing with a private room	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-has_private_room )
e0 with a private bathroom in e0	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-neighborhood string-= e0
which housing unit was not posted on jan 2	SW.filter entity-en.housing_unit string-posting_date string-!= date:2015:1:2
neighborhoods with the least housing units	SW.countSuperlative entity-en.neighborhood string-min SW.reverse string-neighborhood entity-en.housing_unit
which housing unit has 1500 dollars as monthly rent and also has the facility of a private bath	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-has_private_bath
housing with private room that was posted on d0	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-posting_date string-= d0
e0 posted before e0 was posted	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
housing unit posted after d0 or d1	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.concat )
looking for housing that isnt an e0	SW.filter entity-en.housing_unit string-housing_type string-!= e0
show me places with a private room where cats are welcome	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-has_private_room
which housing posted jan 2nd permits cats	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-posting_date string-= date:2015:1:2
find housing units with maximum size 800 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-<= ( SW.ensureNumericEntity number800 en.square_feet )
what neighborhood has the most e0 complexes	SW.countSuperlative entity-en.neighborhood string-max SW.reverse string-neighborhood entity-en.housing_unit
housing under 800 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-< ( SW.ensureNumericEntity number800 en.square_feet )
neighborhoods not near e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-!= e0
what is the monthly rent at e0	SW.getProperty e0 string-rent
what neighborhood has less than two housing units	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-< number2 entity-en.housing_unit
dogfriendly e0	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-housing_type string-= e0
neighborhood of e0 or e1	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= SW.concat
what is the monthly rent of housing units posted on january 2nd	SW.filter entity-en.housing_unit string-rent string-= ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 )
what housing unit posted on jan 2s rent is 1500 dollars	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-posting_date string-= date:2015:1:2
neighborhoods with housing that has a private bath	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-has_private_bath )
housing that is the same type as e0 that was posted on d1	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d1 ) SW.reverse string-housing_type string-= e0
find housing that allows dogs and cats	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-allows_cats
which housing posted jan 2nd rents for 1500	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) string-rent string-= number1500 en.dollar
which housing unit permits dogs and has the facility of a private room	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-allows_dogs
what housing unit is found in the midtown east neighborhood	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-neighborhood string-= en.neighborhood.midtown_west )
which housing unit is posted before jan 2	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.concat )
locate housing units with private roombath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-has_private_bath
neighborhood with the fewest amount of housing units	SW.countSuperlative entity-en.neighborhood string-min SW.reverse string-neighborhood entity-en.housing_unit
housing units posted after d0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity d0 )
which housing unit was posted d0 that is the same housing type as e0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d0 ) SW.reverse string-housing_type string-= e0
find housing units posted before e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
housing e0 that allow dogs	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-housing_type string-= e0
what is the neighborhood of e0 called as	SW.filter ( SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= e0 ) SW.reverse string-neighborhood string-= e0
800 square foot e0 that allows cats	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-allows_cats
what housing units are at least 800 or 1000 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string->= ( SW.ensureNumericEntity SW.concat )
housing found in two or less neighborhoods	SW.countComparative entity-en.housing_unit string-neighborhood string-<= number2
e0 at 800 square feet	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-size string-= number800 en.square_feet
housing posted the same day as e0	SW.filter entity-en.housing_unit string-posting_date string-= SW.getProperty e0 string-posting_date
pet friendly 800 square feet housing unit	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-allows_dogs
what housing unit has two or more neighborhoods	SW.countComparative entity-en.housing_unit string-neighborhood string->= number2
looking for e0	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-housing_type string-= e0 )
housing with a private room and bath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-has_private_bath
which housing unit is in e0 and was posted on d1	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-posting_date string-= d1
which area has more than two housing units	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-> number2 entity-en.housing_unit
neighborhoods that have 800 square foot housing	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet )
neighborhoods with dogfriendly e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-allows_dogs )
how large is the housing unit	string-sum SW.getProperty entity-en.housing_unit string-size
what is the e0 housing type	SW.getProperty e0 string-housing_type
what is the mostused housing type	SW.countSuperlative entity-en.housing string-max SW.reverse string-housing_type entity-en.housing_unit
which area has a minimum of two housing units	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string->= number2 entity-en.housing_unit
e0 with private baths	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-has_private_bath
how big is e0	SW.getProperty e0 string-size
what kind of housing is in e0	SW.getProperty e0 string-neighborhood
housing in more than two neighborhoods	SW.countComparative entity-en.housing_unit string-neighborhood string-> number2
neighborhoods that have more than two units	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-> number2 entity-en.housing_unit
which e0 kind of housing units permits cats in it	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-housing_type string-= e0
what is the housing type of e0	SW.filter ( SW.filter entity-en.housing SW.reverse string-housing_type string-= e0 ) SW.reverse string-housing_type string-= e0
what housing unit has the same rent as the unit posted on jan 2	SW.filter entity-en.housing_unit string-rent string-= ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 )
show me milkfree recipes	SW.filter entity-en.recipe string-requires string-!= en.ingredient.milk
what recipe takes less time to cook than e0 does to prepare	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what recipe takes equal or more time to cook than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what recipe has no fewer than two cuisines	SW.countComparative entity-en.recipe string-cuisine string->= number2
which recipe has the least number of cuisines	SW.countSuperlative entity-en.recipe string-min string-cuisine
name an ingredient required by two different recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-= number2 entity-en.recipe
what recipe was posted after d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity d0 )
show me the total number of recipes	.size entity-en.recipe
how much time it takes to prepare e0	SW.getProperty e0 string-preparation_time
e0 recipes posted in d1	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-posting_date string-= d1
what recipes need e0 and is posted in d1	SW.filter ( SW.filter entity-en.recipe string-requires string-= e0 ) string-posting_date string-= d1
what recipe takes same or less time to prepare e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
show me the recipe that has the largest preperation time	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-preparation_time
what recipes posting date is in d0 or d1	SW.filter entity-en.recipe string-posting_date string-= SW.concat
what recipe cooks for less time than e0 takes to prep	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
find a recipe thatll feed two people	SW.countComparative entity-en.recipe string-meal string-= number2 entity-en.meal
show me recipes for e0	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-meal string-= e0
find recipes that were posted before the recipe for e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
which recipe requires at least two ingredients	SW.countComparative entity-en.recipe string-requires string->= number2 entity-en.ingredient
what recipes cooking time is at the greatest the cooking time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
show me recipes that need at least three ingrediants	SW.countComparative entity-en.recipe string-requires string-> number2 entity-en.ingredient
show me e0 recipes that require e1	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-requires string-= e1
show me recipes with a cooking time equal to the preparation time for e0	SW.filter entity-en.recipe string-cooking_time string-= SW.getProperty e0 string-preparation_time
what recipe was not posted in d0	SW.filter entity-en.recipe string-posting_date string-!= d0
show me recipes with a preparation time greater than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
show me recipes that require cooking time thats more than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what recipe has a cooking time lower than that of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
recipe with posting date not after posting date of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
find a meal recipe posted in d0	SW.filter entity-en.meal SW.reverse string-meal string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
show me recipes requiring e0 or e1	SW.filter entity-en.recipe string-requires string-= SW.concat
find a e0 recipe from d1	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d1 ) string-meal string-= e0
recipes cooking time	string-sum SW.getProperty entity-en.recipe string-cooking_time
what food items are needed to make e0	SW.filter entity-en.ingredient SW.reverse string-requires string-= e0
which recipe has the longest ingredient list	SW.countSuperlative entity-en.recipe string-max string-requires entity-en.ingredient
show me e0 recipes	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-meal string-= e0
two cuisine recipe	SW.countComparative entity-en.recipe string-cuisine string-= number2
a recipe which posted before d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity d0 )
find a recipe that is not suitable for e0	SW.filter entity-en.recipe string-meal string-!= e0
what ingredients are in e0	SW.filter ( SW.filter entity-en.ingredient SW.reverse string-requires string-= e0 ) SW.reverse string-requires string-= e0
which recipes have three or more cuisine	SW.countComparative entity-en.recipe string-cuisine string-> number2
recipe of at most two cuisine	SW.countComparative entity-en.recipe string-cuisine string-<= number2
what recipe calls for the fewest ingredients	SW.countSuperlative entity-en.recipe string-min string-requires entity-en.ingredient
show me recipes that take the same time to prepare as e0	SW.filter entity-en.recipe string-preparation_time string-= SW.getProperty e0 string-preparation_time
find a e0 recipe that was posted in d1	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-posting_date string-= d1
what recipes need e0	SW.filter entity-en.recipe string-requires string-= e0
what meal has two or more recipes	SW.countComparative entity-en.meal SW.reverse string-meal string->= number2 entity-en.recipe
show recipes posted on the same date or later than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
which recipes require at least two ingredients	SW.countComparative entity-en.recipe string-requires string->= number2 entity-en.ingredient
what recipe can make the most meals	SW.countSuperlative entity-en.recipe string-max string-meal entity-en.meal
show me recipes that require lesser cooking time than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
for which meal is e0 or e1 had	SW.filter entity-en.meal SW.reverse string-meal string-= SW.concat
for what meal is e0 or e1	SW.filter entity-en.meal SW.reverse string-meal string-= SW.concat
show me ingredients needed for e0 and e1	SW.filter entity-en.ingredient SW.reverse string-requires string-= SW.concat
what is a recipe that does not use e0 as an ingredient	SW.filter entity-en.recipe string-requires string-!= e0
what recipes are cooked in same time as e0	SW.filter entity-en.recipe string-cooking_time string-= SW.getProperty e0 string-cooking_time
what ingredient is called for by a recipe posted in d0	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
what meal can be made by two recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-= number2 entity-en.recipe
show me meal recipes including e0	SW.filter entity-en.recipe string-meal string-= ( SW.filter entity-en.meal SW.reverse string-meal string-= e0 )
what recipes require the same time or than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what recipe has a cook time less than the cook time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what is a meal with the most number of recipes	SW.countSuperlative entity-en.meal string-max SW.reverse string-meal entity-en.recipe
which recipe takes the maximum preparation time	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-cooking_time
show me recipes that need e0 and were posted in d1	SW.filter ( SW.filter entity-en.recipe string-requires string-= e0 ) string-posting_date string-= d1
show recipes that follow more than two cuisines	SW.countComparative entity-en.recipe string-cuisine string-> number2
what ingredient is there in less recipes	SW.countSuperlative entity-en.ingredient string-min SW.reverse string-requires entity-en.recipe
what is a recipe with a prep time less than the cooking time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what type of cuisine is e0	SW.getProperty e0 string-cuisine
recipe that first posted	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-posting_date
show me recipes for the most cuisines	SW.countSuperlative entity-en.recipe string-max string-cuisine
for what meals require less than two recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-< number2 entity-en.recipe
how much time it takes to cook e0	SW.getProperty e0 string-cooking_time
which recipes have less than two cuisines	SW.countComparative entity-en.recipe string-cuisine string-< number2
recipe for three or more meals	SW.countComparative entity-en.recipe string-meal string->= number2 entity-en.meal
what is an ingredient found in a recipe that was posted in d0	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
what is an ingredient found in no more than two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-<= number2 entity-en.recipe
what recipe calls for two ingredients	SW.countComparative entity-en.recipe string-requires string-= number2 entity-en.ingredient
how many meals do we have everyday	.size entity-en.meal
which is the most used ingredient in recipes	SW.countSuperlative entity-en.ingredient string-max SW.reverse string-requires entity-en.recipe
show me recipes with posting date before d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.concat )
what recipe has a cook time equal to the prep time of e0	SW.filter entity-en.recipe string-cooking_time string-= SW.getProperty e0 string-preparation_time
show me recipes for more than two meals	SW.countComparative entity-en.recipe string-meal string-> number2 entity-en.meal
what recipe is for two or fewer meals	SW.countComparative entity-en.recipe string-meal string-<= number2 entity-en.meal
how many total recipes are there	.size entity-en.recipe
what recipe has the most ingredients	SW.countSuperlative entity-en.recipe string-max string-requires entity-en.ingredient
tell me ingredients of e0	SW.filter ( SW.filter entity-en.ingredient SW.reverse string-requires string-= e0 ) SW.reverse string-requires string-= e0
what recipe is a recipe for e0	SW.filter entity-en.meal SW.reverse string-meal string-= ( SW.filter entity-en.recipe string-meal string-= e0 )
what recipe makes the fewest types of cuisine	SW.countSuperlative entity-en.recipe string-min string-cuisine
find all recipes posted after d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.concat )
how many recipes are there	.size entity-en.recipe
for what meal is e0 used	SW.filter ( SW.filter entity-en.meal SW.reverse string-meal string-= e0 ) SW.reverse string-meal string-= e0
show me recipes posted before any posting for e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
recipe cooked in less time than e0 preparation	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
for which meal is that recipe with post date in d0	SW.filter entity-en.meal SW.reverse string-meal string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
show me recipes with the least cooking time	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-cooking_time
show me recipes posted after d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.concat )
what recipe was posted last	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-posting_date
which recipe has a posting date smaller than d0 or d1	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.concat )
ingredient in e0 and e1	SW.filter entity-en.ingredient SW.reverse string-requires string-= SW.concat
what is the mean cooking time for the recipe	string-avg SW.getProperty entity-en.recipe string-cooking_time
what are the recipes posted in2004 or d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.concat )
when was e0 posted	SW.getProperty e0 string-posting_date
how long is the average preparation time for the recipe	string-avg SW.getProperty entity-en.recipe string-preparation_time
what recipe is prepared in preparation time of e0 or earlier	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
show me recipes with cooking time equal to preparation time for e0	SW.filter entity-en.recipe string-cooking_time string-= SW.getProperty e0 string-preparation_time
what meal has more than two recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-> number2 entity-en.recipe
what ingredients are used by at least two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string->= number2 entity-en.recipe
find recipes posted in d0	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d0 ) string-posting_date string-= d0
show me recipes for the most meals	SW.countSuperlative entity-en.recipe string-max string-meal entity-en.meal
find two meal recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-<= number2 entity-en.recipe
show me recipes for at least two meals	SW.countComparative entity-en.recipe string-meal string->= number2 entity-en.meal
what recipes are for the same meal as e0	SW.filter entity-en.recipe string-meal string-= ( SW.filter entity-en.meal SW.reverse string-meal string-= e0 )
show me recipes that have shorter cooking times than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
which recipe has a cooking time as that of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what ingredients are needed for e0 recipes	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-meal string-= e0 )
name e0 recipes	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-meal string-= e0
what recipe was posted before d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.concat )
recipe requires less than three ingredients	SW.countComparative entity-en.recipe string-requires string-<= number2 entity-en.ingredient
a recipe that uses two or more ingredients	SW.countComparative entity-en.recipe string-requires string->= number2 entity-en.ingredient
ingredient required by recipe whose posting date is d0	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
what recipe posted in d0 calls for e0	SW.filter ( SW.filter entity-en.recipe string-requires string-= e0 ) string-posting_date string-= d0
how long does e0 take to cook	SW.getProperty e0 string-cooking_time
show me the recipe that has the most number of requirements	SW.countSuperlative entity-en.recipe string-max string-requires entity-en.ingredient
what recipe has the same cooking time as e0	SW.filter entity-en.recipe string-cooking_time string-= SW.getProperty e0 string-cooking_time
recipes posted till d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity d0 )
what recipe was posted during or before d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity d0 )
which recipes have at most two cuisines	SW.countComparative entity-en.recipe string-cuisine string-<= number2
what ingredient is used only in a single recipe	SW.countComparative entity-en.ingredient SW.reverse string-requires string-< number2 entity-en.recipe
what recipe is not e0	SW.filter entity-en.recipe string-meal string-!= e0
what is the cooking time of recipe	string-sum SW.getProperty entity-en.recipe string-cooking_time
show me recipes posted during d0 and d1	SW.filter entity-en.recipe string-posting_date string-= SW.concat
cooking time of recipe	string-sum SW.getProperty entity-en.recipe string-cooking_time
what is a meal with e0 as a dish	SW.filter entity-en.meal SW.reverse string-meal string-= e0
what is the total preparation time of all the recipes	string-sum SW.getProperty entity-en.recipe string-preparation_time
what are the recipes for e0	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-meal string-= e0
what recipe calls for fewer than two ingredients	SW.countComparative entity-en.recipe string-requires string-< number2 entity-en.ingredient
what recipes cooking time is longer than that of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what recipes posting date is no greater than that of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
which recipe needs a minimum of two ingredients	SW.countComparative entity-en.recipe string-requires string->= number2 entity-en.ingredient
meal than has e0 or e1	SW.filter entity-en.meal SW.reverse string-meal string-= SW.concat
what is a recipe which was posted no later than d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity d0 )
show me recipes that involve two cuisines	SW.countComparative entity-en.recipe string-cuisine string-= number2
which recipes make at least 2 meals	SW.countComparative entity-en.recipe string-meal string->= number2 entity-en.meal
how long does e0 take to prep	SW.getProperty e0 string-preparation_time
what meal has fewer than two recipes to make it	SW.countComparative entity-en.meal SW.reverse string-meal string-< number2 entity-en.recipe
what recipe has e0 as an ingredient	SW.filter ( SW.filter entity-en.recipe string-requires string-= e0 ) string-requires string-= e0
show me meals for one	SW.countSuperlative entity-en.meal string-min SW.reverse string-meal entity-en.recipe
what recipe makes the fewest meals	SW.countSuperlative entity-en.recipe string-min string-meal entity-en.meal
what recipe falls under two cuisines	SW.countComparative entity-en.recipe string-cuisine string-= number2
show me recipes that use less than two ingredients	SW.countComparative entity-en.recipe string-requires string-< number2 entity-en.ingredient
which recipes have two cuisines	SW.countComparative entity-en.recipe string-cuisine string-= number2
what is a meal for which there are fewer than two recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-< number2 entity-en.recipe
what recipe was posted in d0	SW.filter entity-en.recipe string-posting_date string-= d0
show me recipes with two ingedients	SW.countComparative entity-en.recipe string-cuisine string-= number2
the receipe is for two meal	SW.countComparative entity-en.recipe string-meal string-= number2 entity-en.meal
what recipe uses e0 or e1 as an ingredient	SW.filter entity-en.recipe string-requires string-= SW.concat
what does the recipe posted in d0 require	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
recipes posted before d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity d0 )
what recipes require no more than two ingredients	SW.countComparative entity-en.recipe string-requires string-<= number2 entity-en.ingredient
show me recipes for e0 posted in d1	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-posting_date string-= d1
what ingredients do e0 recipes need	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-meal string-= e0 )
show me recipes that need e0	SW.filter ( SW.filter entity-en.recipe string-requires string-= e0 ) string-requires string-= e0
show me recipes with cooking time greater than preparation time for e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what to prefer e0 or e1	SW.concat
what is the average preparation time of that recipe	string-avg SW.getProperty entity-en.recipe string-preparation_time
which recipe needs less than two food items for its preparation	SW.countComparative entity-en.recipe string-requires string-< number2 entity-en.ingredient
show me recipes posted in or before d0 or in or before d1	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.concat )
what e0 recipe uses e1 as an ingredient	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-requires string-= e1
what recipe is used in the greatest number of cuisines	SW.countSuperlative entity-en.recipe string-max string-cuisine
show me meals including e0	SW.filter entity-en.meal SW.reverse string-meal string-= e0
which recipes were posted at the same time as e0	SW.filter entity-en.recipe string-posting_date string-= SW.getProperty e0 string-posting_date
meal with more than two recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-> number2 entity-en.recipe
show me all the recipes posted in d0	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d0 ) string-posting_date string-= d0
what restaurant serves two different types of cuisines	SW.countComparative entity-en.restaurant string-cuisine string-= number2
a restaurant with waiter service	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-waiter
which restaurant has takeout service	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-takeout
restaurants that serve e0 and takeout	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-takeout
what are some restaurants rated 2 dollar signs or more	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string->= ( SW.ensureNumericEntity number2 en.dollar_sign )
restaurants with the most locations in the area	SW.countSuperlative entity-en.restaurant string-max string-neighborhood
what 3 star restaurant has waiter service	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-star_rating string-= number3 en.star
restaurants that serve e0 and accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-credit
list all restaurants that have ratings above 2	SW.filter entity-en.restaurant string-price_rating string-!= number2 en.dollar_sign
what cuisine does the restaurant with reservations have	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-reserve )
restaurants with waiter service	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-waiter )
cuisine that is cuisine of e0 and that is cuisine of e0	SW.filter ( SW.filter entity-en.cuisine SW.reverse string-cuisine string-= e0 ) SW.reverse string-cuisine string-= e0
list all e0 restaurants in e1	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-neighborhood string-= e1
what is the average price rating of a restaurant	string-avg SW.getProperty entity-en.restaurant string-price_rating
this restaurant has the most amount of cuisines	SW.countSuperlative entity-en.restaurant string-max string-cuisine
restaurants with takeout that are group friendly	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-groups
what are some restaurants serving any cuisine except e0	SW.filter entity-en.restaurant string-cuisine string-!= e0
cuisine unlike e0	SW.filter entity-en.cuisine SW.reverse string-cuisine string-!= e0
what is a kid friendly restaurant that serves e0	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-kids
what is the cuisine of the restaurants with three star ratings	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star )
restaurants rated 3 stars	SW.filter entity-en.restaurant string-star_rating string-= number3 en.star
what restaurants are not in e0	SW.filter entity-en.restaurant string-neighborhood string-!= e0
which restaurants have price ratings above or below two dollar signs	SW.filter entity-en.restaurant string-price_rating string-!= number2 en.dollar_sign
what restaurants have at least 2 meals on the menu	SW.countComparative entity-en.restaurant string-meals string-= number2 entity-en.food
30 reviews or 40 reviews	SW.concat
restaurant whose star rating is at most star rating of e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-star_rating  )
restaurant whose cuisine is e0 and that has outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-outdoor
what restaurants offer outdoor seating and takes reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-outdoor
a reservation e0 restaurant	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-reserve
which restaurants have takeout and serve e0	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-meals string-= e0
restaurants that are not open for e0	SW.filter entity-en.restaurant string-meals string-!= e0
e0 restaurant for many people	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-groups
restaurant that is good for kids and whose cuisine is e0	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-cuisine string-= e0
which restaurants serve e0 and have an outdoor dining area	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-meals string-= e0
what are some restaurants that are rated between 3 and 5 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-> ( SW.ensureNumericEntity SW.concat )
neighborhoods with more than 2 restauraunts	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-> number2 entity-en.restaurant
restaurant that serves e0 and whose star rating is 3 stars	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-star_rating string-= number3 en.star
which restaurant offers fewer than two types of cuisine	SW.countComparative entity-en.restaurant string-cuisine string-< number2
what 3 star restaurant offers delivery	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-star_rating string-= number3 en.star
groupfriendly restaurants that accept reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-groups
3 star restaurants that offer takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-star_rating string-= number3 en.star
what kind of cuisine has at least two restaurants	SW.countComparative entity-en.cuisine SW.reverse string-cuisine string-= number2 entity-en.restaurant
the restaurant that is midtown serves e0 food	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-neighborhood string-= en.neighborhood.midtown_west
what kind of meals do 2 dollar signs rated restaurants serve	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign )
restaurants in e0 with an outdoor dining area	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-outdoor
what restaurant is in two neighborhoods	SW.countComparative entity-en.restaurant string-neighborhood string-= number2
restaurants that take credit and deliver	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-credit
the 3 star restaurant is good for groups	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-star_rating string-= number3 en.star
cuisine that is cuisine of restaurant that is good for groups	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-groups )
what 2 dollar signs restaurant offers delivery	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-price_rating string-= number2 en.dollar_sign
restaurant that has takeout and that has waiter service	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-waiter
what restaurants take credit cards and deliver	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-delivery
restaurant in the area that has a 2 dollar sign price rating	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign )
what is the price rating of the e0	SW.getProperty e0 string-price_rating
restaurants similar to restaurants in e0	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-neighborhood string-= e0 )
what restaurant is group friendly and takes a credit card	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-credit
a restaurant with delivery for a large group	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-groups
what neighborhoods have restaurants that are good for large parties	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-groups )
what restaurants serve good food for groups and have takeout	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-takeout
restaurants that accept reservations and offer takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-reserve
restaurant that has the most number of neighborhood	SW.countSuperlative entity-en.restaurant string-max string-neighborhood
restaurants that are better for takeout	SW.countSuperlative entity-en.restaurant string-min string-meals entity-en.food
restaurant that has delivery and that serves e0	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-meals string-= e0
what 2 dollar signs offers e0	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-meals string-= e0
price rating of e0	SW.getProperty e0 string-price_rating
restaurant whose neighborhood is e0 and that serves e1	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-meals string-= e1
restaurants with 3star ratings that have waiters	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-waiter
what restaurant is good for groups and offers outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-groups
list all restaurants similar to the cuisine of e0	SW.filter entity-en.restaurant string-cuisine string-= SW.getProperty e0 string-cuisine
a restaurant with alot of meals	SW.countSuperlative entity-en.restaurant string-max string-meals entity-en.food
group friendly restaurants rated 3 stars	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-star_rating string-= number3 en.star
restaurant whose neighborhood is e0 and whose star rating is 3 stars	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-star_rating string-= number3 en.star
restaurants with the same or higher star rating as e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-star_rating  )
what restaurants have less than a 3 star rating	SW.filter entity-en.restaurant string-star_rating string-!= number3 en.star
what restaurants accept credit cards	SW.filter entity-en.restaurant string-credit
restaurant that delivers and accepts credit cards	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-credit
restaurant whose price rating is 2 dollar signs and also accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-price_rating string-= number2 en.dollar_sign
restaurant that has delivery and whose cuisine is e0	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-cuisine string-= e0
restaurants that cheaper than e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-price_rating  )
which meal does a e0 not serve	SW.filter entity-en.food SW.reverse string-meals string-!= e0
restaurant that takes reservations and that has waiter service	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-waiter
what restaurants offer waiter service	SW.filter entity-en.restaurant string-waiter
restaurant with two cuisines	SW.countComparative entity-en.restaurant string-cuisine string-= number2
e0 restaurants with optional outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-outdoor
what e0 restaurants takes reservations	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-reserve
neighborhood with the least number of restaurants	SW.countSuperlative entity-en.neighborhood string-min SW.reverse string-neighborhood entity-en.restaurant
restaurant in e0 for kids	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-neighborhood string-= e0
e0 restaurants that accept reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-cuisine string-= e0
restaurants with food not like e0	SW.filter entity-en.cuisine SW.reverse string-cuisine string-!= e0
which restaurant has waiter and takeout service	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-waiter
which neighborhoods have restaurants that serve e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-meals string-= e0 )
which 3 star restaurants have outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-star_rating string-= number3 en.star
hotel which has a price rating of 2 dollar signs and offers delivery services	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-delivery
has a 2 or 3 dollar sign rating	SW.concat
restaurant whose star rating is 3 stars and that is good for kids	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-kids
a restaurant for kids in e0	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-kids
which restaurants accept credit cards for payment and also have takeout service	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-takeout
what e0 restaurant has e1	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e1 ) string-cuisine string-= e0
three star restaurants that serve e0	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-star_rating string-= number3 en.star
restaurants with no more than two cuisines	SW.countComparative entity-en.restaurant string-cuisine string-<= number2
what restaurants have a rating better than 3 or 5 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-> ( SW.ensureNumericEntity SW.concat )
restaurant whose neighborhood is e0 and that takes reservations	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-reserve
which restaurants with a 2 dollar price rating offer takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-price_rating string-= number2 en.dollar_sign
restaurants with delivery for e0	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-meals string-= e0
what is a 3 star restaurant that is kid friendly	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-star_rating string-= number3 en.star
a e0 or e1 restaurant	SW.filter entity-en.restaurant string-cuisine string-= SW.concat
what is the cuisine of the restaurant with waiter service	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-waiter )
restaurant that takes reservations and that is good for groups	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-groups
restaurant whose cuisine is e0 and that is good for kids	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-kids
list by type of cuisine the restaurants that serve e0	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-meals string-= e0 )
hotel  that that has the star rating of e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-star_rating  )
find a restaurant good for groups that has a 2 dollar price rating	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-groups
what restaurant has the smallest number of cuisines	SW.countSuperlative entity-en.restaurant string-min string-cuisine
restaurants rated 3 stars in e0	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-star_rating string-= number3 en.star
how many restaurants are there total	.size entity-en.restaurant
what 3 star restaurants have a price rating of 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-star_rating string-= number3 en.star
what good kids restaurant is in the e0 area	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-neighborhood string-= e0
what restaurant offers reservations and is good for kids	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-reserve
what restaurant has 2 menu items and takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-credit
kidfriendly restaurants that accept reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-kids
restaurants that are group friendly	SW.filter entity-en.restaurant string-groups
restaurants that serve less than one meal	SW.countComparative entity-en.food SW.reverse string-meals string-< number2 entity-en.restaurant
restaurant that is cheaper than e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-price_rating  )
which restaurants serve e0 and have a 2 dollar sign price rating	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-price_rating string-= number2 en.dollar_sign
restaurants that offer takeout	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-takeout )
what is a meal served by a restaurant that accepts reservations	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-reserve )
which cuisines match that of the e0	SW.filter ( SW.filter entity-en.cuisine SW.reverse string-cuisine string-= e0 ) SW.reverse string-cuisine string-= e0
e0 restaurants that have takeout	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-takeout
restaurants with the same price rating as e0	SW.filter entity-en.restaurant string-price_rating string-= SW.getProperty e0 string-price_rating
what restaurant is good for groups and has waiter service	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-groups
restaurants that are in the neighborhood of e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-neighborhood string-= e0 )
meals that few restaurants serve	SW.countSuperlative entity-en.food string-min SW.reverse string-meals entity-en.restaurant
what restaurant has outdoor seating and a 2 dollar price rating	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-outdoor
hotel that has the minimum star rating	SW.superlative entity-en.restaurant string-min SW.ensureNumericProperty string-star_rating
what is a meal served by no more than two restaurants	SW.countComparative entity-en.food SW.reverse string-meals string-<= number2 entity-en.restaurant
what good kids restaurant has delivery	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-kids
what restaurant offers e0 and takes reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-meals string-= e0
what is a meal served by the e0	SW.filter entity-en.food SW.reverse string-meals string-= e0
hotel that has waiter service  and take out facilities	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-takeout
restaurant that has waiter service and whose neighborhood is e0	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-neighborhood string-= e0
what cuisine has the least amount of restaurants	SW.countSuperlative entity-en.cuisine string-min SW.reverse string-cuisine entity-en.restaurant
restaurant whose star rating is at least star rating of e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-star_rating  )
what restaurants offer waiter service and takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-waiter
restaurant that takes credit cards and that takes reservations	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-reserve
restaurant whose neighborhood is e0 and whose cuisine is e1	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-cuisine string-= e1
restaurants that are good for groups and offer takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-groups
what restaurants take credit cards and offers waiter service	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-credit
which restaurant in e0 has a 3star rating	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-neighborhood string-= e0
restaurants that have outdoor seating and that deliver	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-delivery
restaurants where you can sit outside	SW.filter entity-en.restaurant string-outdoor
which e0 restaurant takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-cuisine string-= e0
what restaurant serves cuisine and takes credit cards	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-credit )
restaurant that has takeout and that serves e0	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-meals string-= e0
what restaurants serve at least two cuisines	SW.countComparative entity-en.restaurant string-cuisine string->= number2
restaurant that is good for groups and that takes reservations	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-reserve
restaurant that serves e0 and that has takeout	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-takeout
what are the cuisines of all the 3 star rating restaurants	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star )
what meal is good to be served for groups	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-groups )
which restaurants have the same star rating as e0	SW.filter entity-en.restaurant string-star_rating string-= SW.getProperty e0 string-star_rating
e0 restaurant that is open for e1	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-meals string-= e1
which restaurants are kid friendly	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-kids
what is a meal served by a restaurant that accommodates groups	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-groups )
what restaurant offers reservations and serves e0	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-reserve
restaurants that take reservations and have waiters	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-waiter
which resturants are good for groups	SW.filter entity-en.restaurant string-groups
restaurant that has takeout and that has outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-outdoor
which restaurants serve two meals	SW.countComparative entity-en.restaurant string-meals string-= number2 entity-en.food
find a restaurant in a neighborhood	SW.countComparative entity-en.restaurant string-neighborhood string-< number2
what cuisine is present at more than two restaurants	SW.countComparative entity-en.cuisine SW.reverse string-cuisine string-> number2 entity-en.restaurant
what restaurant takes credit cards in e0 area	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-neighborhood string-= e0
e0 restaurants that are inexpensive	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-cuisine string-= e0
which restaurants are rated the same or below e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-star_rating  )
which restaurants serve e0 or e1	SW.filter entity-en.restaurant string-meals string-= SW.concat
what 3 star restaurant is good for kids	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-kids
neighborhood that is neighborhood of e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= e0
restaurant whose price rating is larger than 2 dollar signs or 3 dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-> ( SW.ensureNumericEntity SW.concat )
what is meal served in at least two restaurants	SW.countComparative entity-en.food SW.reverse string-meals string->= number2 entity-en.restaurant
restaurant which serves e0 and accepts credit cards	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-credit
what is the price rating of e0	SW.getProperty e0 string-price_rating
what restaurant can i make reservations at that takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-reserve
restaurants that take credit cards and serve e0	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-meals string-= e0
a restaurant that has at least a two star rating and does takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-price_rating string-= number2 en.dollar_sign
e0 cuisine restaurant which serves e1	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-meals string-= e1
restaurants for groups with delivery	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-delivery
restaurant that takes reservations and that has delivery	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-delivery
restaurant whose star rating is 3 stars and that takes reservations	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-reserve
which resturant has a smaller star rating than thia cafe	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-< ( SW.ensureNumericEntity SW.getProperty en.restaurant.thai_cafe string-star_rating  )
list all restaurants that serves less than two meals	SW.countComparative entity-en.restaurant string-meals string-< number2 entity-en.food
cuisine that is cuisine of restaurant that takes reservations	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-reserve )
what are some restaurants that doesnt serve e0	SW.filter entity-en.restaurant string-cuisine string-!= e0
restaurant whose star rating is star rating of e0	SW.filter entity-en.restaurant string-star_rating string-= SW.getProperty e0 string-star_rating
restaurant that has takeout and that has delivery	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-delivery
restaurant that is at least 3 stars and kid friendly	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-star_rating string-= number3 en.star
what are some kidfriendly restaurants that accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-credit
2 dollar signed rated restaurants for kids	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-price_rating string-= number2 en.dollar_sign
restaurants has rating below 3 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-<= ( SW.ensureNumericEntity SW.concat )
which resturants have a price rating of at most two or three dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-<= ( SW.ensureNumericEntity SW.concat )
what meal does the restaurant with a 2 dollar price rating serve	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign )
which neighborhoods is e0 not in	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-!= e0
what restaurant has takeout and a 2 dollar price rating	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-takeout
which restaurant in e0 has outdoor seating available	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-neighborhood string-= e0
what restaurant offers outdoor seating and delivery	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-outdoor
kidfriendly restaurants that are rated 3 stars	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-kids
restaurant that has delivery and that has takeout	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-takeout
which restaurant has fewer than 3 or 5 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-< ( SW.ensureNumericEntity SW.concat )
which restaurants take credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-credit
neighborhood of e0	SW.getProperty e0 string-neighborhood
what good kids restaurant has a 2 dollar price rating	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-price_rating string-= number2 en.dollar_sign
what restaurants take reservations and offer takeout	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-takeout
restaurant with delivery that has a 2 dollar sign rating	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-price_rating string-= number2 en.dollar_sign
what places serve food that is not e0	SW.filter entity-en.cuisine SW.reverse string-cuisine string-!= en.restaurant.thai_cafe
restaurants with 2 price rating that is groupfriendly	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-price_rating string-= number2 en.dollar_sign
what restaurant offers outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-outdoor
e0 restaurants rated 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-cuisine string-= e0
restaurants with no more than 2 locations	SW.countComparative entity-en.restaurant string-neighborhood string-<= number2
restaurant that serves e0 or e1	SW.filter entity-en.restaurant string-meals string-= SW.concat
restaurants with 2 and lower price rating	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-<= ( SW.ensureNumericEntity number2 en.dollar_sign )
restaurants that serve the same cuisine	SW.countComparative entity-en.cuisine SW.reverse string-cuisine string-< number2 entity-en.restaurant
restaurant that has takeout and that takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-credit
restaurants with outdoor seating and takeout	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-takeout
a restaurant in west midtown or e0	SW.filter entity-en.restaurant string-neighborhood string-= SW.concat
which neighborhoods have restaurants with a 2 dollar sign price rating	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign )
e0 restaurant that takes reservations	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-reserve
retaurant with less number of neighbourhood	SW.countSuperlative entity-en.restaurant string-min string-neighborhood
restaurant that takes credit cards and that is good for kids	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-kids
what restaurant has the more cuisine then any other	SW.countSuperlative entity-en.restaurant string-max string-cuisine
which restaurant has waiters and also offers takeout	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-takeout
restaurants that take credit cards and reservations	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-reserve
list all restaurants that are cheaper than 2 dollar signs or 3 star dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-< ( SW.ensureNumericEntity SW.concat )
restaurants rated 3 stars or higher	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string->= ( SW.ensureNumericEntity number3 en.star )
a restaurant rated 2 dollar signs for e0	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-meals string-= e0
restaurants that deliver and serve e0	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-meals string-= e0
what restaurant is good for e0 or e1	SW.filter entity-en.restaurant string-meals string-= SW.concat
restaurants with outdoor seating and is good for groups	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-groups
which 3 star rated restaurant has outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-star_rating string-= number3 en.star
restaurants that deliver and have waiter service	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-waiter
which restaurant is not located in e0	SW.filter entity-en.restaurant string-neighborhood string-!= e0
what restaurant is open for e0 and contains outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-meals string-= e0
meal that the most number of restaurant serves	SW.countSuperlative entity-en.food string-max SW.reverse string-meals entity-en.restaurant
neighborhood that is neighborhood of restaurant that is good for groups	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-groups )
the e0 restaurant takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-credit
restaurants that take reservations and are good for groups	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-reserve
what are the hotels found in e0 or e1	SW.filter entity-en.restaurant string-neighborhood string-= SW.concat
which resturant is good for kids	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-kids
restaurant that has outdoor seating and that has outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-outdoor
restaurant with no more than two cuisines	SW.countComparative entity-en.restaurant string-cuisine string-<= number2
e0 restaurant which has a 3 star rating	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-cuisine string-= e0
which restaurants have waiters and a price rating of two dollar signs	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-price_rating string-= number2 en.dollar_sign
restaurant that has delivery and whose price rating is 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-price_rating string-= number2 en.dollar_sign
restaurants with takeout that are good for large parties	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-takeout
what restaurants offer reservations and also have carryout	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-takeout
restaurants that have outdoor seating	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-outdoor )
a restaurant for e0 or e1	SW.concat
what2 dollar sign restaurant has outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-price_rating string-= number2 en.dollar_sign
what restaurant serves two meals	SW.countComparative entity-en.food SW.reverse string-meals string-= number2 entity-en.restaurant
e0 restaurants with takeout	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-takeout
restaurants price rated 2 dollar signs or less	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-<= ( SW.ensureNumericEntity number2 en.dollar_sign )
which restaurant has a price rating of two dollar signs and has outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-outdoor
list all e0 restaurants offering e1	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-meals string-= e1
what restaurant is amenable to children and has delivery	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-delivery
what restaurant takes reservations	SW.filter entity-en.restaurant string-reserve
restaurants with multiple cuisines	SW.countSuperlative entity-en.restaurant string-max string-cuisine
which resturant in e0 has waiter service	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-neighborhood string-= e0
what same meals do all the other restaurants serve	SW.countSuperlative entity-en.food string-max SW.reverse string-meals entity-en.restaurant
what are some e0 restaurants in e1	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e1 ) string-cuisine string-= e0
name an article from the annals of e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-venue string-= e0 )
article that cites more than two article	SW.countComparative entity-en.article string-cites string-> number2 entity-en.article
find any article that e0 didnt write	SW.filter entity-en.article string-author string-!= e0
articles written by fewer than two people	SW.countComparative entity-en.article string-author string-< number2
who is and author of e0	SW.filter ( SW.filter entity-en.person SW.reverse string-author string-= e0 ) SW.reverse string-author string-= e0
what article was published in d0 or earlier	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-<= ( SW.ensureNumericEntity SW.concat )
articles cited by e0 and published in annals of e1	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-venue string-= e1
who is someone that has not authored an article about e0	SW.filter entity-en.person SW.reverse string-author string-!= e0
articles published in d0 that have won an award	SW.filter ( SW.filter entity-en.article string-won_award ) string-publication_date string-= d0
writers of more than two articles	SW.countComparative entity-en.person SW.reverse string-author string-> number2 entity-en.article
which article was published after d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-> ( SW.ensureNumericEntity d0 )
article that cite articles published in d0	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
which publication contains two articles	SW.countComparative entity-en.venue SW.reverse string-venue string-= number2 entity-en.article
where can you see e0	SW.getProperty e0 string-venue
which article is cited by the most number of articles	SW.countSuperlative entity-en.article string-max SW.reverse string-cites entity-en.article
article that cites three or more articles	SW.countComparative entity-en.article SW.reverse string-cites string-> number2 entity-en.article
author of one or two articles	SW.countComparative entity-en.person SW.reverse string-author string-<= number2 entity-en.article
articles cited by e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-author string-= e0 )
article that is published in d0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) string-publication_date string-= d0
articles with more than two authors	SW.countComparative entity-en.article string-author string-> number2
name a person who is the author of an article about e0	SW.filter ( SW.filter entity-en.person SW.reverse string-author string-= e0 ) SW.reverse string-author string-= e0
writers of articles citing e0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
in what publication was e0 published	SW.filter entity-en.venue SW.reverse string-venue string-= e0
articles published in two or more venues	SW.countComparative entity-en.article string-venue string->= number2
article published before e0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
what article about annals and e0 has a publication ate of d1	SW.filter ( SW.filter entity-en.article string-publication_date string-= d1 ) string-venue string-= e0
an article that cites e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
what article is about e0	SW.filter entity-en.article string-venue string-= ( SW.filter entity-en.venue SW.reverse string-venue string-= e0 )
what article has two authors or less	SW.countComparative entity-en.article string-author string-<= number2
venues of two articles or fewer	SW.countComparative entity-en.venue SW.reverse string-venue string-<= number2 entity-en.article
venues of fewer than two articles	SW.countComparative entity-en.venue SW.reverse string-venue string-< number2 entity-en.article
articles not written by e0	SW.filter entity-en.article string-author string-!= e0
what article has two other articles cited within it	SW.countComparative entity-en.article SW.reverse string-cites string-= number2 entity-en.article
article by the same author of e0	SW.filter entity-en.article string-author string-= ( SW.filter entity-en.person SW.reverse string-author string-= e0 )
what article was cited twice	SW.countComparative entity-en.article SW.reverse string-cites string-= number2 entity-en.article
article whose publication date is at least d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string->= ( SW.ensureNumericEntity d0 )
name an article about e0 from the annals of e1	SW.filter ( SW.filter entity-en.article string-cites string-= e0 ) string-venue string-= e1
articles written by e0 or e1	SW.filter entity-en.article string-author string-= SW.concat
what article has a publication date of at least d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string->= ( SW.ensureNumericEntity d0 )
what article published in d0 was cited by e0	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-publication_date string-= d0
what article has the least authors	SW.countSuperlative entity-en.article string-min string-author
articles with two venues	SW.countComparative entity-en.article string-venue string-= number2
articles published in d0 cited by e0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) SW.reverse string-cites string-= e0
who is the author of less than two articles	SW.countComparative entity-en.person SW.reverse string-author string-< number2 entity-en.article
venue of only one article	SW.countComparative entity-en.venue SW.reverse string-venue string-< number2 entity-en.article
articles not cited by e0	SW.filter entity-en.article SW.reverse string-cites string-!= e0
articles that were not published in d0	SW.filter entity-en.article string-publication_date string-!= d0
awardwinning articles cited in articles using e0	SW.filter ( SW.filter entity-en.article string-won_award ) SW.reverse string-cites string-= e0
what is an article written by only one author	SW.countComparative entity-en.article string-author string-< number2
what article cites at least two other articles	SW.countComparative entity-en.article string-cites string->= number2 entity-en.article
what article cites an article cited by e0	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
article with author of e0	SW.filter entity-en.article string-author string-= SW.getProperty e0 string-author
what venue is e0 in	SW.filter entity-en.venue SW.reverse string-venue string-= e0
who wrote e0 more than once	SW.filter ( SW.filter entity-en.person SW.reverse string-author string-= e0 ) SW.reverse string-author string-= e0
award winning article publication venue	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-won_award )
articles published in d0 citing e0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) string-cites string-= e0
article with publication date as d0 and has the venue as annals of e0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) string-venue string-= e0
what d0 article was cited by e0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) SW.reverse string-cites string-= e0
what article was published on or after e0 was	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
venues other than the e0 venue	SW.filter entity-en.venue SW.reverse string-venue string-!= e0
article that e0 cites	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) SW.reverse string-cites string-= e0
articles written by one or two authors	SW.countComparative entity-en.article string-author string-<= number2
articles published in annals of e0 in d1	SW.filter ( SW.filter entity-en.article string-venue string-= e0 ) string-publication_date string-= d1
what article was written by e0 and has a publication date of d1	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-publication_date string-= d1
articles written by e0 citing e1	SW.filter ( SW.filter entity-en.article string-cites string-= e1 ) string-author string-= e0
article with more than two venue	SW.countComparative entity-en.article string-venue string-> number2
articles written by e0 published in d1	SW.filter ( SW.filter entity-en.article string-publication_date string-= d1 ) string-author string-= e0
find an article with no more than two venues	SW.countComparative entity-en.article string-venue string-<= number2
articles published in the fewest places	SW.countSuperlative entity-en.article string-min string-venue
which article has a publication date the same as e0	SW.filter entity-en.article string-publication_date string-= SW.getProperty e0 string-publication_date
article that does not cite e0	SW.filter entity-en.article SW.reverse string-cites string-!= e0
articles with a venue	SW.countComparative entity-en.article string-venue string-< number2
name articles in annals of e0	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-venue string-= e0 )
article that cites e0 in the annals of e1	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-venue string-= e1
what award winning article is cited by e0	SW.filter ( SW.filter entity-en.article string-won_award ) SW.reverse string-cites string-= e0
find an article published after d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-> ( SW.ensureNumericEntity SW.concat )
articles cited by e0 and written by e1	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-author string-= e1
articles authored by e0	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-author string-= e0
what article has the least number of authors	SW.countSuperlative entity-en.article string-min string-author
find an article that cites more than two articles	SW.countComparative entity-en.article string-cites string-> number2 entity-en.article
an article with the latest publication date	SW.superlative entity-en.article string-max SW.ensureNumericProperty string-publication_date
venue that is mentioned in at least  two articles	SW.countComparative entity-en.venue SW.reverse string-venue string->= number2 entity-en.article
article written by e0 that is cited by e1	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e1 ) string-author string-= e0
what is the persons number	.size entity-en.person
articles published after d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-> ( SW.ensureNumericEntity SW.concat )
name an article by e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-author string-= e0 )
what venue has the fewest articles	SW.countSuperlative entity-en.venue string-min SW.reverse string-venue entity-en.article
publications that include articles published in d0	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
what is a venue with fewer than two articles	SW.countComparative entity-en.venue SW.reverse string-venue string-< number2 entity-en.article
articles written by e0 or e1	SW.filter entity-en.article string-author string-= SW.concat
articles published from d0 to d1	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string->= ( SW.ensureNumericEntity SW.concat )
name an article found in two publications	SW.countComparative entity-en.article string-venue string-= number2
name a person who has written no more than two articles	SW.countComparative entity-en.person SW.reverse string-author string-<= number2 entity-en.article
what author wrote two or more articles	SW.countComparative entity-en.person SW.reverse string-author string->= number2 entity-en.article
what article is written by e0	SW.filter entity-en.article string-author string-= e0
article with two authors	SW.countComparative entity-en.article string-author string-= number2
most recently published article	SW.superlative entity-en.article string-max SW.ensureNumericProperty string-publication_date
find an article published in d0	SW.filter entity-en.article string-publication_date string-= d0
article whose publication date is at most publication date of e0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
who is the author of whose venue is annals of e0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-venue string-= e0 )
article whose publication date is d0 and cited by e0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) SW.reverse string-cites string-= e0
name someone who is not the author of an article about e0	SW.filter entity-en.person SW.reverse string-author string-!= e0
any article that mentions award winning article	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article string-won_award )
what is the date of publication  for e0	SW.getProperty e0 string-publication_date
authors who published their works in d0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
article published in d0 and that cites e0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) string-cites string-= e0
what venues cite e0	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-cites string-= e0 )
article that mentions at least two other articles	SW.countComparative entity-en.article string-cites string-<= number2 entity-en.article
article not citing e0	SW.filter entity-en.article SW.reverse string-cites string-!= e0
name an article published in d0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
who wrote the most articles	SW.countSuperlative entity-en.person string-max SW.reverse string-author entity-en.article
venue of the e0 article	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-author string-= e0 )
article whose publication date is d0 and whose author is e0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) string-author string-= e0
article published after d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-> ( SW.ensureNumericEntity SW.concat )
article cited bymultivariate data analysis whose venue is annals of e0	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= en.article.multivariate_data_analysis ) string-venue string-= e0
articles published in the same publication as e0	SW.filter entity-en.article string-venue string-= SW.getProperty e0 string-venue
article whose author is author of e0	SW.filter entity-en.article string-author string-= SW.getProperty e0 string-author
articles published contemporaneous to or after the e0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
article that at least two article cites	SW.countComparative entity-en.article SW.reverse string-cites string->= number2 entity-en.article
what article cites other articles about annals of e0	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article string-venue string-= e0 )
what article about e0 was published in d1	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-publication_date string-= d1
articles cited by fewer than two articles	SW.countComparative entity-en.article SW.reverse string-cites string-< number2 entity-en.article
articles written by at least two authors	SW.countComparative entity-en.article string-author string->= number2
authors of awardwinning articles	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-won_award )
article published on date of e0	SW.filter entity-en.article string-publication_date string-= SW.getProperty e0 string-publication_date
what article cites an article cited in e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
name an author of at least two articles	SW.countComparative entity-en.person SW.reverse string-author string->= number2 entity-en.article
name an article from the annals of e0 about e1	SW.filter ( SW.filter entity-en.article string-cites string-= e1 ) string-venue string-= e0
find players with assist scores over any given season that tally more than 3	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-> ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
player with less points over a season than that of player e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
whos averaged no more than 3 rebounds each season	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-<= ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
which year d0 or d1	SW.concat
how many fouls were played by e0 after getting 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_fouls
who has more than 3 assists to their credit per season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-> ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
which player averages more turnovers each season than e0	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
number of points over a season of player e0 who has 3 fouls over a season	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_points
how many steals did e0 have from point guards from any team	SW.getProperty ( SW.filter string-player  string-position string-= en.position.point_guard ) string-num_steals
how many games did e0 get 3 points in	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_games_played
player with most number of blocks over a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_blocks  ( SW.domain string-player ) ) string-player
which players have 3 or more assists over the season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string->= ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
how many points does e0 average over a season	SW.filter var-s string-num_points string-!= number3 point ( SW.domain string-player ) ) string-player
players that have at least 3 blocks a season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string->= ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
what team did e0 play for while making 3 assists per season	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-team
player who has not played more games than player e0 bryantover a season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
how many fouls does e0 average when hes played at least 3 games in a season	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_fouls
which player had less than 3 points in a season	SW.filter var-s string-num_points string-!= number3 point ( SW.domain string-player ) ) string-player
how many fouls did e0 have last season	SW.getProperty string-player  string-num_fouls
what is e0 allseason point total	SW.getProperty string-player  string-num_points
how many steals does e0 have over all seasons	SW.getProperty string-player  string-num_steals
which player has made the minimum number of turnovers	SW.superlative var-s string-min SW.ensureNumericProperty string-num_turnovers  ( SW.domain string-player ) ) string-player
what position did e0 play when making 3 allseason steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-position
when e0 has had 2 blocks in a season how many turnovers had he made	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_turnovers
how many rebounds did e0 get in 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_rebounds
what players all season blocks were no less than 3	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string->= ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
how many turnovers has e0 had	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_turnovers
player who never played 3 games over a season	SW.filter var-s string-num_games_played string-!= number3 game ( SW.domain string-player ) ) string-player
how many games did e0 have three assists in over a season	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_games_played
how many rebounds did e0 get after he made 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_rebounds
players that have more points than e0 over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_points  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
which player has the smallest number on the team	SW.countSuperlative var-s string-min string-team ( SW.domain string-player ) ) string-player
how many points did e0 score in 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_points
how many games did e0 play with three blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_games_played
over a season which player has the largest number of rebounds	SW.superlative var-s string-max SW.ensureNumericProperty string-num_rebounds  ( SW.domain string-player ) ) string-player
what players made less points than e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
what player had the least points this season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_points  ( SW.domain string-player ) ) string-player
find the season in which e0 committed 3 fouls and note the number of turnovers in the same period	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_turnovers
how many blocks did e0 have after 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_blocks
name a player who did not have three turnovers	SW.filter var-s string-num_turnovers string-!= number3 turnover ( SW.domain string-player ) ) string-player
how many rebounds did e0 make in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_rebounds
what players had less than 3 games played over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-< ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
how many turnovers did e0 when playing with three fouls over the season	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_turnovers
which year did e0 play e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-season
what player had as many blocks as e0 over as season	SW.filter var-s string-num_blocks string-= ( SW.getProperty string-player  string-num_blocks ) ( SW.domain string-player ) ) string-player
player who does not play e0	SW.filter var-s string-position string-!= e0 ( SW.domain string-player ) ) string-player
name a player who has had fewer steals this season than e0	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
player who committed more fouls than e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
players that have more and less than 3 steals over all seasons	SW.filter var-s string-num_steals string-!= number3 steal ( SW.domain string-player ) ) string-player
player who have played fewer than 3 games in a season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-< ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
number of turnovers of e0 who has 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_turnovers
how many turnovers did e0 have when he had three blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_turnovers
player with more fouls over a season than player e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
how many fouls were played by e0 in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_fouls
how many players have had more turnovers in a season than e0	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
who has the lowest average blocks per season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_blocks  ( SW.domain string-player ) ) string-player
players that played in the most games during a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_games_played  ( SW.domain string-player ) ) string-player
how many assists did e0 get after playing 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_assists
what teams has e0 played for in his career	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-team
when did e0 have 3 all season assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_assists
how many blocks has e0 achieved in seasons with at least 3 games played	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_blocks
how many seasons has e0 played more than 3 games and whats his career rebound total	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_rebounds
how many points were scored by e0	SW.getProperty string-player  string-num_points
player with most points over a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_points  ( SW.domain string-player ) ) string-player
which player has the minimum number of points of e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
what team did e0 have 3 turnovers on	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-team
how many steals in a season did e0 have for the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_steals
what player has no less than 3 all season assists	SW.filter var-s SW.ensureNumericProperty string-num_assists  string->= ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
what player has the same number of all season assists as e0	SW.filter var-s string-num_assists string-= ( SW.getProperty string-player  string-num_assists ) ( SW.domain string-player ) ) string-player
player who made lesser steals than e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
what player has held the most positions	SW.countSuperlative var-s string-max string-position ( SW.domain string-player ) ) string-player
who has the record for steals	SW.superlative var-s string-max SW.ensureNumericProperty string-num_steals  ( SW.domain string-player ) ) string-player
during the same season that he acquired 3 points how many turnovers did e0 have	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_turnovers
how many assists did player e0 have over this season to get 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_assists
player with the same or fewer blocks per season as e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
for which team e0 made 3 assists over a season	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-team
what player did not play e0	SW.filter var-s string-position string-!= e0 ( SW.domain string-player ) ) string-player
which player had played more fouls than e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
how many blocks does e0 have in a season with at least 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_blocks
how many steals has e0 had	SW.getProperty ( SW.filter string-player  string-season string-= date:2004:-1:-1 ) string-num_steals
which player had the same number of turnovers as e0	SW.filter var-s string-num_turnovers string-= ( SW.getProperty string-player  string-num_turnovers ) ( SW.domain string-player ) ) string-player
what players scored more or less than 3 points in a season	SW.filter var-s string-num_points string-!= number3 point ( SW.domain string-player ) ) string-player
which player played more than 3 fouls	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-> ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
what player gets more assists every season than e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
what is the number of assists by player e0 over the season	SW.getProperty string-player  string-num_assists
how many games has e0 made more than 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_games_played
what position was e0 playing when he blocked three shots	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-position
how many fouls did e0 have during the season	SW.getProperty string-player  string-num_fouls
player with the least played games in a season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_games_played  ( SW.domain string-player ) ) string-player
player who has maximum two team	SW.countComparative var-s string-team string-<= number2 ( SW.domain string-player ) ) string-player
in which year did e0 have three steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-season
total points of e0 over a season	SW.getProperty string-player  string-num_points
how many games did e0 play where he made three blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_blocks
what player has as much steals as most number of steals e0 made over a season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
what position did e0 play	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-position
how many rebounds  e0 made in the season he made 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_rebounds
how many allseason points did e0 score when rebounds equaled 3	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_points
what position was e0 playing when he has 3 rebounds over a full season	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-position
what was the total number of rebounds for e0 in season where he only had 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_rebounds
player with less than 3 steals	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-< ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
how many steals does e0 get in a season when hes got 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_steals
the number of turnovers of player e0 over this season is 3	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_turnovers
how many assists did e0 have who had three rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_assists
which player plays the position of e0 or e1	SW.filter var-s string-position string-= SW.concat ( SW.domain string-player ) ) string-player
what players allseason blocks are no more than e0 allseason blocks	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
player whose number of blocks over a season is not less than that ofplayer e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
number of fouls over a season of player e0 with 3 assists over a season	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_fouls
which player had fewer rebounds than e0	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
find those players with a total number of turnovers in any one specific season that is less than 3	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-< ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
what players committed more fouls that e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
player with more than 3 blocks over a season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-> ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
how many turnovers does e0 e1 have in a season	SW.getProperty ( SW.filter SW.getProperty e1 SW.reverse string-player  string-position string-= e0 ) string-num_turnovers
in how many games did e0 make 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_games_played
what is number of the player	.size entity-en.player
what position does e0 play who had three fouls in the season	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-position
either d0 or d1	SW.concat
who has had 3 or more assists	SW.filter var-s SW.ensureNumericProperty string-num_assists  string->= ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
position of player e0 who has 3 turnovers over a season	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-position
what player played in the same or less games as e0	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
what player equal or more assists than e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
which player does not have3 rebounds	SW.filter var-s string-num_rebounds string-!= number3 rebound ( SW.domain string-player ) ) string-player
how many games did e0 play where he had more than 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_games_played
how many fouls did e0 get called for the season he had 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_fouls
in which season did e0 score 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-season
how many turnovers has e0 lost in seasons with at least 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_turnovers
how many turnovers does e0 make when hes got 3 assists in the season	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_turnovers
who has played less than 4 games per season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-<= ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
which player has had as many fouls or more as e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
find those players committing a total number of steals that is larger than the total number of steals committed by e0 in any one season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
name the number of turnovers achieved by e0 in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_turnovers
how many blocks did e0 have in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_blocks
what player had the fewest steals all season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_steals  ( SW.domain string-player ) ) string-player
name a player with fewer blocks than e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
e0 had3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_turnovers
is there a player with the same number of turnovers in a specific season as e0 has in a specific season as well	SW.filter var-s string-num_turnovers string-= ( SW.getProperty string-player  string-num_turnovers ) ( SW.domain string-player ) ) string-player
what was the total number of turnovers in a season for e0 at e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_turnovers
number of points over a season of player e0 who has 3 turnovers over a season	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_points
how many points has e0 gotten in a season	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_points
name a player who did not have three assists	SW.filter var-s string-num_assists string-!= number3 assist ( SW.domain string-player ) ) string-player
which player has played for only one team	SW.countComparative var-s string-team string-< number2 ( SW.domain string-player ) ) string-player
who has had less assists than e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
players who had an equal amount of assists in a season to that of e0 lowest assists total	SW.filter var-s SW.ensureNumericProperty string-num_assists  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
how many players had game time in at least 3 games over the season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string->= ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
player with the most played games over all seasons	SW.superlative var-s string-max SW.ensureNumericProperty string-num_games_played  ( SW.domain string-player ) ) string-player
how many points has e0 scored in each season with the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_points
which player has more assists than e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
players with assists not equal to three in a season	SW.filter var-s string-num_assists string-!= number3 assist ( SW.domain string-player ) ) string-player
who leads the points race so far this season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_points  ( SW.domain string-player ) ) string-player
how many turnovers does e0 give up as e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_turnovers
how many blocks did e0 make when he had three points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_blocks
player with less than 3 turnovers over a season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-< ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
number of fouls over a season of player e0 who is at e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_fouls
what position did e0 play when he got 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-position
what players did not play in the d0 season	SW.filter var-s string-season string-!= d0 ( SW.domain string-player ) ) string-player
what year did e0 points total three	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-season
what player had 3 or less blocks this season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-<= ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
which player has a maximum of 3 fouls	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-<= ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
in what position did e0 get 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-position
how many players	.size entity-en.player
number of points over a season of player e0 who is at e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_points
which player has more rebounds than e0	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
what player had the same amount of steals in a season or less than e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
players that have no more than 3 fouls over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-<= ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
what position did e0 play for the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-position
during the season in which e0 had game time in 3 games how many assists was he responsible for	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_assists
what is the players number for a certain team	.size entity-en.team
what position did e0 play when her had three turnover this season	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-position
for the period of time in which e0 was e1 name the amount of rebounds he had in that season	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_rebounds
how many points does e0 have allseason when he also has 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_points
find the number of blocks in the season in which e0  also acquired 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_blocks
who were e0 team mates	SW.filter var-s string-team string-= ( SW.getProperty string-player  string-team ) ( SW.domain string-player ) ) string-player
how many rebounds did e0 get as e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_rebounds
how many steals did e0 have when he scored three points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_steals
which player is it e0 or e1	SW.concat
note the player with the highest number of rebounds to their credit in any one season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_rebounds  ( SW.domain string-player ) ) string-player
which player had more rebounds than e0	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
what player scored equal or less points as e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
what team did e0 play 3 games for allseason	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-team
what players played in d0 or d1	SW.filter var-s string-season string-= SW.concat ( SW.domain string-player ) ) string-player
which player has more than 3 turnovers in each season theyve played	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-> ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
how many rebounds in a season did e0 have	SW.getProperty string-player  string-num_rebounds
how many assists did e0 have when he had 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_assists
number of teams	.size entity-en.team
during the season in which e0 had 3 turnovers how many assists were attributable to him	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_assists
who gets no more fouls each year than e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
players with the same number of played games as e0 over all seasons	SW.filter var-s string-num_games_played string-= ( SW.getProperty string-player  string-num_games_played ) ( SW.domain string-player ) ) string-player
what season did e0 get 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-season
what position is e0	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-position
number of blocks over a season of player e0 who is at e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_blocks
players whose number of points is less than 3 over a season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
number of fouls over a season of player e0 from e1 team	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_fouls
who has had more steals than e0	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
who has had the least rebounds	SW.superlative var-s string-min SW.ensureNumericProperty string-num_rebounds  ( SW.domain string-player ) ) string-player
what team did e0 have 3 steals on	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-team
what team did e0 play when he made 3 rebounds over the season	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-team
the total number of steals in all seasons for e0 e1	SW.getProperty ( SW.filter SW.getProperty e1 SW.reverse string-player  string-position string-= e0 ) string-num_steals
who had more points than e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
players that did not play in d0	SW.filter var-s string-season string-!= d0 ( SW.domain string-player ) ) string-player
what year did e0 play	SW.getProperty string-player  string-season
how many fouls did e0 average in his three point total games over the season	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_fouls
how many steals e0 made over a season	SW.getProperty string-player  string-num_steals
team of player e0 who has 3 assists over a season	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-team
who has played the fewest games in a season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_games_played  ( SW.domain string-player ) ) string-player
what other players play the same position as e0	SW.filter var-s string-position string-= ( SW.getProperty string-player  string-position ) ( SW.domain string-player ) ) string-player
find those players with turnover amounts in a given season equalling at most 3	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-<= ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
what was the position of e0 when he played 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-position
which player has played the most positions	SW.countSuperlative var-s string-max string-position ( SW.domain string-player ) ) string-player
who has played less games than e0	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
how many steals did e0 have with three turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_steals
how many turnovers e0 made in the season he made 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_turnovers
in how many games has e0 made 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_games_played
who else plays the same position as e0	SW.filter var-s string-position string-= ( SW.getProperty string-player  string-position ) ( SW.domain string-player ) ) string-player
which player has played with at most two teams	SW.countComparative var-s string-team string-<= number2 ( SW.domain string-player ) ) string-player
what player has less rebound over all seasons	SW.superlative var-s string-min SW.ensureNumericProperty string-num_rebounds  ( SW.domain string-player ) ) string-player
who has played the record number of games in a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_games_played  ( SW.domain string-player ) ) string-player
name someone with more games per season played than e0	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
how many fouls does e0 have in seasons when he makes a total of 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_fouls
what team does e0 play for	SW.getProperty ( SW.filter string-player  string-position string-= en.position.point_guard ) string-team
the player who made most fouls over a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_fouls  ( SW.domain string-player ) ) string-player
who has had less than 3 turnovers	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-< ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
player with most points scored over all seasons	SW.superlative var-s string-max SW.ensureNumericProperty string-num_points  ( SW.domain string-player ) ) string-player
number of assists over a season of player e0 with 3 fouls over a season	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_assists
player not with 3 turnovers over a season	SW.filter var-s string-num_turnovers string-!= number3 turnover ( SW.domain string-player ) ) string-player
player who scored the least on the team	SW.countSuperlative var-s string-min string-team ( SW.domain string-player ) ) string-player
how many rebounds did e0 get after 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_rebounds
how many games has e0 been in since he went pro	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_games_played
name a e0 or a e1	SW.concat
how many blocks did e0 have during his three point total game	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_blocks
which position has e0 made more than 3 steals from	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-position
name players who did not play in d0	SW.filter var-s string-season string-!= d0 ( SW.domain string-player ) ) string-player
how many steals did e0 have in three played games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_steals
how many assists has e0 had	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_assists
team of player e0 who has 3 steals over a season	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-team
who has had the most fouls	SW.superlative var-s string-max SW.ensureNumericProperty string-num_fouls  ( SW.domain string-player ) ) string-player
how many games has e0 played	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_games_played
what player had the most points this season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_points  ( SW.domain string-player ) ) string-player
points of e0 over a season in which he made 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_points
number of fouls e0  who has 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_fouls
what player has lesser assists than e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
which players scored less points over the season than e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
how many assists did e0 have with three blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_assists
in which season e0 has scored  3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-season
what player had less than 3 fouls	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-< ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
who has had the same or less points this season as e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
what player had 3 or less assists this season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-<= ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
season of player e0 who is at e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-season
how many points e0 made over a season in which he made 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_points
how man fouls did e0 have in all seasons where he had three rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_fouls
what player has no less than 3 allseason rebounds	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string->= ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
how many assists did e0 have allseason when had also had 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_assists
what player has the lowest amount of rebounds in a season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_rebounds  ( SW.domain string-player ) ) string-player
e0 had 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_rebounds
which player is not in the position of e0	SW.filter var-s string-position string-!= e0 ( SW.domain string-player ) ) string-player
name those players with total foul tallies of less than 3 in any one particular season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-< ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
which player has been apart of the most teams	SW.countSuperlative var-s string-max string-team ( SW.domain string-player ) ) string-player
how many fouls has e0 had	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_fouls
how many rebounds has e0 had	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_rebounds
which player had at least three assists last season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string->= ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
players who played d0 to d1	SW.filter var-s string-season string-= SW.concat ( SW.domain string-player ) ) string-player
how many points has e0 scored this season	SW.getProperty string-player  string-num_points
what player had the same amount of assists as e0	SW.filter var-s string-num_assists string-= ( SW.getProperty string-player  string-num_assists ) ( SW.domain string-player ) ) string-player
what player has had at least as many games played as e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
number of turnovers over a season of player e0	SW.getProperty string-player  string-num_turnovers
what position did e0 play for only three games during the season	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-position
how many fouls did e0 have when he made three turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_fouls
what players have at least as many turnovers that e0 has during a season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
how many steals did e0 have as e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_steals
how many turnovers did e0 make over a season when played as e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_turnovers
how many points did e0 score as the e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_points
how many steals e0 made in the season in which he played in e1 team	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_steals
what player had 3 or more blocks	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string->= ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
how many turnovers did e0 make over the season where he made 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_turnovers
what is e0 team	SW.getProperty string-player  string-team
which player has not made3 blocks	SW.filter var-s string-num_blocks string-!= number3 block ( SW.domain string-player ) ) string-player
how many assists were got by e0 who belonged to the los angeles team	SW.getProperty ( SW.filter string-player  string-team string-= en.team.lakers ) string-num_assists
how many assists can e0 make in seasons with only 3 games played	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_assists
player that scored three or more points per game last season	SW.filter var-s SW.ensureNumericProperty string-num_points  string->= ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
how many rebounds did e0 have when he made three fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_rebounds
what player had the same or more turnovers as e0	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
name e0 position when he had three turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-position
name the total points of e0 over the season and note the comparisonn to the player whose total number of blocks throughout the season was 3	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_points
what position diddoes e0 play for the la e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-position
what player played more games than e0 this season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
players that have more than 3 turnovers over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-> ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
name players other than e0	SW.filter var-s string-position string-!= e0 ( SW.domain string-player ) ) string-player
what player scored 3 or less points during a season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-<= ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
find those players with point totals in any one season equalling at least 3	SW.filter var-s SW.ensureNumericProperty string-num_points  string->= ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
when e0 has given up 3 turnovers in a season how many fouls has he typically given	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_fouls
what players played most games over a season same as e0	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
players that had the same number of turnovers in a season as e0 byrant	SW.filter var-s string-num_turnovers string-= ( SW.getProperty string-player  string-num_turnovers ) ( SW.domain string-player ) ) string-player
in which season did e0 play 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-season
name a player who did not play in d0	SW.filter var-s string-season string-!= d0 ( SW.domain string-player ) ) string-player
what players had more that three steals over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-> ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
what was the total number of blocks for e0 in seasons where he had just three fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_blocks
how many turnovers does e0 have in seasons with over 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_turnovers
which team does e0 play e1 for	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-team
what position was e0 playing when he had the season in which he had 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-position
name those players responsible for less than 3 blocks in any one season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-< ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
how many turnovers did e0 have during the season he averaged three assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_turnovers
how many turnovers did e0 get after the 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_turnovers
what players has less than 3 allseason fouls	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-< ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
how many rebounds did e0 have in 04	SW.getProperty ( SW.filter string-player  string-season string-= date:2004:-1:-1 ) string-num_rebounds
what seasons did e0 only have three steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-season
what player had the same amount of rebounds as e0	SW.filter var-s string-num_rebounds string-= ( SW.getProperty string-player  string-num_rebounds ) ( SW.domain string-player ) ) string-player
what player made as much points as e0 made over a season	SW.filter var-s string-num_points string-= ( SW.getProperty string-player  string-num_points ) ( SW.domain string-player ) ) string-player
during the season in which he had 3 turnovers name the number of games in which e0 participated in	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_games_played
who has the same per season blocks as e0	SW.filter var-s string-num_blocks string-= ( SW.getProperty string-player  string-num_blocks ) ( SW.domain string-player ) ) string-player
which player has played for no more than two teams	SW.countComparative var-s string-team string-<= number2 ( SW.domain string-player ) ) string-player
how many assists did e0 have when he made three turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_assists
how many points did e0 score in the game that he had three steals last season	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_points
what team is e0 on	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-team
what team did e0 play for during his three steam season	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-team
what important meetings are attended by e0	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-is_important
what three hour meeting has e0 attending	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-length string-= number3 en.hour
show me the longest meetings	SW.superlative entity-en.meeting string-max SW.ensureNumericProperty string-length
meetings that are shorter than three hours or shorter than one hour	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.concat )
which meetings will be longer than e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
how long is the e0 meeting	SW.getProperty e0 string-length
show me all meetings happening on days before the e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-date  )
show me all meetings beginning and ending at d0	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-end_time string-= d0
important meeting at e0	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-location string-= e0
what meeting has a date after d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-> ( SW.ensureNumericEntity d0 )
show me the length of the e0	SW.getProperty e0 string-length
location is e0 or e1	SW.concat
meetings attended by e0 or e1	SW.filter entity-en.meeting string-attendee string-= SW.concat
meetings held on the same day as or after the e0 meeting	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-date  )
meetings that end before the e0 meeting starts	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
meetings attended by two or fewer people	SW.countComparative entity-en.meeting string-attendee string-<= number2
locations of meetings attended by e0	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-attendee string-= e0 )
show me all attendees of meetings three hours long	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-length string-= number3 en.hour )
show me all 3 hour meetings with e0	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-attendee string-= e0
locations that house at least two meetings	SW.countComparative entity-en.location SW.reverse string-location string->= number2 entity-en.meeting
what meeting is located at e0 and e1 will be attending	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e1 ) string-location string-= e0
show me all meetings that start earlier than the e0 meeting	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
who will be attending important meetings	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-is_important )
meeting that does not end at d0	SW.filter entity-en.meeting string-end_time string-!= d0
which meeting begins earliest	SW.superlative entity-en.meeting string-min SW.ensureNumericProperty string-start_time
show me important meetings that start at d0	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-start_time string-= d0
find me a meeting that is three hours long	SW.filter entity-en.meeting string-length string-= number3 en.hour
what meeting has an end time no greater than the end of e0 startup	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
what meeting no later than that of e0 startup	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-date  )
show me who is not at the e0	SW.filter entity-en.person SW.reverse string-attendee string-!= e0
show me all three hour meetings that are important	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-is_important
show me average meeting length	string-avg SW.getProperty entity-en.meeting string-length
show me three hour meetings on d0	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-date string-= d0
what meeting has a location at e0 and starts at d1	SW.filter ( SW.filter entity-en.meeting string-location string-= e0 ) string-start_time string-= d1
select all important meetings	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-is_important
important meeting e0 is attending	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-is_important
show me all meetings that start no later than d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-<= ( SW.ensureNumericEntity d0 )
show me all meetings which end later than d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-> ( SW.ensureNumericEntity d0 )
show me important meetings with e0	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-attendee string-= e0
is this meeting on d0 or d1	SW.concat
show me the people who attend the most meetings	SW.countSuperlative entity-en.person string-max SW.reverse string-attendee entity-en.meeting
show me all meetings beginning at d0 at latest	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-<= ( SW.ensureNumericEntity SW.concat d0 ) )
meetings held in the same place as the e0 meeting	SW.filter entity-en.meeting string-location string-= ( SW.filter entity-en.location SW.reverse string-location string-= e0 )
show me all attendees of meetings marked important	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-is_important )
show me all meeting that begin at d0	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-start_time string-= d0
show me all metings that take place d0 or d1	SW.filter entity-en.meeting string-date string-= SW.concat
show me all meetings that end at the same time or earlier than the e0 meeting	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
what person is not attending the e0 meeting	SW.filter entity-en.person SW.reverse string-attendee string-!= e0
important meeting at d0	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-start_time string-= d0
show me all meetings lasting for three hours	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-length string-= number3 en.hour
show me all meetings on d0 which end at d1	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d1 ) string-date string-= d0
meeting with largest number of locations	SW.countSuperlative entity-en.meeting string-max string-location
show me all meetings on the same day as the e0 meeting	SW.filter entity-en.meeting string-date string-= SW.getProperty e0 string-date
what is the length of the meeting	string-sum SW.getProperty entity-en.meeting string-length
what important meeting is e0 attending	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-is_important
show meetings that start no earlier than the e0 startup meeting	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
meeting on d0 at d1	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d1 ) string-date string-= d0
what meeting is not on d0	SW.filter entity-en.meeting string-date string-!= d0
show me all meetings ending at the same time or earlier than the e0 begins	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
where is the e0	SW.filter ( SW.filter entity-en.location SW.reverse string-location string-= e0 ) SW.reverse string-location string-= e0
show me all meetings that start at d0 on d1	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-date string-= d1
meetings that are three hours long	SW.filter entity-en.meeting string-length string-= number3 en.hour
show me all attendees of meetings beginning at d0	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-start_time string-= d0 )
show me any meetings scheduled to be longer than one hour or three hours	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.concat )
show meetings that end at d0 or d1	SW.filter entity-en.meeting string-end_time string-= SW.concat
show me the locations of all meetings beginning at d0	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-start_time string-= d0 )
schedule a meeting for d0 or d1	SW.concat
which meetings have the same start time as the e0 meeting	SW.filter entity-en.meeting string-start_time string-= SW.getProperty e0 string-start_time
what meeting has an end time greater than e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
meeting which starts at d0	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-start_time string-= d0
what meeting ends earlier than d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-< ( SW.ensureNumericEntity SW.concat )
what three hour meeting is on d0	SW.filter ( SW.filter entity-en.meeting string-date string-= d0 ) string-length string-= number3 en.hour
meetings that end at the time when the e0 meeting starts	SW.filter entity-en.meeting string-end_time string-= SW.getProperty e0 string-start_time
show me everyone who attended meetings also attended by e0	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-attendee string-= e0 )
what meeting has the same length as e0 startup	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
what meeting has a location at greeberg cafe on d0	SW.filter ( SW.filter entity-en.meeting string-location string-= en.location.greenberg_cafe ) string-date string-= d0
what meeting is at e0 and e1 is attending	SW.filter ( SW.filter entity-en.meeting string-location string-= e0 ) string-attendee string-= e1
show me all meetings shorter than three hours	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity number3 en.hour )
show me all attendees of meetings at the e0	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-location string-= e0 )
show me all meetings which has no more than two attendees	SW.countComparative entity-en.meeting string-attendee string-<= number2
who is attending the meeting that ends at d0	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-end_time string-= d0 )
meeting does not start at d0	SW.filter entity-en.meeting string-start_time string-!= d0
d0 or d1	SW.concat
show me all meetings beginning no later than d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string->= ( SW.ensureNumericEntity SW.concat )
meetings at e0 that end a d1	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d1 ) string-location string-= e0
what meetings date is earlier than d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-< ( SW.ensureNumericEntity SW.concat )
meeting is at least 3 hours long	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity number3 en.hour )
show me the locations which have the most number of meetings	SW.countSuperlative entity-en.location string-max SW.reverse string-location entity-en.meeting
show me the meetings that start later than the e0 meeting	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
meeting in e0 or e1	SW.filter entity-en.meeting string-location string-= SW.concat
meetings that are not three hours long	SW.filter entity-en.meeting string-length string-!= number3 en.hour
show me all meetings the same length or longer than the e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
which meetings end later in the day than e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
three hour meeting	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-length string-= number3 en.hour
show all meetings that start ealier than d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-< ( SW.ensureNumericEntity d0 )
show me all meetings which begin at d0 and end at d0	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-start_time string-= d0
location is same as location of meeting ends at d0	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-end_time string-= d0 )
what meeting ends d0 or later	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string->= ( SW.ensureNumericEntity SW.concat ) )
show me all meetings beginning on or after d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string->= ( SW.ensureNumericEntity SW.concat )
show me the meetings which are latest in the month	SW.superlative entity-en.meeting string-max SW.ensureNumericProperty string-date
what meeting is not three hours	SW.filter entity-en.meeting string-length string-!= number3 en.hour
when does the e0 meeting begin	SW.getProperty e0 string-start_time
show me all meetings in e0 that e1 is attending	SW.filter ( SW.filter entity-en.meeting string-location string-= e0 ) string-attendee string-= e1
meetings that start at d0	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-start_time string-= d0
meeting starts at 700 am and ends at 000 am	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-end_time string-= ( time 10 0 )
what meeting starts at least at d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string->= ( SW.ensureNumericEntity d0 )
what location is e0 and e1	SW.filter entity-en.location SW.reverse string-location string-= SW.concat
show me meetings for d0	SW.filter entity-en.meeting string-date string-= d0
people that attend three hour long meetings	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-length string-= number3 en.hour )
what meeting is not located at e0	SW.filter entity-en.meeting string-location string-!= e0
what meeting has the least number of attendees	SW.countSuperlative entity-en.meeting string-min string-attendee
meeting starts before e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
what time does the e0 meeting start	SW.getProperty e0 string-start_time
meetings that end at the same time as or before the e0 meeting ends	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
show me meetings that end before the e0 starts	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
show me all meetings attended by either e0 or e1	SW.filter entity-en.meeting string-attendee string-= SW.concat
show me all meetings attended by people who have also attended the e0 meeting	SW.filter entity-en.meeting string-attendee string-= SW.getProperty e0 string-attendee
meetings held in two or fewer locations	SW.countComparative entity-en.meeting string-location string-<= number2
what location is the meeting who has e0 attending	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-attendee string-= e0 )
show me all metings in e0 that end at d1	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d1 ) string-location string-= e0
meetings that start later than or at the same time as the e0 meeting	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
meeting later than d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-> ( SW.ensureNumericEntity SW.concat )
show me all meetings that have two attendees	SW.countComparative entity-en.meeting string-attendee string-= number2
meetings that end before d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-< ( SW.ensureNumericEntity d0 )
meeting starts before d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-< ( SW.ensureNumericEntity SW.concat )
show me all meetings that are either e0 or e1	SW.concat
show me all meetings ending at the same time or later than the e0 meeting ends	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
show me important meetings on d0	SW.filter ( SW.filter entity-en.meeting string-date string-= d0 ) string-is_important
meetings held before d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-< ( SW.ensureNumericEntity d0 )
what person attended e0	SW.filter ( SW.filter entity-en.person SW.reverse string-attendee string-= e0 ) SW.reverse string-attendee string-= e0
meetings that end at or before d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-<= ( SW.ensureNumericEntity d0 )
meetings held on or before the e0 meeting	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-date  )
meetings held before d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-<= ( SW.ensureNumericEntity SW.concat )
select the block left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) SW.reverse string-left string-= e0
select e0 or e1	SW.concat
what block is 3 or less inches wide	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity number3 en.inch )
block more wider than length of e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
block above a block which is 3 inches wide	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
choose the brick with the smallest width	SW.superlative entity-en.block string-min SW.ensureNumericProperty string-width
which brick is taller than e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
find the 3 inch tall block below e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-below string-= e0
special block left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-is_special
find all blocks that are as long as or longer than e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
find me all blocks left of 3 inch blocks	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
block that the most number of block is below	SW.countSuperlative entity-en.block string-max SW.reverse string-below entity-en.block
which blocks exceed 3inches wide	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity number3 en.inch )
select the block that is on the right side of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-right string-= e0
find me all e0 blocks	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-shape string-= e0 )
what block is less than 3 inches long	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity number3 en.inch )
find me all 3 inch wide e0 blocks	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-shape string-= e0
find that block that is to the left of just one other block	SW.countComparative entity-en.block string-left string-< number2 entity-en.block
block below a special block	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-is_special )
find all blocks that are to the left of a e0 block	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-shape string-= e0 )
which e0 brick is 3 inches high	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-height string-= number3 en.inch
block above and to right of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-right string-= e0
block with two colors	SW.countComparative entity-en.block string-color string-= number2
left of block over e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-above string-= e0 )
find the 3 inch long e0 block	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-length string-= number3 en.inch
block above special block	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-is_special )
total length of block	string-sum SW.getProperty entity-en.block string-length
block whose width is smaller than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity number3 en.inch )
block below e0	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) SW.reverse string-above string-= e0
block that has at most two shape	SW.countComparative entity-en.block string-shape string-<= number2
select the 3 inch wide block left of e0	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-left string-= e0
what block is to the right of more than two blocks	SW.countComparative entity-en.block SW.reverse string-left string-> number2 entity-en.block
find me all e0 blocks with height equal to 3 inches	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-shape string-= e0
2nd block right of e0	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-right string-= e0 )
block whose width is at least the length of e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
what block is left and right of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) SW.reverse string-right string-= e0
find all blocks with height less than 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity SW.concat )
find the block that is to the right of the block that e0 is below	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
what block has less than two blocks to the left of it	SW.countComparative entity-en.block string-right string-< number2 entity-en.block
what blocks are left of e0 and 3 inches in height	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-left string-= e0
what block is to the right of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-right string-= e0
is there a block with a measurement of 3 inches or 6 inches	SW.concat
e0 block rght of e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-left string-= e1
which block has the highest number of blocks below it	SW.countSuperlative entity-en.block string-max SW.reverse string-below entity-en.block
is  there a special block with a height that is only 3 inches	SW.filter ( SW.filter entity-en.block string-is_special ) string-height string-= number3 en.inch
find me all blocks with 2 shapes	SW.countComparative entity-en.block string-shape string-= number2
what block is left of the block that e0 is to the right of	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-left string-= e0 )
find me the block that is left of two blocks	SW.countComparative entity-en.block string-left string-= number2 entity-en.block
which brick has the most colors	SW.countSuperlative entity-en.block string-max string-color
choose a block to the right of e0	SW.countComparative entity-en.block SW.reverse string-right string-< number2 entity-en.block
what blocks width is less than or equal to block 1s height	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity SW.getProperty en.block.block1 string-height  )
is there a block that is on top of the fewest number of other blocks	SW.countSuperlative entity-en.block string-min string-above entity-en.block
block whose height is smaller than length of e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
3 inch tall block at the left of e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) SW.reverse string-right string-= e0
two shape block	SW.countComparative entity-en.block string-shape string-= number2
which brick is 3 inches wide	SW.filter entity-en.block string-width string-= number3 en.inch
find me all the blocks above 3 inch wide blocks	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
select the block 3 inched high to the right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-height string-= number3 en.inch
find a block at least 3 inches wide	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity SW.concat )
find me all special blocks that are above	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-is_special )
3 inch block near top	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
select the block that is left of a block that is 3 inches	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
find me all the blocks taller than e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
what block is thinner then e0 is long	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
find me the block that is below e0	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) SW.reverse string-below string-= e0
find me the block that is above the block that is above e0	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
2nd block left of e0	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
block whose height is at least height of e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
e0 block below e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) SW.reverse string-above string-= e1
which block is at least as wide as e0 is tall	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
find me a block skinnier than e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
what blocks are above the block that is to the right of e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
choose the special block to the left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-is_special
block whose width is at least height of e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
a block that is 3 inches long	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-length string-= number3 en.inch
find e0 shaped block below e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-below string-= e1
what brick is to the right of the 3 inch brick	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
select the block below the one on the right	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= en.block.block1 ) SW.reverse string-right string-= en.block.block1
which is the block to the right of special block	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-is_special )
find me all blocks right of e0 that is above it	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) SW.reverse string-above string-= e0
find me all blocks that e0 or e1 is below	SW.filter entity-en.block SW.reverse string-below string-= SW.concat
which brick is to the right of the brick to the left of e0	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-left string-= e0 )
find me all the blocks that is at most below 2 blocks	SW.countComparative entity-en.block SW.reverse string-above string-<= number2 entity-en.block
is there a block that is taller than e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
what block has less than or equal length then e0 has width	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
which block is at least as high as e0 is wide	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
block with one shape	SW.countComparative entity-en.block string-shape string-< number2
3 inches tall block at the right of e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-right string-= e0
block above and right from e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-right string-= e0
find the special block with e0 below it	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-is_special
e0 block 3 inches wide	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-width string-= number3 en.inch
find me the e0 block that is to the right of e1	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e1 ) string-shape string-= e0
select the blocks to the right and left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) SW.reverse string-right string-= e0
select the block that is in the shape of a e0 and to the right of e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-right string-= e1
what is the length of e0	SW.getProperty e0 string-length
find blocks to the left and above e0	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) SW.reverse string-right string-= e0
which brick is below e0	SW.filter entity-en.block string-above string-!= e0
what block is block one above and to the right of	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= en.block.block1 ) SW.reverse string-right string-= en.block.block1
block that is above less than two block	SW.countComparative entity-en.block string-above string-< number2 entity-en.block
which block is the smallest	SW.superlative entity-en.block string-min SW.ensureNumericProperty string-height
find me all blocks with the same shape as e0	SW.filter entity-en.block string-shape string-= SW.getProperty e0 string-shape
find me all the blocks right of e0	SW.filter entity-en.block string-right string-= e0
find me all blocks as tall as e0 is wide	SW.filter entity-en.block string-height string-= SW.getProperty e0 string-width
choose a block that is the same height as e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
block that is below the most number of block	SW.countSuperlative entity-en.block string-max string-below entity-en.block
find a block with a width that is less than the height of e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
find the block that has a shape of a e0 and is to the right of e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) SW.reverse string-left string-= e1
find me all the blocks with the same width as the length of e0	SW.filter entity-en.block string-width string-= SW.getProperty e0 string-length
find me all e0 blocks right of e1	SW.filter ( SW.filter entity-en.block string-right string-= e1 ) string-shape string-= e0
find the block that is 3 inches in height and is on the right side of e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-right string-= e0
select all blocks which has least number of shape	SW.countSuperlative entity-en.block string-min string-shape
find me the block above the special block	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-is_special )
find me all e0 shaped blocks	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-shape string-= e0
how tall is e0	SW.getProperty e0 string-height
what block is above two blocks	SW.countComparative entity-en.block string-above string-= number2 entity-en.block
find me a block below the 3 inch tall block	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
what block is at right of 3 inches long block	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
find me a block smaller than 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.concat )
which block that is 3 in height has e0 below it	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-height string-= number3 en.inch
what block has e0 at its left and right	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) SW.reverse string-right string-= e0
block 3 inches long and below block one	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) SW.reverse string-below string-= en.block.block1
select the block to the right of the block left of e0	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-right string-= e0 )
which brick is higher than 3 or 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity SW.concat )
what block is to the right of a e0 block	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-shape string-= e0 )
find me the special block that is to the left of e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-left string-= e0
find me all blocks that e0 is below and right of	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) SW.reverse string-right string-= e0
find me all blocks at most as tall as e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
block with same width that of e0	SW.filter entity-en.block string-width string-= SW.getProperty e0 string-width
what blocks are special and are below e0	SW.filter ( SW.filter entity-en.block string-is_special ) SW.reverse string-above string-= e0
find me all blocks with 2 colors	SW.countComparative entity-en.block string-color string-= number2
3 inches long block	SW.filter entity-en.block string-length string-= number3 en.inch
choose a block that is bigger than e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
block that is above at most two block	SW.countComparative entity-en.block string-above string-<= number2 entity-en.block
select the longest brick	SW.superlative entity-en.block string-max SW.ensureNumericProperty string-length
what block is left of and above e0	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
a e0 shaped block	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-shape string-= e0
select the brick below and to the right of e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-right string-= e0 )
select the block that is one to the left of another block	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= en.block.block1 ) SW.reverse string-left string-= en.block.block1
what block has less than two blocks to the right of it	SW.countComparative entity-en.block string-left string-< number2 entity-en.block
find me all blocks with 2 blocks left of it	SW.countComparative entity-en.block SW.reverse string-right string-= number2 entity-en.block
select the block that has a length of two inches above another block	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
find me all blocks right of e0 blocks	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-shape string-= e0 )
above and to the right of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-right string-= e0
find a block that is not above e0	SW.filter entity-en.block string-above string-!= e0
block with 3 inch height and 3 inch wide	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-width string-= number3 en.inch
choose the block below e0 that is 3 inches long	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) string-length string-= number3 en.inch
select the 3 inch tall block	SW.filter entity-en.block string-height string-= number3 en.inch
what block is to the right of the least blocks	SW.countSuperlative entity-en.block string-min SW.reverse string-left entity-en.block
find the block with a maximum height of 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity number3 en.inch )
block that is taller than three inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity number3 en.inch )
which brick has two bricks below it	SW.countComparative entity-en.block SW.reverse string-below string-= number2 entity-en.block
choose a 3 inch block to the right of e0	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-right string-= e0
which special block is 3 inches wide	SW.filter ( SW.filter entity-en.block string-is_special ) string-width string-= number3 en.inch
find me all blocks at most 6 inches high	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.concat )
find a special block below e0	SW.filter ( SW.filter entity-en.block string-is_special ) SW.reverse string-above string-= e0
find a block that is below no more than two blocks	SW.countComparative entity-en.block string-below string-<= number2 entity-en.block
which block is wider than e0 is long	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
is there a block shorter in height than e0 is wide	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
is there a block located to the left of e0	SW.filter entity-en.block string-left string-!= e0
3 inches long block at the left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-length string-= number3 en.inch
find me all the blocks at most as tall as e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
which brick has the most shapes	SW.countSuperlative entity-en.block string-max string-shape
choose a block thats the same width as e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
block whose height is 3 inches or 6 inches	SW.filter entity-en.block string-height string-= SW.concat
choose block with e0 shape under e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-below string-= e1
what block is to the left of the 3 inch long block	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
right and below e0	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) SW.reverse string-left string-= e0
what e0 brick is 3 inches long	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-shape string-= e0
block that is below block whose width is 3 inches	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
block that is above block whose shape is a e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-shape string-= e0 )
find me all blocks that e0 is not right of	SW.filter entity-en.block SW.reverse string-right string-!= e0
select the block that is to the left of e0 and has a total height of 3 inches	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-height string-= number3 en.inch
what is the width of e0	SW.getProperty e0 string-width
select the block that is in the shape of a e0 and to the right of e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-right string-= e1
find me the block with the least number of blocks below it	SW.countSuperlative entity-en.block string-min string-below entity-en.block
find blocks that are taller than e0 is long	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
choose a 3 inch block that is left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-length string-= number3 en.inch
find me all the blocks at most as long as the width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
a brick between 3 and 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.concat )
find me a block with the same width as block 1s length	SW.filter entity-en.block string-width string-= SW.getProperty en.block.block1 string-length
a brick which length is between 3 and 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.concat )
above and left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-left string-= e0
find me the block that is to the right and above e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-above string-= e0
find me all the blocks at least 3 inches long	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.concat )
select the blocks on the right of and below e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) SW.reverse string-above string-= e0
select the block that is below the block with a width of 3 inches	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
find the blocks to the right and left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) SW.reverse string-left string-= e0
which brick is below e0 or e1	SW.filter entity-en.block string-below string-= SW.concat
block left and below e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
select the brick at the very right	SW.countSuperlative entity-en.block string-max SW.reverse string-left entity-en.block
find me all blocks that e0 is not under	SW.filter entity-en.block SW.reverse string-below string-!= e0
block above two or more blocks	SW.countComparative entity-en.block string-above string-> number2 entity-en.block
locate the block to the right side of a block measuring 3 inches in width	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
block that at most two block is right of	SW.countComparative entity-en.block SW.reverse string-right string-<= number2 entity-en.block
select the block that is special and that e0 is above	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) string-is_special
what block is the longest	SW.superlative entity-en.block string-max SW.ensureNumericProperty string-length
select a block with a height of 1 block width	SW.filter entity-en.block string-height string-= SW.getProperty en.block.block1 string-width
which brick is closest to the top	SW.countSuperlative entity-en.block string-max string-below entity-en.block
what block has a width of 3 inches and e0 is to the right of	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) SW.reverse string-right string-= e0
find me all blocks at most as long as e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
find a block at least 3 inches long	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.concat )
block whose shape is a e0 and whose shape is a e0	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-shape string-= e0
find me all blocks at least 2 blocks below	SW.countComparative entity-en.block string-below string->= number2 entity-en.block
left of block below e0	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-below string-= e0 )
find me all the blocks that is at least as long as e0 is tall	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
how tall is e0	SW.getProperty e0 string-height
find the block with the fewest blocks to the left of it	SW.countSuperlative entity-en.block string-min string-right entity-en.block
which brick is below the special brick	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-is_special )
block with e0 shape at the right of block	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-shape string-= e0 )
block as long as the height of e0	SW.filter entity-en.block string-length string-= SW.getProperty e0 string-height
find me the 3 inch wide e0 block	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-shape string-= e0
is there a block with a length whose measurement is equivalent to that of  block 1s height	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.getProperty en.block.block1 string-height  )
which brick is above the e0 block	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-shape string-= e0 )
find me the block that e0 is to the right and above	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) string-right string-= e0
find me a block at least 3 inches wide	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity SW.concat )
what block is above more than two blocks	SW.countComparative entity-en.block SW.reverse string-below string-> number2 entity-en.block
above block at least 3 inches long	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
which brick is above less than two bricks	SW.countComparative entity-en.block string-above string-< number2 entity-en.block
select the block that e0 is to the left and above	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
which brick has a width smaller than the height of e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
locate the block that is special	SW.filter entity-en.block string-is_special
choose every block measuring 3 or 6 inches	SW.filter entity-en.block string-length string-= SW.concat
which brick has less than two bricks above it	SW.countComparative entity-en.block SW.reverse string-above string-< number2 entity-en.block
which brick has less than two shapes	SW.countComparative entity-en.block string-shape string-< number2
multicolor block	SW.countComparative entity-en.block string-color string-> number2
block below a e0 shaped block	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-shape string-= e0 )
block to the left of e0 block	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-shape string-= e0 )
what block is to the right of the block that e0 is above	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
find all the blocks that are shorter or longer than 3 inches	SW.filter entity-en.block string-length string-!= number3 en.inch
choose blocks wider than block 1s height	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity SW.getProperty en.block.block1 string-height  )
select the brick at the very left	SW.countSuperlative entity-en.block string-max string-left entity-en.block
which brick is 3 or 6 inches long	SW.filter entity-en.block string-length string-= SW.concat
find a block that is wider than e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
what brick is at least as high as e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
find me all 3 or 6 inch high blocks	SW.filter entity-en.block string-height string-= SW.concat
select the block that is to the right of a block with a length of 3 inches	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
block that has the least number of color	SW.countSuperlative entity-en.block string-min string-color
3 inches long block to the left of e0	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) SW.reverse string-right string-= e0
block whose length is 3 inches and whose length is 3 inches	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-length string-= number3 en.inch
total width of blocks	string-sum SW.getProperty entity-en.block string-width
select the block that e0 is to the left of and that has a height of 3 inches	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-height string-= number3 en.inch
what block is not to the left of e0	SW.filter entity-en.block string-left string-!= e0
select all which is 3 inches in width and e0 in shape	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-shape string-= e0
select the block that is on the right side of the block on the left side of e0	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-left string-= e0 )
block taller or same height as the width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
choose a block to the left of the special brick	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-is_special )
what blocks height is not 3 inches	SW.filter entity-en.block string-height string-!= number3 en.inch
what block has e0 on the right	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-below string-= e0
find a block that has at most two blocks to its left	SW.countComparative entity-en.block string-left string-<= number2 entity-en.block
what block is less than 3 inches wide	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity number3 en.inch )
find the block to the left of two blocks or one but no more	SW.countComparative entity-en.block SW.reverse string-right string-<= number2 entity-en.block
block whose length is 3 inches or 6 inches	SW.filter entity-en.block string-length string-= SW.concat
find me all 3 inch blocks left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-length string-= number3 en.inch
locate the block with a height measurement that equals at minimum the length of e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
which brick is at the very top	SW.countSuperlative entity-en.block string-min string-below entity-en.block
find me all 3 inch wide blocks that e0 is above	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) string-width string-= number3 en.inch
find me all blocks left of that e0 is below	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
which brick is not 3 inches long	SW.filter entity-en.block string-length string-!= number3 en.inch
what block is on the left of e0 and is 3 inches in width	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-width string-= number3 en.inch
choose a brick that has more than 2 blocks to its left	SW.countComparative entity-en.block SW.reverse string-left string-> number2 entity-en.block
get a 3inch long block below e0	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) SW.reverse string-above string-= e0
find the block that has the most blocks to its right	SW.countSuperlative entity-en.block string-max SW.reverse string-right entity-en.block
what block is above e0 and has a height of 3 inches	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) string-height string-= number3 en.inch
block not to the left of e0	SW.filter entity-en.block SW.reverse string-right string-!= e0
choose the brick shaped like a e0 or a e1	SW.filter entity-en.block string-shape string-= SW.concat
block that is above block that is special	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-is_special )
which block is 3 in height and has e0 on its left	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-height string-= number3 en.inch
find a wider block than e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
find me all the blocks at most as tall as 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity number3 en.inch )
find blocks with the length of e0	SW.filter entity-en.block string-length string-= SW.getProperty e0 string-length
what block is not longer than any other	SW.superlative entity-en.block string-min SW.ensureNumericProperty string-length
select the blocks that are under no more than 2 blocks	SW.countComparative entity-en.block SW.reverse string-above string-<= number2 entity-en.block
select the block above e0	SW.filter entity-en.block SW.reverse string-below string-= e0
find a block that has e0 to its right	SW.filter entity-en.block string-left string-= e0
find me all blocks 2 above e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-above string-= e0 )
which brick has at most two shapes	SW.countComparative entity-en.block string-shape string-<= number2
find me all blocks that e0 is left of	SW.filter entity-en.block SW.reverse string-left string-= e0
find the block that is left of e0 or e1	SW.filter entity-en.block SW.reverse string-left string-= SW.concat
what block is at least 3 inches wide	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity number3 en.inch )
choose a block that is below the most populated bricks	SW.countSuperlative entity-en.block string-max SW.reverse string-below entity-en.block
block that at most two block is left of	SW.countComparative entity-en.block SW.reverse string-left string-<= number2 entity-en.block
what block is in the shape of a e0 and is above e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-above string-= e1
choose a block to the left of e0	SW.countComparative entity-en.block SW.reverse string-left string-= number2 entity-en.block
find me all the special blocks right of e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-right string-= e0
select the widest block	SW.superlative entity-en.block string-max SW.ensureNumericProperty string-width
what is the color of e0	SW.getProperty e0 string-color
choose a block that has less than 2 blocks to its left	SW.countComparative entity-en.block SW.reverse string-left string-< number2 entity-en.block
find me a block with average length	string-avg SW.getProperty entity-en.block string-length
find me all the blocks with a smaller width than the length of e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
select a block that has the same width and height	SW.filter entity-en.block string-height string-= SW.getProperty en.block.block1 string-width
find me all blocks with at least 2 colors	SW.countComparative entity-en.block string-color string->= number2
find me the block that is below two or more blocks	SW.countComparative entity-en.block string-below string-> number2 entity-en.block
what block is skinnier than the height of e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
what 3 inch block is below e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) SW.reverse string-above string-= e0
find the block that is beneath the smallest number of other blocks	SW.countSuperlative entity-en.block string-min string-below entity-en.block
block that is above block whose height is 3 inches	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
what block is below less than two blocks	SW.countComparative entity-en.block SW.reverse string-above string-< number2 entity-en.block
block that is above block whose width is 3 inches	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
find the e0 block below e1	SW.filter ( SW.filter entity-en.block string-below string-= e1 ) string-shape string-= e0
is there a block to the left of more than two blocks	SW.countComparative entity-en.block SW.reverse string-right string-> number2 entity-en.block
which brick is to the right of the e0 brick	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-shape string-= e0 )
block whose height is at least 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity number3 en.inch )
find me all special blocks  below e0	SW.filter ( SW.filter entity-en.block string-is_special ) SW.reverse string-above string-= e0
find the block that is below e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
what block is 3 inches or taller	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity SW.concat )
block whose width is smaller than 3 inches or 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.concat )
what block is between e0 and a block to the left of e0	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-left string-= e0 )
block whose length is larger than height of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
find the block that is the same height as e0	SW.filter entity-en.block string-height string-= SW.getProperty e0 string-height
how many blocks are there	.size entity-en.block
find me all blocks left of more than 2 blocks	SW.countComparative entity-en.block string-left string-> number2 entity-en.block
the block that is equal to the length of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
select the blocks less than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity number3 en.inch )
block that at least two block is left of	SW.countComparative entity-en.block SW.reverse string-left string->= number2 entity-en.block
find a block left of and below e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) SW.reverse string-above string-= e0
3 inch block above e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-length string-= number3 en.inch
what special block is above e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-above string-= e0
choose a block beneath e0	SW.countComparative entity-en.block SW.reverse string-below string-<= number2 entity-en.block
block that is left of block that is left of e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-left string-= e0 )