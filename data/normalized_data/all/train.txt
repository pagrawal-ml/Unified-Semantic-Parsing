units that have a private room	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-has_private_room
smallest e0	SW.superlative entity-en.housing_unit string-min SW.ensureNumericProperty string-size
which housing posted on a date other than january 2nd	SW.filter entity-en.housing_unit string-posting_date string-!= date:2015:1:2
what is the monthly rent for e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-rent  )
800 square foot e0 in e0	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-neighborhood string-= e0
housing with monthly rent of 1500 dollars that was posted on d0	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-posting_date string-= d0
housing units that allow cats and charge 1500 rent monthly	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-allows_cats
find housing units around e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= e0
what is the most numerous housing type	SW.countSuperlative entity-en.housing_unit string-max string-housing_type
find all detached housing units	SW.countComparative entity-en.housing SW.reverse string-housing_type string-< number2 entity-en.housing_unit
housing posted on or before d0 or on or before d1	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.concat )
where is e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 )
housing that is 1500month or less	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-<= ( SW.ensureNumericEntity number1500 en.dollar )
which housing posted after jan 2nd	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity date:2015:1:2 )
find 800 square feet sized housing units	SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet
which housing unit in the area permits cats	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-allows_cats )
which housing unit has a  minimum  rent of 1500 dollars per month	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string->= ( SW.ensureNumericEntity number1500 en.dollar )
cheapest housing	SW.superlative entity-en.housing_unit string-min SW.ensureNumericProperty string-rent
which housing in e0 has a private bath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-neighborhood string-= e0
find housing units with size lesser than that of e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-size  )
what day did e0 become available	SW.getProperty e0 string-posting_date
what is the rent of e0	SW.getProperty e0 string-rent
housing that is at least 1500month	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string->= ( SW.ensureNumericEntity number1500 en.dollar )
find housing units that are same as or lesser than the size of e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-size  )
housing unit sizes on e0	SW.filter entity-en.housing_unit string-size string-= SW.getProperty e0 string-size
housing that is smaller than 800 square feet or smaller than 1000 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-< ( SW.ensureNumericEntity SW.concat )
seeking e0 between 1500 and 2000	SW.concat
list all housing types that are not the same as those in e0	SW.filter entity-en.housing SW.reverse string-housing_type string-!= e0
find housing unit with posting date between january 2nd or february 3rd	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.concat )
housing unit with a post date earlier than d0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity d0 )
e0 housing that was posted on d1	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d1 ) string-housing_type string-= e0
what is the average size of an e0	string-avg SW.getProperty entity-en.housing_unit string-size
housing that was posted d0 or later	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity d0 )
what housing unit posted on jan 2 has a monthly rent of 1500 dollars	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) string-rent string-= number1500 en.dollar
housing that has at least two types	SW.countComparative entity-en.housing_unit string-housing_type string->= number2
what is the monthly rent of this e0	string-sum SW.getProperty entity-en.housing_unit string-rent
find housing units that are posted on the date same as e0 or later	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
800 square foot e0 in e0	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-size string-= number800 en.square_feet
what housing using posted on jan 2 has a private bath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-posting_date string-= date:2015:1:2
which housing unit is posted before  the posting date of e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
what kind of housing type is the only of its kind	SW.countComparative entity-en.housing SW.reverse string-housing_type string-< number2 entity-en.housing_unit
housing unit with a posting date at the latest d0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity d0 )
which housing unit has a lesser monthly rent than e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-rent  )
housing unit for rent posted on d0	SW.filter entity-en.housing_unit string-rent string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
what housing unit has two housing types	SW.countComparative entity-en.housing_unit string-housing_type string-= number2
e0 with a private bath that allow dogs	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-has_private_bath
find housing units that is not an e0	SW.filter entity-en.housing_unit string-housing_type string-!= e0
what housing unit posted on jan 2 is the same kind as e0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) SW.reverse string-housing_type string-= e0
which neighborhood has under two housing units	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-< number2 entity-en.housing_unit
what e0 costs 1500 dollars	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-rent string-= number1500 en.dollar
what are housing types found in the neighborhoods of e0	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 )
housing that was posted on d0	SW.filter entity-en.housing_unit string-size string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
e0 that allow dogs	SW.filter entity-en.housing_unit string-allows_dogs
what kind of housing is 800 square feet	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet )
which area has the most number of housing units	SW.countSuperlative entity-en.housing_unit string-max string-neighborhood
housing that is more than 1500month or more than 2000month	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-> ( SW.ensureNumericEntity SW.concat )
which housing units permit dogs and cats	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-allows_dogs
which e0 housing have 800 square feet	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-neighborhood string-= e0
housing units with a small amount of housing	SW.countSuperlative entity-en.housing_unit string-min string-housing_type
rent between 1500 and 2000 dollars	SW.concat
e0 are 1500	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-rent string-= number1500 en.dollar
what housing unit is the same type as the unit posted on jan 2	SW.filter entity-en.housing_unit string-housing_type string-= ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 )
what kind of housing was posted on d0	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
private room in e0	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-has_private_room
unit smaller than e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-size  )
housing units that have a private room that was posted on d0	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-posting_date string-= d0
which housing unit is more expensive than e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-rent  )
what is units monthly rental	string-sum SW.getProperty entity-en.housing_unit string-rent
housing with a private room that posted on d0	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-posting_date string-= d0
find housing units with a private room and is dog friendly	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-has_private_room
an e0 that was posted on d1	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d1 ) string-housing_type string-= e0
what housing unit was posted on jan 2	SW.filter entity-en.housing_unit string-posting_date string-= ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 )
which housing is no larger than e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-size  )
housing with more square footage than e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-size  )
e0 in e0 with a rent of 1500 a month	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-rent string-= number1500 en.dollar
housing that is the same rent as or cheaper than e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-rent  )
e0 with rent above 1500	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-> ( SW.ensureNumericEntity number1500 en.dollar )
which housing unit with an area of 800 square feet is available fora rent of 1500 dollars per month	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-rent string-= number1500 en.dollar
housing that is more than 800 square feet	SW.filter entity-en.housing_unit string-size string-!= number800 en.square_feet
which housing posted jan 2nd at e0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) SW.reverse string-posting_date string-= e0
housing type of more than two available housings	SW.countComparative entity-en.housing SW.reverse string-housing_type string-> number2 entity-en.housing_unit
find a housing unit posted on d0 and that has a private room	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d0 ) string-has_private_room
e0 with a private room	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-has_private_room
which housing posted no earlier than jan 2nd or feb 3rd	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.concat )
which housing unit resembles that of e0	SW.filter entity-en.housing_unit string-housing_type string-= SW.getProperty e0 string-housing_type
housing unit with same housing type as that of e0	SW.filter entity-en.housing_unit string-housing_type string-= SW.getProperty e0 string-housing_type
what are the neighborhoods of e0 and e1	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= SW.concat
show me e0 with a private room	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-has_private_room
e0 for rent at 1500	SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar
cats allowed in e0	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-allows_cats
what is the housing type number	.size entity-en.housing
housing types like e0 or e1	SW.filter entity-en.housing SW.reverse string-housing_type string-= SW.concat
what kind of housing has two housing types	SW.countComparative entity-en.housing_unit string-housing_type string->= number2
housing that is 1500month and 800 square feet	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-size string-= number800 en.square_feet
find housing units far from e0	SW.filter entity-en.housing_unit string-neighborhood string-!= e0
housing found in the most neighborhoods	SW.countSuperlative entity-en.housing_unit string-max string-neighborhood
what is the area of e0	SW.getProperty e0 string-size
find housing units with a private room	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-has_private_room
d0 to d1	SW.concat
housing posted after e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
e0 with a private room	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-has_private_room )
housing that is 800 square feet with a private bath	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-has_private_bath
what kinds of housing has a private bath	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-has_private_bath )
what is the square footage of e0	SW.getProperty e0 string-size
housing that is 800 square feet and includes a private bah	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-size string-= number800 en.square_feet
find housing units posted before january 2nd	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity date:2015:1:2 )
housing unit with a private room and bath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-has_private_bath
what is the housing type of the two housing units	SW.countComparative entity-en.housing SW.reverse string-housing_type string->= number2 entity-en.housing_unit
catfriendly e0 with a private room	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-has_private_room
neighborhood where i can find housing with a private room	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-has_private_room )
show me housing whose rent is 1500 dollars and which provides a private bathroom	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-rent string-= number1500 en.dollar
e0 in the same neighborhood at e0	SW.filter entity-en.housing_unit string-neighborhood string-= SW.getProperty e0 string-neighborhood
which housing unit posted jan 2nd	SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2
dogfriendly e0 with a private bathroom	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-allows_dogs
find 800 square feet housing units in the neighborhoods of e0	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-size string-= number800 en.square_feet
what housing unit is the same size as the unit posted on jan 2	SW.filter entity-en.housing_unit string-size string-= ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 )
name the neighborhood of the housing unit with private bath	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-has_private_bath )
unit with rent between 15002000 dollars	SW.filter entity-en.housing_unit string-rent string-= SW.concat
e0 in a quiet neighborhood	SW.countSuperlative entity-en.housing_unit string-min string-neighborhood
housing that is 800 square feet and 1500month	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-rent string-= number1500 en.dollar
most expensive places to rent	SW.superlative entity-en.housing_unit string-max SW.ensureNumericProperty string-rent
catfriendly e0 in e0	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-neighborhood string-= e0
e0 with a private room in e0	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-has_private_room
e0 with rent between 1500 and 2000	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-< ( SW.ensureNumericEntity SW.concat )
private bath with 800 square feet	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-size string-= number800 en.square_feet
compare e0 and e1	SW.concat
which housing units in the neighbourhood permits dogs inside it	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-allows_dogs )
show me housing which have a private bathroom and allow cats	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-allows_cats
what housing units in the midtown east area also allow dogs	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-neighborhood string-= en.neighborhood.midtown_west
800 square foot dogfriendly e0	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-size string-= number800 en.square_feet
what is the date of e0 posting	SW.getProperty e0 string-posting_date
show only neighborhood units of 800 square feet	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet )
which housing unit has  an area of 800 or 1000 square feet	SW.filter entity-en.housing_unit string-size string-= SW.concat
housing units with less than two nieghborhoods	SW.countComparative entity-en.housing_unit string-neighborhood string-< number2
unit of 800 square feet	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet )
what is the kind of housing available in 123 sesamre street	SW.filter entity-en.housing SW.reverse string-housing_type string-= en.housing_unit.123_sesame_street
looking for housing that is either an e0 or e1	SW.filter entity-en.housing_unit string-housing_type string-= SW.concat
what neighborhood is the housing unit in that was posted d0	SW.filter entity-en.housing_unit string-neighborhood string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
e0 with at least 2 units	SW.countComparative entity-en.housing SW.reverse string-housing_type string->= number2 entity-en.housing_unit
e0 in e0 with a private room	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-neighborhood string-= e0
what housing unit was posted on jan 2 or feb 3	SW.filter entity-en.housing_unit string-posting_date string-= SW.concat
which area has less than two housing units	SW.countComparative entity-en.housing_unit string-neighborhood string-< number2
find housing units with monthly not equal to 1500 dollars	SW.filter entity-en.housing_unit string-rent string-!= number1500 en.dollar
find housing units with 1500 dollars as rent and is near e0	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-neighborhood string-= e0
what is the house number of the e0	.size entity-en.housing_unit
what housing unit posted on jan 2 is the same size as e0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) SW.reverse string-size string-= e0
housing posted on d0 or d1	SW.filter entity-en.housing_unit string-posting_date string-= SW.concat
find housing that is an e0	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-housing_type string-= e0
housing units who have a posting date of january 2nd and on e0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) SW.reverse string-size string-= e0
e0 that are smaller than e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-size  )
find e0 with a private bath	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-has_private_bath
housing that includes two units	SW.countComparative entity-en.housing SW.reverse string-housing_type string-= number2 entity-en.housing_unit
list all housing that have the size of 800 or 1000 square feet	SW.concat
what 800 square housing allows dogs	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-size string-= number800 en.square_feet
what housing unit is in two neighborhoods	SW.countComparative entity-en.housing_unit string-neighborhood string-= number2
neighborhood of housing unit whose monthly rent is 1500 dollars	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar )
find pet friendly housing units that charge 1500 dollars as rent	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-allows_dogs
housing that costs the same as e0	SW.filter entity-en.housing_unit string-rent string-= SW.getProperty e0 string-rent
what kind of housing is e0	SW.filter entity-en.housing SW.reverse string-housing_type string-= e0
quiet e0	SW.countComparative entity-en.housing_unit string-neighborhood string-< number2
which housing with a private room rents for 1500 dollar monthly	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-rent string-= number1500 en.dollar
e0 in e1	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-neighborhood string-= e1
housing unit with the largest posting date	SW.superlative entity-en.housing_unit string-max SW.ensureNumericProperty string-posting_date
housing listed in the fewest neighborhoods	SW.countSuperlative entity-en.housing_unit string-min string-neighborhood
e0 with private bath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-housing_type string-= e0
housing units with a private bath	SW.filter entity-en.housing_unit string-has_private_bath
housing that is over 800 square feet or over 1000 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-> ( SW.ensureNumericEntity SW.concat )
what is the average price of e0	string-avg SW.getProperty entity-en.housing_unit string-rent
housing that ranges between 800 and 1000 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-<= ( SW.ensureNumericEntity SW.concat )
neighborhood that has at least 2 e0	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string->= number2 entity-en.housing_unit
catfriendly housing with a private bath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-allows_cats
which housing offers less than two kinds of units	SW.countComparative entity-en.housing_unit string-housing_type string-< number2
find cat friendly housing units with a private room	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-allows_cats
seeking houses in quiet neighborhoods	SW.countSuperlative entity-en.housing_unit string-min string-housing_type
housing that is beetween 800 and 1000 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string->= ( SW.ensureNumericEntity SW.concat )
housing units that are at least the same square footage as the housing unit on e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-size  )
what is the housing type of the housing unit that allows dogs	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-allows_dogs )
show me housing available for 1500 dollars a month or less	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-<= ( SW.ensureNumericEntity number1500 en.dollar )
housing unit that is 800 or 1000 square feet	SW.filter entity-en.housing_unit string-size string-= SW.concat
e0 between 800 and 1000 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-<= ( SW.ensureNumericEntity SW.concat )
find all units available midtown east	SW.filter entity-en.housing_unit string-neighborhood string-= en.neighborhood.midtown_west
housing unit with posting date less than that of e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
which housing unit resembles e0 or e1	SW.filter entity-en.housing SW.reverse string-housing_type string-= SW.concat
housing that is 1500month or less or 2000month or less	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-<= ( SW.ensureNumericEntity SW.concat )
dogfriendly housing	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-allows_dogs
a housing unit posted on d0 in any neighborhood	SW.filter entity-en.housing_unit string-neighborhood string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
find housing units in the neighborhoods of e0 with 1500 dollars as monthly rent	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-rent string-= number1500 en.dollar
which 1500monthly rentals are dogfriendly	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-rent string-= number1500 en.dollar
housing unit with a private room in e0	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-has_private_room
housing that allows dogs	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-allows_dogs )
which housing unit with an area of 800 square permits dogs	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-allows_dogs
housing units that allow cats in e0	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-allows_cats
800 square foot e0 with rent at 1500 a month	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-rent string-= number1500 en.dollar
what kind of housing is in e0	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 )
housing unit with size of either 800 or 1000 square feet	SW.filter entity-en.housing_unit string-size string-= SW.concat
which housing unit was posted before jan 2	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity date:2015:1:2 )
a housing unit that was posted on d0	SW.filter entity-en.housing_unit string-housing_type string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
find housing similar to the house located at e0	SW.filter entity-en.housing_unit string-housing_type string-= ( SW.filter entity-en.housing SW.reverse string-housing_type string-= e0 )
which housing unit permits cats and had a private bath in it	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-has_private_bath
what is the phone number of this e0 complex	.size entity-en.housing
what is the average size of housing	string-avg SW.getProperty entity-en.housing_unit string-size
housing posted in a neighborhood on d0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
find all 800 square foot units with private baths	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-size string-= number800 en.square_feet
housing that allows dogs that posted on d0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d0 ) string-allows_dogs
e0 with a private bathroom	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-has_private_bath
how  many neighbourhoods are there	.size entity-en.neighborhood
a housing unit in e0 that was posted on d1	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-posting_date string-= d1
which kind of housing is available for a rent of 1500 dollars per month	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar )
catfriendly housing with a private room	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-has_private_room
e0 that was posted on d1	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d1 ) string-housing_type string-= e0
what neighborhood is the housing unit in that was posted on d0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
what housing unit contains a private bath	SW.filter entity-en.housing_unit string-has_private_bath
e0 type housing unit that has private bath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-housing_type string-= e0
housing unit in e0 that has monthly rent of 1500	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-neighborhood string-= e0
housing that is 800 square feet or bigger	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string->= ( SW.ensureNumericEntity number800 en.square_feet )
find all housing units posted on d0	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
name housing types that has more than one housing unit of that type	SW.countComparative entity-en.housing SW.reverse string-housing_type string->= number2 entity-en.housing_unit
e0 that were posted on d1	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-posting_date string-= d1
e0 with a private room	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-has_private_room
housing with with largest posting date	SW.superlative entity-en.housing_unit string-max SW.ensureNumericProperty string-posting_date
dogfriendly 800 square foot e0	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-allows_dogs
show me housing with 800 square feet of space where cats are acceptable	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-size string-= number800 en.square_feet
find housing types other than e0	SW.filter entity-en.housing SW.reverse string-housing_type string-!= e0
housing with a master bedroom and private bath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-has_private_room
find a housing unit that is in two neighborhoods	SW.countComparative entity-en.housing_unit string-neighborhood string-= number2
housing in e0 that posted on d1	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d1 ) string-neighborhood string-= e0
list all e0 in e1	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-neighborhood string-= e1
neighborhood with e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-housing_type string-= e0 )
what size is the housing unit posted on d0	SW.filter entity-en.housing_unit string-size string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
show me housing which posted on or before the day e0 did	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
what housing unit with a private bath was posted on jan 2	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) string-has_private_bath
housing with fewer than two units	SW.countComparative entity-en.housing SW.reverse string-housing_type string-< number2 entity-en.housing_unit
e0 with a private bathroom that allow cats	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-allows_cats
find housing larger than e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-size  )
what housing unit in e0 was posted on jan 2	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-posting_date string-= date:2015:1:2
need a unit with a private room in the e0 area	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-neighborhood string-= e0
units with larger rent than e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-rent  )
housing units with 2 neighborhoods	SW.countComparative entity-en.housing_unit string-neighborhood string-= number2
find housing units with size lesser than 800 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-< ( SW.ensureNumericEntity number800 en.square_feet )
800 square feet housing unit with a private bath	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-has_private_bath
which housing unit is available for the least rent	SW.superlative entity-en.housing_unit string-min SW.ensureNumericProperty string-rent
housing unit in west midtown posted on d0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d0 ) string-neighborhood string-= en.neighborhood.midtown_west
how many neighborhoods	.size entity-en.neighborhood
which neighborhoods have housing where dogs are allowed	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-allows_dogs )
which housing unit has a rent of 1500 dollars or 2000 dollars per month	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-> ( SW.ensureNumericEntity SW.concat )
housing unit smaller than 800 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-< ( SW.ensureNumericEntity number800 en.square_feet )
what housing unit allowing cats was posted on jan 2	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) string-allows_cats
units posted before january 2nd	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity date:2015:1:2 )
aparartment or e0 units	SW.filter entity-en.housing_unit string-housing_type string-= SW.concat
what are the rare housing types	SW.countSuperlative entity-en.housing string-min SW.reverse string-housing_type entity-en.housing_unit
housing unit bigger than 800 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string->= ( SW.ensureNumericEntity number800 en.square_feet )
800 square foot e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-<= ( SW.ensureNumericEntity number800 en.square_feet )
neighborhood of e0	SW.filter ( SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= e0 ) SW.reverse string-neighborhood string-= e0
specify the housing type of the housing unit that has a private bath	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-has_private_bath )
how large is the unit at e0	SW.getProperty e0 string-size
housing types in the e0	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 )
housing unit that is an aprtment	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= en.housing.apartment ) string-housing_type string-= en.housing.apartment
show me housing units that arent e0	SW.filter entity-en.housing_unit string-housing_type string-!= e0
what housing unit posted on jan 2 has the same rent as e0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) SW.reverse string-rent string-= e0
looking for a unit with a private bathroom and dog friendly	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-allows_dogs
what kinds of housing include a private room	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-has_private_room )
what kind of housing is available for 1500month	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar )
which housing unit in this neighbourhood has the facility of a private bath	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-has_private_bath )
show me housing with 800 square feet of space	SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet
which housing unit has the least variety of houses	SW.countSuperlative entity-en.housing_unit string-min string-housing_type
housing unit with 2 types of housing	SW.countComparative entity-en.housing_unit string-housing_type string-< number2
what e0 housing unit has a private bath	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-has_private_bath
what are the  units that  do  not belong to the area around e0	SW.filter entity-en.housing_unit string-neighborhood string-!= e0
housing unit that allows cats	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-allows_cats
e0 with a private bath	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-has_private_bath
e0 that allow dogs	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-allows_dogs
neighborhood with the most housing units	SW.countSuperlative entity-en.neighborhood string-max SW.reverse string-neighborhood entity-en.housing_unit
housing type posted d0	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
which housing consists of two units maximum	SW.countComparative entity-en.housing SW.reverse string-housing_type string-<= number2 entity-en.housing_unit
e0 renting for 1500 a month	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-housing_type string-= e0
800 foot e0 with a private room	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-size string-= number800 en.square_feet
housing that is 800 square feet or less or 1000 square feet or less	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-<= ( SW.ensureNumericEntity SW.concat )
housing that is at least 800 square feet or at least 1000 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string->= ( SW.ensureNumericEntity SW.concat )
cat friendly e0 in e0	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-allows_cats
what is the neighborhood  of the housing unit with the monthly rent 1500 dollars	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar )
what is the type of housing that has a private room	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-has_private_room )
housing unit with the smallest posting date	SW.superlative entity-en.housing_unit string-min SW.ensureNumericProperty string-posting_date
how many neighborhoods are in the city	.size entity-en.neighborhood
which housing unit has  the variety of houses	SW.countSuperlative entity-en.housing_unit string-max string-housing_type
housing that allows dogs and was posted on d0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d0 ) string-allows_dogs
housing posted before d0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity d0 )
which housing posted on the same date as e0	SW.filter entity-en.housing_unit string-posting_date string-= SW.getProperty e0 string-posting_date
what neighborhood is e0 in	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= e0
which housing unit has the monthly rent of e0	SW.filter entity-en.housing_unit string-rent string-= SW.getProperty e0 string-rent
find 800 square feet sized housing in the neighborhoods of e0	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-neighborhood string-= e0
housing units with one housing type	SW.countComparative entity-en.housing_unit string-housing_type string-< number2
a neighborhood with at most twohouse units	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-<= number2 entity-en.housing_unit
800 square foot unit with rent of 1500 monthly	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-size string-= number800 en.square_feet
what kinds of housing allow cats	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-allows_cats )
find housing between 800 and 1000 square feet	SW.filter entity-en.housing_unit string-size string-= SW.concat
e0 posted on d0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity d0 )
what is the average find 800 square feet housing units that allow cats	string-avg SW.getProperty entity-en.housing_unit string-size
e0 that were posted on d1	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-posting_date string-= d1
show me the housing with the most space available	SW.superlative entity-en.housing_unit string-max SW.ensureNumericProperty string-size
what are the housing units in the area around e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 )
what e0 housing allows cats	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-neighborhood string-= e0
e0 or e1	SW.filter entity-en.housing_unit string-housing_type string-= SW.concat
which is the neighborhood shared by most nuumber of housing units	SW.countSuperlative entity-en.neighborhood string-max SW.reverse string-neighborhood entity-en.housing_unit
housing not posted on d0	SW.filter entity-en.housing_unit string-posting_date string-!= d0
find housing units around the neighborhoods of e0	SW.filter entity-en.housing_unit string-neighborhood string-= SW.getProperty e0 string-neighborhood
show me housing in e0 where rent is 1500 dollars a month	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-rent string-= number1500 en.dollar
which housing unit has a private room	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-has_private_room
what neighborhood is e0 in	SW.getProperty e0 string-neighborhood
which housing unit has 1500 dollars as monthly rent	SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar
which housing unit is in the area of e0 or e1	SW.filter entity-en.housing_unit string-neighborhood string-= SW.concat
what kind of housing is e0	SW.getProperty e0 string-housing_type
how much a month is the rent at e0	SW.getProperty e0 string-rent
housing e0 with a private bath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-housing_type string-= e0
find housing units in the same housing type of e0	SW.filter entity-en.housing_unit string-housing_type string-= SW.getProperty e0 string-housing_type
which housing unit is smaller than 800 square feet or 1000 square feet by area	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-< ( SW.ensureNumericEntity SW.concat )
housing that allows cats and includes a private room	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-allows_cats
what type of housing is e0	SW.filter entity-en.housing SW.reverse string-housing_type string-= e0
housing not in e0	SW.filter entity-en.housing_unit string-neighborhood string-!= e0
housing found in less than two neighborhoods	SW.countComparative entity-en.housing_unit string-neighborhood string-< number2
find housing units with posting date between january 2nd and february 3rd	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.concat )
a unit with a private bath that posted on d0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d0 ) string-has_private_bath
which housing unit has an e0 kind of house	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-housing_type string-= e0 )
e0 that is the same size are e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-size  )
which housing unit permits cats in it	SW.filter entity-en.housing_unit string-allows_cats
what neighborhoods have units with 800 square feet	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet )
neighborhood with the most available housing	SW.countSuperlative entity-en.neighborhood string-max SW.reverse string-neighborhood entity-en.housing_unit
what is the other areas around e0 that has housing units	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 )
housing posted before e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
housing with posting dates before january 2nd and february 3rd	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.concat )
looking for a quiet neighborhood	SW.countSuperlative entity-en.neighborhood string-min SW.reverse string-neighborhood entity-en.housing_unit
what housing is the same type as the housing posted on d0	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
housing unit that is not 800 square feet	SW.filter entity-en.housing_unit string-size string-!= number800 en.square_feet
e0 in the e0 or e1 neighborhoods	SW.filter entity-en.housing_unit string-neighborhood string-= SW.concat
housing units that are e0	SW.filter entity-en.housing_unit string-housing_type string-= e0
housing unit with a cheaper rent than e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-rent  )
housing unit with a private bath and cost 1500 dollars rent	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-rent string-= number1500 en.dollar
which housing unit does not belong to the e0 type with a monthly rent of 1500 dollars	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-housing_type string-= e0
what housing unit allowing dogs was posted on jan 2	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) string-allows_dogs
which housing unit has e0 kind of houses with an area of 800 square feet	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-size string-= number800 en.square_feet
posting with at least two types of housing	SW.countComparative entity-en.housing_unit string-housing_type string->= number2
which housing unit has more than two kinds of houses	SW.countComparative entity-en.housing SW.reverse string-housing_type string-> number2 entity-en.housing_unit
housing that is 800 square feet or less	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-<= ( SW.ensureNumericEntity number800 en.square_feet )
find housing units with rental charges between 1500 to 2000 dollars	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string->= ( SW.ensureNumericEntity SW.concat )
800 square food housing units that have private baths	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-size string-= number800 en.square_feet
find housing units less than 1000  square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-<= ( SW.ensureNumericEntity SW.concat )
when was e0 posted	SW.getProperty e0 string-posting_date
list all housing that is smaller than 800 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-< ( SW.ensureNumericEntity number800 en.square_feet )
e0 in the e1 neighborhood	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-neighborhood string-= e1
e0 with rent between 1500 and 2000	SW.filter entity-en.housing_unit string-rent string-= SW.concat
find housing units with size greater than 800 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-> ( SW.ensureNumericEntity number800 en.square_feet )
what is the date of the e0 posting	SW.getProperty e0 string-posting_date
800 square feet housing that allows dogs	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-size string-= number800 en.square_feet
neighborhood with at most two housing	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-<= number2 entity-en.housing_unit
how many housing units are there	.size entity-en.housing_unit
unit with private bath	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-has_private_bath )
which housing unit has a rent of 1500 dollars per month	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-<= ( SW.ensureNumericEntity number1500 en.dollar )
housing that is less than 800 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-< ( SW.ensureNumericEntity number800 en.square_feet )
housing that is at least as expensive as e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-rent  )
find 800 square feet housing units that are cat friendly	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-size string-= number800 en.square_feet
find housing units in the neighborhoods of e0	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-neighborhood string-= e0
which is the housing unit that permits dogs inside it	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-allows_dogs
housing unit near e0	SW.filter entity-en.housing_unit string-neighborhood string-= e0
neighborhood with more than two housing units	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-> number2 entity-en.housing_unit
find housing unit with the latest posting date	SW.superlative entity-en.housing_unit string-min SW.ensureNumericProperty string-posting_date
housing posted the same day or after e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
which housing unit is posted lately	SW.superlative entity-en.housing_unit string-min SW.ensureNumericProperty string-posting_date
housing that was posted after d0 or d1	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.concat )
housing units that have more than two neighborhoods	SW.countComparative entity-en.housing_unit string-neighborhood string-> number2
find cat friendly housing units with a private bath	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-has_private_bath
housing in e0 with a private room	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-neighborhood string-= e0
what housing unit is in the same neighborhood as the unit posted on jan 2	SW.filter entity-en.housing_unit string-neighborhood string-= ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 )
what kind of housing are the two housing units	SW.countComparative entity-en.housing SW.reverse string-housing_type string-= number2 entity-en.housing_unit
what housing unit posted on jan 2 is in e0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) string-neighborhood string-= e0
units larger than 800 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-> ( SW.ensureNumericEntity SW.concat )
what neighborhood has the least amount of housing	SW.countSuperlative entity-en.neighborhood string-min SW.reverse string-neighborhood entity-en.housing_unit
find 800 square feet housing units of the type e0	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-housing_type string-= e0
housing with posting date of d0	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
housing unit with a private room and allows cats	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-allows_cats
housing that is bigger than e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-size  )
which housing unit has e0 kind of house with an area of 800 square feet	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-housing_type string-= e0
pet friendly housing near e0	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-allows_cats
housing that is more than 1500month	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-> ( SW.ensureNumericEntity number1500 en.dollar )
pet friendly housing with 1500 dollars as rent	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-rent string-= number1500 en.dollar
building with the least number of housing types	SW.countSuperlative entity-en.housing_unit string-min string-housing_type
find cat friendly housing units that charge 1500 dollars as rent	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-rent string-= number1500 en.dollar
800 square foot e0 with private bathroom	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-has_private_bath
housing that was posted on d0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.concat )
building with two or less kinds of unis	SW.countComparative entity-en.housing_unit string-housing_type string-<= number2
which housing unit is in the area of e0	SW.filter entity-en.housing_unit string-neighborhood string-= ( SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= e0 )
which housing unit permits dogs and has the facility of a private bath	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-has_private_bath
housing that is the same size or bigger than e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-size  )
e0 for rent below 1500	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-<= ( SW.ensureNumericEntity number1500 en.dollar )
housing unit which is an e0 that is dogs friendly	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-housing_type string-= e0
housing posted on or before d0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity d0 )
housing units of either 800 square feet or 1000 square feet	SW.concat
e0 with a master bathroom in e0 neighbourhood	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-has_private_bath
housing that is not 1500month	SW.filter entity-en.housing_unit string-rent string-!= number1500 en.dollar
which housing unit offers a private bath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-has_private_bath
housing posted on d0	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
housing allowing cats that was posted on d0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d0 ) string-allows_cats
a neighborhood with fewer than twohouse units	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-< number2 entity-en.housing_unit
housing posted on d0 around e0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d0 ) SW.reverse string-neighborhood string-= e0
e0 unit with 1500 rent monthly	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-neighborhood string-= e0
show housing types for three or more units	SW.countComparative entity-en.housing SW.reverse string-housing_type string-> number2 entity-en.housing_unit
e0 that permit cats	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-housing_type string-= e0
what kind of housing is e0 and e1	SW.filter entity-en.housing SW.reverse string-housing_type string-= SW.concat
housing typical of e0 housing posted on d1	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d1 ) SW.reverse string-size string-= e0
housing unit that costs 1500 dollars rent and allows dogs	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-allows_dogs
housing unit in e0 and allows dogs	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-allows_dogs
housing in a neighborhood larger than two houses	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-> number2 entity-en.housing_unit
housing unit that both have a private room and allow dogs	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-allows_dogs
smallest available unit	SW.superlative entity-en.housing_unit string-min SW.ensureNumericProperty string-size
housing units that are 800 square feet and have private baths	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-has_private_bath
which neighborhoods have dogfriendly housing	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-allows_dogs )
which housing posted jan 2nd permits dogs	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-posting_date string-= date:2015:1:2
housing unit with the same monthly rent as e0	SW.filter entity-en.housing_unit string-rent string-= SW.getProperty e0 string-rent
find housing units with private room near e0	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-has_private_room
what housing has been posted lately	SW.superlative entity-en.housing_unit string-min SW.ensureNumericProperty string-posting_date
a housing unit with a private bath that posted on d0	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-posting_date string-= d0
housing in e0 neighborhood that was posted on d1	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d1 ) SW.reverse string-neighborhood string-= e0
800 square foot e0 with a private room	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-has_private_room
what housing unit has two or more housing types	SW.countComparative entity-en.housing_unit string-housing_type string-> number2
housing type on e0	SW.getProperty e0 string-housing_type
e0 complexes with the most units	SW.countSuperlative entity-en.housing_unit string-max string-housing_type
e0 that are dog friendly	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-allows_dogs
what is the average rent per month of a housing unit	string-avg SW.getProperty entity-en.housing_unit string-rent
800 square foot housing unit with a private room	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-has_private_room
find 800 square feet sized housing units with a private room	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-size string-= number800 en.square_feet
housing that was posted after d0 or after d1	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.concat )
where are 800 square fee housing units that allow dogs	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-allows_dogs
800 square feet in e0	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-neighborhood string-= e0
cheapest places to rent	SW.superlative entity-en.housing_unit string-min SW.ensureNumericProperty string-rent
which housing unit is available in the area around mid town west	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= en.neighborhood.midtown_west ) string-neighborhood string-= en.neighborhood.midtown_west
find housing with a private room and bath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-has_private_bath
find housing units posted before or on the same date as e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
exclude e0 from e0	SW.filter entity-en.housing_unit string-neighborhood string-!= e0
which housing unit has the highest rent per month	SW.superlative entity-en.housing_unit string-max SW.ensureNumericProperty string-rent
show me housing that is the same type as at least two others	SW.countComparative entity-en.housing SW.reverse string-housing_type string->= number2 entity-en.housing_unit
which housing unit has a monthly rent of less than 1500 dollars	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-< ( SW.ensureNumericEntity number1500 en.dollar )
housing with any monthly rent posted on d0	SW.filter entity-en.housing_unit string-rent string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
housing posted before d0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity d0 )
which housing unit permits cats inside it	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-allows_cats
dogfriendly housing that is 800 square feet	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-allows_dogs
housing at least 800 to 1000 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-> ( SW.ensureNumericEntity SW.concat )
housing that is not an e0	SW.filter entity-en.housing_unit string-housing_type string-!= e0
housing with 1500 dollars rent that has a private bath	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-has_private_bath
what housing unit was posted on jan 2	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) string-posting_date string-= date:2015:1:2
housing unit that allows dogs and cats	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-allows_cats
which housing unit has the most kind of houses	SW.countSuperlative entity-en.housing string-max SW.reverse string-housing_type entity-en.housing_unit
housing unit posted on d0 and that is the same size as e0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d0 ) SW.reverse string-size string-= e0
housing posted on january 2nd that allows dogs	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-posting_date string-= date:2015:1:2
all housing units posted on d0	SW.filter entity-en.housing_unit string-posting_date string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
housing that was posted on d0	SW.filter entity-en.housing_unit string-posting_date string-= SW.concat
what is the housing type at e0	SW.filter entity-en.housing SW.reverse string-housing_type string-= e0
what is the housing type that allows cats	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-allows_cats )
housing unit within at most 2 neighborhoods	SW.countComparative entity-en.housing_unit string-neighborhood string-<= number2
which housing unit has a jan 2nd posting	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) string-posting_date string-= date:2015:1:2
how large is e0	SW.getProperty e0 string-size
housing with private bath that was posted on d0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d0 ) string-has_private_bath
name housing types other than e0 type	SW.filter entity-en.housing SW.reverse string-housing_type string-!= e0
what housing is priced at 1500 or 2000 dollars	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-<= ( SW.ensureNumericEntity SW.concat )
housing that is not 800 square feet	SW.filter entity-en.housing_unit string-size string-!= number800 en.square_feet
e0 with a private bathroom	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-has_private_bath )
find housing units that satisfies two housing types	SW.countComparative entity-en.housing_unit string-housing_type string-<= number2
housing e0 in a e1 neighborhood	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e1 ) string-housing_type string-= e0
housing e0 that allows cats	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-housing_type string-= e0
pet friendly housing unit	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-allows_cats
e0 with rent that is more expensive than e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-rent  )
find housing units with the least number of neighborhoods	SW.countSuperlative entity-en.housing_unit string-min string-neighborhood
e0 with a cheaper rent than e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-rent  )
what housing unit has 2 or more types	SW.countComparative entity-en.housing_unit string-housing_type string->= number2
housing posted the same day as e0	SW.filter entity-en.housing_unit string-posting_date string-= SW.getProperty e0 string-posting_date
what housing unit in the same neighborhood as e0 was posted on jan 2	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) SW.reverse string-neighborhood string-= e0
which housing unit allows dogs and cats	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-allows_cats
which housing unit with a rent of 1500 dollars per month permits cats in it	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-rent string-= number1500 en.dollar
private housing in e0	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-neighborhood string-= e0
housing that was posted on d0 of e0 kind	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d0 ) SW.reverse string-posting_date string-= e0
what kind of housing offers 800 square feet and allows cats	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-allows_cats
neighborhoods with housing that is 1500month	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar )
which neighborhood is e0 in	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= e0
e0 with a private bathroom for rent at 1500	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-has_private_bath
housing that posted on the same day at e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
what neighborhood is the 800 square foot e0 in	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet )
housing like e0 that was posted on d1	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d1 ) SW.reverse string-size string-= e0
rarest housing type	SW.countSuperlative entity-en.housing string-min SW.reverse string-housing_type entity-en.housing_unit
housing posted before or on the same day as e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
e0 in the e1 neighborhood	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-neighborhood string-= e1
e0 with a private bath for rent at 1500	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-rent string-= number1500 en.dollar
find housing units with the most number of neighborhoods	SW.countSuperlative entity-en.housing_unit string-max string-neighborhood
want a housing type like e0	SW.filter ( SW.filter entity-en.housing SW.reverse string-housing_type string-= e0 ) SW.reverse string-housing_type string-= e0
show me housing in e0 or e1	SW.filter entity-en.housing_unit string-neighborhood string-= SW.concat
housing in e0 neighborhood posted on d1	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-posting_date string-= d1
housing that has at least two neighborhood	SW.countComparative entity-en.housing_unit string-neighborhood string->= number2
cats permitted in unit	SW.filter entity-en.housing_unit string-allows_cats
housing unit posted d0 and the same rent as e0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d0 ) SW.reverse string-rent string-= e0
housing that allows dogs and was posted on d0	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-posting_date string-= d0
housing unit with a private room	SW.filter entity-en.housing_unit string-has_private_room
which housing unit with an area of 800 square feet has a private room	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-size string-= number800 en.square_feet
how big is the housing unit	string-sum SW.getProperty entity-en.housing_unit string-size
housing unit that is cheaper than 1500 dollars	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-< ( SW.ensureNumericEntity number1500 en.dollar )
area around e0	SW.getProperty e0 string-neighborhood
housing unit that allows cats and has a private bath	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-has_private_bath
housing with a private room that is 800 square feet total	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-has_private_room
which housing unit is bigger  in area by 800 square feet or 1000 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-> ( SW.ensureNumericEntity SW.concat )
housing unit at most 800 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-<= ( SW.ensureNumericEntity number800 en.square_feet )
e0 with a private room	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-has_private_room
housing of two types	SW.countComparative entity-en.housing SW.reverse string-housing_type string-= number2 entity-en.housing_unit
what neighborhood was the housing unit posted on jan 2	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 )
find housing units with just one neighborhood	SW.countComparative entity-en.housing_unit string-neighborhood string-< number2
where are the most number of housing units found	SW.countSuperlative entity-en.neighborhood string-max SW.reverse string-neighborhood entity-en.housing_unit
neighborhoods of housing units that allows cats	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-allows_cats )
find housing units of the type e0	SW.filter entity-en.housing SW.reverse string-housing_type string-= ( SW.filter entity-en.housing_unit string-housing_type string-= e0 )
housing costing more than 1500 dollars per month	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-> ( SW.ensureNumericEntity number1500 en.dollar )
condomonium or flat	SW.concat
housing of 800 square feet posted on d0	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-posting_date string-= d0
find housing units with 1500 dollars to 2000 as rent	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-<= ( SW.ensureNumericEntity SW.concat )
housing that is either an e0 or townhouse	SW.countComparative entity-en.housing SW.reverse string-housing_type string-> number2 entity-en.housing_unit
e0 with rent below 1500	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-< ( SW.ensureNumericEntity number1500 en.dollar )
e0 with rent between 1500 to 2000 dollars	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-> ( SW.ensureNumericEntity SW.concat )
count of different units	.size entity-en.housing
housing that is 800 square feet with a private room	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-size string-= number800 en.square_feet
neighborhoods with housing units with private rooms	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-has_private_room )
neighborhoods medtown west or e0	SW.concat
what is the most common housing type	SW.countSuperlative entity-en.housing string-max SW.reverse string-housing_type entity-en.housing_unit
housing with no more than two housing units	SW.countComparative entity-en.housing SW.reverse string-housing_type string-<= number2 entity-en.housing_unit
what housing unit is priced at 1500 dollars	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-<= ( SW.ensureNumericEntity number1500 en.dollar )
find housing units with a private room and has 1500 dollars as monthly rent	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-rent string-= number1500 en.dollar
housing unit that allows dogs and has a private bath	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-has_private_bath
show me housing in e0 where dogs are welcome	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-allows_dogs
find a housing unit posted on d0 with the same rent price as e0	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d0 ) SW.reverse string-rent string-= e0
which housing unit in the e0 area has a private room	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-neighborhood string-= e0
find me a housing unti that chagres 1500 for rent and has a priiiiiiat bathroom	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-has_private_room
which housing units are at least 800 square feet in size	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string->= ( SW.ensureNumericEntity number800 en.square_feet )
housing the same size as e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-size  )
housing unit posted on d0	SW.filter entity-en.housing_unit string-neighborhood string-= ( SW.filter entity-en.housing_unit string-posting_date string-= d0 )
which neighborhoods have housing with a private bath	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-has_private_bath )
housing that is cheaper than 1500month	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-< ( SW.ensureNumericEntity number1500 en.dollar )
which 1500monthly rentals are 800 square feet	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-size string-= number800 en.square_feet
how much is e0 per month	SW.getProperty e0 string-rent
which housing unit resembles e0 in size	SW.filter entity-en.housing_unit string-size string-= SW.getProperty e0 string-size
find housing that has a private room and bath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-has_private_room
housing posted january 2nd that includes a private room	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) string-has_private_room
which housing unit with an area of 800 square feet has the facility of a private room	SW.filter ( SW.filter entity-en.housing_unit string-size string-= number800 en.square_feet ) string-has_private_room
what housing was posted no earlier than jan 2	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity date:2015:1:2 )
what housing unit  posted on jan 2 has a private room	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-posting_date string-= date:2015:1:2
unit with one housing type	SW.countComparative entity-en.housing_unit string-housing_type string-< number2
housing that posted after d0 or d1	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.concat )
find housings unit posted on other dates except for january 2nd	SW.filter entity-en.housing_unit string-posting_date string-!= date:2015:1:2
housing that is 1500month and includes a private room	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-has_private_room
either 800 or 1000 square feet	SW.concat
what housing units are the same size as those in e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-size  )
find housing units with rental charges greater than e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-rent  )
what housing is cat friendly and costs 1500 dollars	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-rent string-= number1500 en.dollar
find housing units posted after e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
housing that was posted on d0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity d0 )
what is the neighborhood of the e0 that is pet friendly	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-allows_cats )
which housing unit belongs to the e0 kind with the facility of a private troom	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-housing_type string-= e0
unit larger than 800 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-> ( SW.ensureNumericEntity number800 en.square_feet )
e0 with a rent below 1500 a month	SW.filter entity-en.housing_unit string-rent string-!= number1500 en.dollar
find the housing unit with the most monthly rent	SW.superlative entity-en.housing_unit string-max SW.ensureNumericProperty string-rent
housing with the same rent as e0	SW.filter entity-en.housing_unit string-rent string-= SW.getProperty e0 string-rent
housing units outsizing e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-size  )
catfriendly e0 with a private bathroom	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-allows_cats
e0 that rent for at least 1500	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string->= ( SW.ensureNumericEntity number1500 en.dollar )
housing near e0	SW.getProperty e0 string-neighborhood
housing in e0 that was posted on d1	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d1 ) string-neighborhood string-= e0
housing unit with a private bath and 1500 dollar rent	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-rent string-= number1500 en.dollar
housing with 2 surrounding neighborhoods	SW.countComparative entity-en.housing_unit string-neighborhood string-<= number2
e0 with a private room that rents for 1500 a month	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-has_private_room
housing that allows cats and is 1500 a month	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-allows_cats
which housing unit is posted on the posting date of e0	SW.filter entity-en.housing_unit string-posting_date string-= SW.getProperty e0 string-posting_date
what housing unit with a private room was posted on jan 2	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) string-has_private_room
housing e0 with a private bath	SW.filter ( SW.filter entity-en.housing_unit string-housing_type string-= e0 ) string-has_private_bath
e0 800 square feet and above	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string->= ( SW.ensureNumericEntity number800 en.square_feet )
what is the neighborhood of e0	SW.getProperty e0 string-neighborhood
seeking e0 or e1	SW.concat
e0 that have a private bath	SW.filter ( SW.filter entity-en.housing_unit string-has_private_bath ) string-has_private_bath
housing posted before d0 or d1	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.concat )
find housing units that are pet friendly	SW.filter ( SW.filter entity-en.housing_unit string-allows_dogs ) string-allows_dogs
neighborhood that has two housing	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-= number2 entity-en.housing_unit
in which area is e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= e0
e0 with a private bath that also accepts cats	SW.filter ( SW.filter entity-en.housing_unit string-allows_cats ) string-has_private_bath
e0 or e1 housing	SW.concat
what kind of housing is e0 or e1	SW.filter entity-en.housing SW.reverse string-housing_type string-= SW.concat
housing that is at least 1500month or at least 2000month	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string->= ( SW.ensureNumericEntity SW.concat )
which housing unit has the smallest size	SW.superlative entity-en.housing_unit string-min SW.ensureNumericProperty string-size
800 square foot e0 for 1500 rent	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-size string-= number800 en.square_feet
housing that is 1500month with a private room	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-rent string-= number1500 en.dollar
what housing unit posted was posted on jan 2	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= date:2015:1:2 ) SW.reverse string-posting_date string-= en.housing_unit.123_sesame_street
which housing has a monthly rent of 1500 dollars	SW.filter ( SW.filter entity-en.housing_unit string-rent string-= number1500 en.dollar ) string-rent string-= number1500 en.dollar
housing types of the most units	SW.countSuperlative entity-en.housing string-max SW.reverse string-housing_type entity-en.housing_unit
housing units in e0 that allow dogs	SW.filter ( SW.filter entity-en.housing_unit string-neighborhood string-= e0 ) string-allows_dogs
a twohousing unit	SW.countComparative entity-en.housing_unit string-housing_type string-= number2
what is the neighborhood of the  housing unit with a private room	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.housing_unit string-has_private_room )
find a housing that is no more than 800 square feet	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-size  string-<= ( SW.ensureNumericEntity number800 en.square_feet )
show me housing that is the same type as e0	SW.filter ( SW.filter entity-en.housing SW.reverse string-housing_type string-= e0 ) SW.reverse string-housing_type string-= e0
which housing unit with a rent of 1500 dollars per month has a private room	SW.filter ( SW.filter entity-en.housing_unit string-has_private_room ) string-rent string-= number1500 en.dollar
housing kind of e0 that was posted on d1	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d1 ) SW.reverse string-housing_type string-= e0
housing that does not have a higher rent then e0	SW.filter entity-en.housing_unit SW.ensureNumericProperty string-rent  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-rent  )
a housing unit posted on d0 or d1	SW.filter entity-en.housing_unit string-posting_date string-= SW.concat
housing in the neighborhood of e0	SW.filter entity-en.housing_unit string-neighborhood string-= SW.getProperty e0 string-neighborhood
find a housing unit posted on d0 and that allows cats	SW.filter ( SW.filter entity-en.housing_unit string-posting_date string-= d0 ) string-allows_cats
show me recipes with a preparation time equal to or greater than the cooking time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what ingredients are not in the e0 recipe	SW.filter entity-en.ingredient SW.reverse string-requires string-!= e0
what is the posting date for e0	SW.getProperty e0 string-posting_date
what recipes posting date is at least the same as e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
what meal is for only one recipe	SW.countComparative entity-en.meal SW.reverse string-meal string-< number2 entity-en.recipe
what recipe has the most types of cuisine	SW.countSuperlative entity-en.recipe string-max string-cuisine
what recipe has two or less types of cuisine	SW.countComparative entity-en.recipe string-cuisine string-<= number2
show me recipes posted on the same day as e0	SW.filter entity-en.recipe string-posting_date string-= SW.getProperty e0 string-posting_date
what recipes posting date is d0 and requires e0	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d0 ) string-requires string-= e0
ingredient of two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-= number2 entity-en.recipe
show me recipes with the cuisine least represented	SW.countSuperlative entity-en.recipe string-min string-cuisine
what is a recipe posted later than d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity d0 )
what kind of cuisine is e0	SW.getProperty e0 string-cuisine
show me the recipe that has the shortest cooking time	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-cooking_time
what recipes require at leas two ingredients	SW.countComparative entity-en.recipe string-requires string->= number2 entity-en.ingredient
what ingredients are used in e0 or e1	SW.filter entity-en.ingredient SW.reverse string-requires string-= SW.concat
what recipe needs least ingredients	SW.countSuperlative entity-en.recipe string-min string-requires entity-en.ingredient
what is the total prep time for the recipes	string-sum SW.getProperty entity-en.recipe string-preparation_time
show me recipes that require the cooking time of e0	SW.filter entity-en.recipe string-cooking_time string-= SW.getProperty e0 string-cooking_time
which recipes posted in d0 require e0	SW.filter ( SW.filter entity-en.recipe string-requires string-= e0 ) string-posting_date string-= d0
show me recipes that whose preparation time is shorter than e0 cooking time	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what meal is e0 or e1 made for	SW.filter entity-en.meal SW.reverse string-meal string-= SW.concat
which recipe has the cooking time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what meal has at least two recipes for it	SW.countComparative entity-en.meal SW.reverse string-meal string->= number2 entity-en.recipe
what recipe was posted before d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity d0 )
show me recipes requiring one ingredient	SW.countComparative entity-en.recipe string-requires string-< number2 entity-en.ingredient
what e0 recipe was posted in d1	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d1 ) string-meal string-= e0
show me recipes posted in or before d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity d0 )
find some e0 recipes	SW.filter entity-en.recipe string-meal string-= e0
what recipe was posted the same day as e0	SW.filter entity-en.recipe string-posting_date string-= SW.getProperty e0 string-posting_date
what recipe is designed for more than two meals	SW.countComparative entity-en.recipe string-meal string-> number2 entity-en.meal
show me recipes that follows two or more cuisines	SW.countComparative entity-en.recipe string-cuisine string->= number2
which recipes have a preparation time as long as the cooking time of e0	SW.filter entity-en.recipe string-preparation_time string-= SW.getProperty e0 string-cooking_time
a recipe which posted no sooner than d0 or d1	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.concat )
show me recipes whose preparation time is a most the cooking time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
which recipes take longer to cook than to prepare e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
which recipe was posted in d0 or d1	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.concat )
show me recipes posted in or after d0 or in or after d1	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.concat )
what ingredients does e0 not need	SW.filter entity-en.ingredient SW.reverse string-requires string-!= e0
which recipe belongs to the cuisine of e0	SW.filter entity-en.recipe string-cuisine string-= SW.getProperty e0 string-cuisine
what is the most ingredient that this recipe requires	SW.countSuperlative entity-en.ingredient string-max SW.reverse string-requires entity-en.recipe
what recipes preparation time is greater than that of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
name the recipe used for e0 prepared with e1	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-requires string-= e1
name the recipe that is prepared for e0	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-meal string-= e0
show recipes whose posted date is on or before d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity d0 )
find recipe for two meals	SW.countComparative entity-en.recipe string-meal string-<= number2 entity-en.meal
when was e0 recipe posted	SW.getProperty e0 string-posting_date
which recipe can be prepared at the earliest	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-preparation_time
what recipe is cooked in less time than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
show me recipes posted in d0 or later	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity d0 )
recipes posted before e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
for what meal is e0	SW.filter ( SW.filter entity-en.meal SW.reverse string-meal string-= e0 ) SW.reverse string-meal string-= e0
what recipes takes more time to prepare than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what is a recipe that takes at least as long to make as e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
show me recipes posted before e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
show me recipes that have a preparation time less than the cooking time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what recipes dont call for e0	SW.filter entity-en.recipe string-requires string-!= e0
what recipes are for less than two meals	SW.countComparative entity-en.recipe string-meal string-< number2 entity-en.meal
list  the ingredients of e0	SW.filter entity-en.ingredient SW.reverse string-requires string-= e0
what recipe calls for over two ingredients	SW.countComparative entity-en.recipe string-requires string-> number2 entity-en.ingredient
what ingredient is called for by the most recipes	SW.countSuperlative entity-en.ingredient string-max SW.reverse string-requires entity-en.recipe
show recipes with the maximum number of cuisines	SW.countSuperlative entity-en.recipe string-max string-cuisine
what ingredient is in two or less recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-<= number2 entity-en.recipe
what recipe takes more time to prepare than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
meal than e0 is not taken	SW.filter entity-en.meal SW.reverse string-meal string-!= e0
how many ingredients	.size entity-en.ingredient
what recipe does not need e0	SW.filter entity-en.recipe string-requires string-!= e0
name ingredients that is required in  three or more recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-> number2 entity-en.recipe
show me ingredients required by recipes that require e0	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-requires string-= e0 )
show me ingredients required by e0 recipes	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-meal string-= e0 )
recipe of less than two meal	SW.countComparative entity-en.recipe string-meal string-< number2 entity-en.meal
show me ingredients required by more than two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-> number2 entity-en.recipe
what recipe takes the longest time to prep	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-preparation_time
which recipe was posted in d0	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d0 ) string-posting_date string-= d0
which recipes were posted after d0 or d1	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.concat )
show me recipes posted at the same date as e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
recipe of at least two cuisine	SW.countComparative entity-en.recipe string-cuisine string->= number2
recipes that require less or same time than the time taken to prepare e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
which recipe was posted on the same date as that of e0	SW.filter entity-en.recipe string-posting_date string-= SW.getProperty e0 string-posting_date
what is a recipe from the fewest cuisines	SW.countSuperlative entity-en.recipe string-min string-cuisine
what ingredient is needed for fewer than two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-< number2 entity-en.recipe
what meals have two recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-= number2 entity-en.recipe
find a recipe for e0	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-meal string-= e0
show me recipes for two meals at most	SW.countComparative entity-en.recipe string-meal string-<= number2 entity-en.meal
which recipes were posted before d0 or d1	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.concat )
what are ingredients in e0	SW.filter ( SW.filter entity-en.ingredient SW.reverse string-requires string-= e0 ) SW.reverse string-requires string-= e0
show me recipes not posted in d0	SW.filter entity-en.recipe string-posting_date string-!= d0
what is the most commonly used ingredient	SW.countSuperlative entity-en.ingredient string-max SW.reverse string-requires entity-en.recipe
what recipes ingredient does this e0 require	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-meal string-= e0 )
what recipe takes the longest to cook	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-cooking_time
show me the average cooking time for all recipes	string-avg SW.getProperty entity-en.recipe string-cooking_time
what recipe can make fewer than two meals	SW.countComparative entity-en.recipe string-meal string-< number2 entity-en.meal
what recipe takes less time to prep than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what is an ingredient found in e0	SW.filter entity-en.ingredient SW.reverse string-requires string-= e0
what meal has less than two recipes for it	SW.countComparative entity-en.meal SW.reverse string-meal string-< number2 entity-en.recipe
show me meals with the least recipes	SW.countSuperlative entity-en.meal string-min SW.reverse string-meal entity-en.recipe
what meal can you find at least two recipes for	SW.countComparative entity-en.meal SW.reverse string-meal string->= number2 entity-en.recipe
which meal has two recipes designated for it	SW.countComparative entity-en.meal SW.reverse string-meal string-= number2 entity-en.recipe
what recipe has two or more types of cuisine	SW.countComparative entity-en.recipe string-cuisine string->= number2
what is a recipe from fewer than two cuisines	SW.countComparative entity-en.recipe string-cuisine string-< number2
show ingredients for e0 recipes	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-meal string-= e0 )
what is the average cooking time of recipe	string-avg SW.getProperty entity-en.recipe string-cooking_time
what recipes share at least two ingredients	SW.countComparative entity-en.ingredient SW.reverse string-requires string->= number2 entity-en.recipe
list the recipes for e0 or e1	SW.filter entity-en.recipe string-meal string-= SW.concat
what meal most recipes made for	SW.countSuperlative entity-en.meal string-max SW.reverse string-meal entity-en.recipe
what recipes preparation time is no more than the cooking time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what recipe cooks for equal or less time than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
show the first recipe posted	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-posting_date
which recipe requires the most ingredients	SW.countSuperlative entity-en.recipe string-max string-requires entity-en.ingredient
which recipe can be used for two or more meals	SW.countComparative entity-en.recipe string-meal string->= number2 entity-en.meal
what is a e0 recipe	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-meal string-= e0
a recipe that posted after d0 or d1	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.concat )
name the ingredient in most recipes	SW.countSuperlative entity-en.ingredient string-max SW.reverse string-requires entity-en.recipe
recipes for e0 or quice	SW.concat
what recipe calls for two or less ingredients	SW.countComparative entity-en.recipe string-requires string-<= number2 entity-en.ingredient
which recipe has the most number of cuisine	SW.countSuperlative entity-en.recipe string-max string-cuisine
what is an ingredient not found in e0	SW.filter entity-en.ingredient SW.reverse string-requires string-!= e0
find recipes posted in 2005	SW.filter entity-en.recipe string-posting_date string-= date:2004:-1:-1
what recipe can be used for at least two meals	SW.countComparative entity-en.recipe string-meal string->= number2 entity-en.meal
how many recipes	.size entity-en.recipe
what recipe has the shortest cooking time	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-cooking_time
what recipe has over two types of cuisine	SW.countComparative entity-en.recipe string-cuisine string-> number2
what ingredients does e0 or e1 require	SW.filter entity-en.ingredient SW.reverse string-requires string-= SW.concat
show me recipes posted after d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.concat )
what is the number of ingredients for that recipe	.size entity-en.ingredient
which food item is needed in  two recipes or more	SW.countComparative entity-en.ingredient SW.reverse string-requires string-> number2 entity-en.recipe
what is the average preparation time for a recipe	string-avg SW.getProperty entity-en.recipe string-preparation_time
show me recipes that involve two or more ingredients	SW.countComparative entity-en.recipe string-requires string->= number2 entity-en.ingredient
what recipe was posted the same date as the e0 recipe	SW.filter entity-en.recipe string-posting_date string-= SW.getProperty e0 string-posting_date
what is the cooking time of e0	SW.getProperty e0 string-cooking_time
show me meals requiring e0	SW.filter entity-en.meal SW.reverse string-meal string-= ( SW.filter entity-en.recipe string-requires string-= e0 )
name an ingredient required in more than two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-> number2 entity-en.recipe
which recipes require e0	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-requires string-= e0 )
what are the recipes that are made with e0	SW.filter entity-en.recipe string-requires string-= e0
a recipe with e0 as an ingredient	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-requires string-= e0 )
recipe with posting date d0	SW.filter entity-en.recipe string-posting_date string-= d0
recipes for less than three meals	SW.countComparative entity-en.recipe string-meal string-<= number2 entity-en.meal
which food item is not needed in e0	SW.filter entity-en.ingredient SW.reverse string-requires string-!= e0
what is the cook time for e0	SW.getProperty e0 string-cooking_time
what recipe has one cuisine	SW.countComparative entity-en.recipe string-cuisine string-< number2
what recipe was posted before or on the same day as e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
what is the usual time required to finish the recipe	string-avg SW.getProperty entity-en.recipe string-preparation_time
which ingredient is needed in less than two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-< number2 entity-en.recipe
what recipe was posted no later than d0 or d1	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.concat )
what is the average prep time for the recipe	string-avg SW.getProperty entity-en.recipe string-preparation_time
what recipe do you cook for less time than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
which recipe was posted the latest	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-posting_date
what is a recipe that is good for e0 or e1	SW.filter entity-en.recipe string-meal string-= SW.concat
what recipe was posted during d0	SW.filter entity-en.recipe string-posting_date string-= d0
what day was e0 posted	SW.getProperty e0 string-posting_date
this receipe requires more than two ingredient	SW.countComparative entity-en.recipe string-requires string-> number2 entity-en.ingredient
name the ingredient required by at least two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string->= number2 entity-en.recipe
show me recipes that cannot be taken for e0	SW.filter entity-en.recipe string-meal string-!= e0
what recipe takes longer to prep than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
which e0 recipe requires e1 for its preparation	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-requires string-= e1
what recipe makes something for e0	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-meal string-= e0
what is the total cooking time of the recipe	string-sum SW.getProperty entity-en.recipe string-cooking_time
what is a recipe used for fewer than two meals	SW.countComparative entity-en.recipe string-meal string-< number2 entity-en.meal
show recipes posted before e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
what recipe requires fewer than two ingredients	SW.countComparative entity-en.recipe string-requires string-< number2 entity-en.ingredient
what other ingredients do recipes that use e0 require	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-requires string-= e0 )
find me all recipes that require e0	SW.filter entity-en.recipe string-requires string-= e0
which recipes require the same ingredients as e0	SW.filter entity-en.recipe string-requires string-= ( SW.filter entity-en.ingredient SW.reverse string-requires string-= e0 )
ingredients required in less than three recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-<= number2 entity-en.recipe
which recipe needs more than two ingredients	SW.countComparative entity-en.recipe string-requires string-> number2 entity-en.ingredient
show me recipes requiring the fewest ingredients	SW.countSuperlative entity-en.recipe string-min string-requires entity-en.ingredient
which meal has least number of recipes	SW.countSuperlative entity-en.meal string-min SW.reverse string-meal entity-en.recipe
what recipe takes no longer to prepare than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
show me recipes that have the same or longer preparation time as e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
recipe of cuisine of e0	SW.filter entity-en.recipe string-cuisine string-= SW.getProperty e0 string-cuisine
what recipe requires the ingredients of e0	SW.filter entity-en.recipe string-requires string-= ( SW.filter entity-en.ingredient SW.reverse string-requires string-= e0 )
what recipe posted in d0 requires e0 as an ingredient	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d0 ) string-requires string-= e0
show me recipes that require e0	SW.filter entity-en.recipe string-requires string-= e0
what recipes preparation time is no more than the preparation time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what recipe was posted before d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity d0 )
what meals are recipes for e0 for	SW.filter entity-en.meal SW.reverse string-meal string-= ( SW.filter entity-en.recipe string-meal string-= e0 )
what e0 recipes posting date is d1	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-posting_date string-= d1
what recipe was posted no later than the e0 recipe	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
show me recipes posted in d0	SW.filter entity-en.recipe string-posting_date string-= d0
which recipes take less or as long to prepare as e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what is the meal that e0 goes with	SW.filter ( SW.filter entity-en.meal SW.reverse string-meal string-= e0 ) SW.reverse string-meal string-= e0
show me ingredients that two recipes require	SW.countComparative entity-en.ingredient SW.reverse string-requires string-= number2 entity-en.recipe
what recipe can you prepare in the same or less time than it takes to cook e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
show me ingredients required for two recipes at most	SW.countComparative entity-en.ingredient SW.reverse string-requires string-<= number2 entity-en.recipe
recipe cooked in preparation time of e0 or more	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
show me recipes that are not e0 recipes	SW.filter entity-en.recipe string-meal string-!= e0
which recipe requires e0 or e1	SW.concat
what is the cooking time of e0	SW.getProperty e0 string-cooking_time
recipes without e0	SW.filter entity-en.recipe string-requires string-!= e0
what ingredient is not required to make e0	SW.filter entity-en.ingredient SW.reverse string-requires string-!= e0
what is an ingredient required by the most recipes	SW.countSuperlative entity-en.ingredient string-max SW.reverse string-requires entity-en.recipe
show me ingredients required for the most recipes	SW.countSuperlative entity-en.ingredient string-max SW.reverse string-requires entity-en.recipe
show me two recipes for a meal	SW.countComparative entity-en.meal SW.reverse string-meal string-= number2 entity-en.recipe
what is the total number of recipes	.size entity-en.recipe
what recipes posting date is lesser than that of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
which recipe falls under the most kinds of cuisine	SW.countSuperlative entity-en.recipe string-max string-cuisine
what recipe can make fewer than two types of cuisine	SW.countComparative entity-en.recipe string-cuisine string-< number2
how many total ingredients are used in all the recipes	.size entity-en.ingredient
show me recipes with a cooking time greater or equal to the preparation time for e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
a recipe which takes at least as long to cook as e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what recipes take the same amount of time or less to cook as e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
show me recipes that have the fewest ingredients	SW.countSuperlative entity-en.recipe string-min string-requires entity-en.ingredient
recipes total preparation time	string-sum SW.getProperty entity-en.recipe string-preparation_time
what recipe requires the least ingredients	SW.countSuperlative entity-en.ingredient string-min SW.reverse string-requires entity-en.recipe
what is the total time required for preparing the dish	string-sum SW.getProperty entity-en.recipe string-preparation_time
which recipes were posted before e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
which recipe has the least amount of prep time	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-preparation_time
what is the preparation time for that recipe	string-sum SW.getProperty entity-en.recipe string-preparation_time
which recipe is used for the most meals	SW.countSuperlative entity-en.recipe string-max string-meal entity-en.meal
ingredients in e0	SW.filter ( SW.filter entity-en.ingredient SW.reverse string-requires string-= e0 ) SW.reverse string-requires string-= e0
which recipe was posted first	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-posting_date
which meals are recipes posted in d0 for	SW.filter entity-en.meal SW.reverse string-meal string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
what ingredients go in e0	SW.filter ( SW.filter entity-en.ingredient SW.reverse string-requires string-= e0 ) SW.reverse string-requires string-= e0
recipe with cooking time not more than that of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what recipe is most recent	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-posting_date
what recipe can you prep in the same or longer amount of time as e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
which recipe takes the longest to prepare	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-preparation_time
show me recipes posted d0 and earlier	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity d0 )
what recipe requires the lowest cooking time	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-cooking_time
show me ingredients not required for e0	SW.filter entity-en.ingredient SW.reverse string-requires string-!= e0
what recipes take more time to prepare than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what recipes were posted before d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity d0 )
what recipes were posted after e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
what recipe is not for a e0 meal	SW.filter entity-en.recipe string-meal string-= e0
show me recipes posted in d0	SW.filter entity-en.recipe string-posting_date string-= d0
what recipes cooking time is at lowest that of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
which recipes are for two meals at most	SW.countComparative entity-en.recipe string-meal string-<= number2 entity-en.meal
what is recipe for a meal	SW.countComparative entity-en.recipe string-meal string-< number2 entity-en.meal
what recipe is for no more than two meals	SW.countComparative entity-en.recipe string-meal string-<= number2 entity-en.meal
show me recipes posted no earlier than d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity d0 )
what ingredients do e0 recipes call for	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-meal string-= e0 )
what is the recipe that needs the minimum number of ingredients	SW.countSuperlative entity-en.recipe string-min string-requires entity-en.ingredient
what recipes cooking time is the preparation time of e0	SW.filter entity-en.recipe string-cooking_time string-= SW.getProperty e0 string-preparation_time
how long does the recipe take to prep	string-sum SW.getProperty entity-en.recipe string-preparation_time
what ingredient is used by two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-= number2 entity-en.recipe
what is a recipe from more than two cuisines	SW.countComparative entity-en.recipe string-cuisine string-> number2
what recipes need three or more ingredients	SW.countComparative entity-en.recipe string-requires string-> number2 entity-en.ingredient
what recipe prepare in less or same time to cook e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
when was the e0 recipe posted	SW.getProperty e0 string-posting_date
name a recipe with a prep time no longer than the cook time for e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
show recipes with the preparation time as the cooking time of e0	SW.filter entity-en.recipe string-preparation_time string-= SW.getProperty e0 string-cooking_time
which recipe requires two ingredients	SW.countComparative entity-en.recipe string-requires string-= number2 entity-en.ingredient
find meal recipes for e0	SW.filter entity-en.meal SW.reverse string-meal string-= ( SW.filter entity-en.recipe string-meal string-= e0 )
a recipe which takes longer to cook than the preparation time for e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
show me ingredients required by at least two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string->= number2 entity-en.recipe
which recipe has a prep time no greater than the prep time for e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
show me recipes that have a shorter preparation time than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what is a cuisine of e0	SW.getProperty e0 string-cuisine
a recipe requiring the fewest ingredients	SW.countSuperlative entity-en.recipe string-min string-requires entity-en.ingredient
show me recipes that follows one or two cuisines	SW.countComparative entity-en.recipe string-cuisine string-<= number2
what recipe can be prepped in less time than e0 can be cooked	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what time can be prepped in the same time as e0	SW.filter entity-en.recipe string-preparation_time string-= SW.getProperty e0 string-preparation_time
what recipes posting date is d0	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d0 ) string-posting_date string-= d0
which recipes take less time to prepare than to cook e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what recipe posted in d0 can make a e0 meal	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-posting_date string-= d0
a recipe for e0	SW.getProperty e0 string-cuisine
show me recipes that require two ingredients	SW.countComparative entity-en.recipe string-requires string-= number2 entity-en.ingredient
for which meal is the dish e0 used	SW.filter ( SW.filter entity-en.meal SW.reverse string-meal string-= e0 ) SW.reverse string-meal string-= e0
what ingredient is required in two or more recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string->= number2 entity-en.recipe
show me recipe that has at least have two cuisine	SW.countComparative entity-en.recipe string-cuisine string->= number2
e0 or e1	SW.concat
how many ingredients are needed	.size entity-en.ingredient
show me ingredients required for fewer than two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-< number2 entity-en.recipe
what recipe has at the most no more than two cuisines	SW.countComparative entity-en.recipe string-cuisine string-<= number2
what recipe has the smallest preparation time	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-preparation_time
which recipes require e0 or e1	SW.filter entity-en.recipe string-requires string-= SW.concat
for what meal are there the fewest number of recipes	SW.countSuperlative entity-en.meal string-min SW.reverse string-meal entity-en.recipe
which recipe requires less cooking time than e0 preparation	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what are ingredients required by the recipe posted in d0	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
which recipes are for e0 or e1	SW.filter entity-en.recipe string-meal string-= SW.concat
show me a recipe that requires only two ingredients	SW.countComparative entity-en.recipe string-requires string-= number2 entity-en.ingredient
what recipe is for two	SW.countComparative entity-en.recipe string-meal string-<= number2 entity-en.meal
show me recipes that required two or more ingredients	SW.countComparative entity-en.recipe string-requires string->= number2 entity-en.ingredient
what is a recipe using e0 or e1 as an ingredient	SW.concat
find recipes posted later than d0 or d1	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.concat )
recipes for e0 or e1 menus	SW.concat
find recipes that need two ingredients	SW.countComparative entity-en.recipe string-requires string-<= number2 entity-en.ingredient
recipe of number of ingredients	SW.countSuperlative entity-en.recipe string-max string-requires entity-en.ingredient
show me a meal that has more than two recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-> number2 entity-en.recipe
show recipes for the meal as the same for e0	SW.filter entity-en.recipe string-meal string-= ( SW.filter entity-en.meal SW.reverse string-meal string-= e0 )
which recipe belongs to less number of cuisines	SW.countSuperlative entity-en.recipe string-min string-cuisine
find the recipes for same cuisine as e0	SW.filter entity-en.recipe string-cuisine string-= SW.getProperty e0 string-cuisine
show recipes whose posting date is not d0	SW.filter entity-en.recipe string-posting_date string-!= d0
what recipe takes the shortest time to cook	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-cooking_time
show me recipes posted after d0 or after d1	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.concat )
show me recipes with two ingredients	SW.countComparative entity-en.recipe string-requires string-= number2 entity-en.ingredient
when was the e0 recipe posted	SW.getProperty e0 string-posting_date
show recipes for e0 or e1	SW.filter entity-en.recipe string-meal string-= SW.concat
what recipes comes under less than three cuisine	SW.countComparative entity-en.recipe string-cuisine string-<= number2
what ingredients are required in two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-= number2 entity-en.recipe
what recipes  are prepared in less time tan e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
a recipe for a meal other than e0	SW.filter entity-en.recipe string-meal string-!= e0
what recipe takes longer to cook than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
find a recipe which has a longer cooking time than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
recipe having more than two cuisine	SW.countComparative entity-en.recipe string-cuisine string-> number2
recipes posted with or after posting e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
recipe whose posting date is at least e0 posting date	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
what meal has two or more recipes	SW.countComparative entity-en.meal SW.reverse string-meal string->= number2 entity-en.recipe
how many total recipes are listed	.size entity-en.recipe
what ingredients are used least in recipes	SW.countSuperlative entity-en.ingredient string-min SW.reverse string-requires entity-en.recipe
recipes that require lesser time to prepare than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what ingredients do recipes posted in d0 call for	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
what recipe needs e0 or e1 for its preparation	SW.filter entity-en.recipe string-requires string-= SW.concat
which recipes were posted when e0 was posted	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
show me recipes that fall under the same cuisine as e0	SW.filter entity-en.recipe string-cuisine string-= SW.getProperty e0 string-cuisine
to which cuisine does e0 belong	SW.getProperty e0 string-cuisine
how many total meals are there	.size entity-en.meal
what e0 recipe requires e1	SW.filter ( SW.filter entity-en.recipe string-requires string-= e1 ) string-meal string-= e0
what recipe was posted before e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
find recipes that can be prepared sooner than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what is a meal with a recipe posted in d0	SW.filter entity-en.meal SW.reverse string-meal string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
find recipes posted after d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity d0 )
which is the food item that is needed in two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-= number2 entity-en.recipe
what is the used e0 or e1	SW.concat
what recipe makes a non e0 meal	SW.filter entity-en.recipe string-meal string-!= e0
which recipes were posted before d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity d0 )
what recipe takes longer to cook than e0 takes to prep	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
show me preparation time for e0	SW.getProperty e0 string-preparation_time
what recipe can be prepped in equal or less time than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what recipe was posted after or on the same day as e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
for which meal is e0 had	SW.filter entity-en.meal SW.reverse string-meal string-= e0
show recipes posted on the same date as e0	SW.filter entity-en.recipe string-posting_date string-= SW.getProperty e0 string-posting_date
show me recipes with cooking time less than the preparation time for e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what are the recipe that at most use two ingredients	SW.countComparative entity-en.recipe string-requires string-<= number2 entity-en.ingredient
for what meal can maximum recipes be found	SW.countSuperlative entity-en.meal string-max SW.reverse string-meal entity-en.recipe
show me recipes with fewer than two ingredients	SW.countComparative entity-en.recipe string-requires string-< number2 entity-en.ingredient
which recipe is for a lunchtime meal	SW.filter entity-en.meal SW.reverse string-meal string-= ( SW.filter entity-en.recipe string-meal string-= en.meal.lunch )
how many ingredients are there	.size entity-en.ingredient
what two ingredients does that recipe require	SW.countComparative entity-en.ingredient SW.reverse string-requires string-= number2 entity-en.recipe
which ingredient is needed in more than one recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string->= number2 entity-en.recipe
which is the recipe that was posted last	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-posting_date
what recipe takes most time to cook	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-cooking_time
recipe for the most number of meal	SW.countSuperlative entity-en.recipe string-max string-meal entity-en.meal
show me recipes for e0 meals	SW.filter entity-en.recipe string-meal string-= ( SW.filter entity-en.meal SW.reverse string-meal string-= e0 )
which recipes are intended for e0 or e1	SW.filter entity-en.recipe string-meal string-= SW.concat
the e0 recipe  posting date is d1	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d1 ) string-meal string-= e0
show me recipes with preparation time equal to or longer than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
a recipe for the fewest types of meals	SW.countSuperlative entity-en.recipe string-min string-meal entity-en.meal
show me recipes that were not posted in d0	SW.filter entity-en.recipe string-posting_date string-!= d0
recipes for least number of meals	SW.countSuperlative entity-en.recipe string-min string-meal entity-en.meal
show me recipes that call for more than two ingredients	SW.countComparative entity-en.recipe string-requires string-> number2 entity-en.ingredient
when was the recipe for e0 posted	SW.getProperty e0 string-posting_date
recipes with just two ingredients	SW.countComparative entity-en.recipe string-requires string-= number2 entity-en.ingredient
what recipe is the oldest	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-posting_date
list the e0 recipes contains e1	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-requires string-= e1
which recipe is found in only one cuisine	SW.countComparative entity-en.recipe string-cuisine string-< number2
recipes posted after 2003	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.concat )
which recipe needs more time than e0 preparation	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
show recipes that does not have e0 as one of its ingredients	SW.filter entity-en.recipe string-requires string-!= e0
what is an ingredient found in fewer than two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-< number2 entity-en.recipe
list recipes that require e0	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-requires string-= e0 )
find  e0 recipes posted in d1	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d1 ) string-meal string-= e0
what recipe has the greatest cooking time	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-cooking_time
show me recipes requiring an ingredient from e0	SW.filter entity-en.recipe string-requires string-= ( SW.filter entity-en.ingredient SW.reverse string-requires string-= e0 )
what recipes preparation time is lesser than the cooking time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
show me ingredients required by recipes posted in d0	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
what recipes require one or two ingredients	SW.countComparative entity-en.recipe string-requires string-<= number2 entity-en.ingredient
which recipe was posted at the posting date of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
what meal is e0 not used for	SW.filter entity-en.meal SW.reverse string-meal string-!= e0
what recipes have the same cooking time as e0	SW.filter entity-en.recipe string-cooking_time string-= SW.getProperty e0 string-cooking_time
which  recipe takes as much time to prepare as e0	SW.filter entity-en.recipe string-preparation_time string-= SW.getProperty e0 string-preparation_time
find the e0 recipes posted in d1	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d1 ) string-meal string-= e0
find a recipe that needs e0 for its preparation	SW.filter ( SW.filter entity-en.recipe string-requires string-= e0 ) string-requires string-= e0
show me recipes that use two ingredients or less	SW.countComparative entity-en.recipe string-requires string-<= number2 entity-en.ingredient
show me recipes with preparation times longer than cooking time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
recipe with only one ingredient	SW.countComparative entity-en.recipe string-requires string-< number2 entity-en.ingredient
show me recipes with fewer than two cuisines	SW.countComparative entity-en.recipe string-cuisine string-< number2
how long does the recipe take to prepare	string-sum SW.getProperty entity-en.recipe string-preparation_time
what meal is e0 or e1 in	SW.filter entity-en.meal SW.reverse string-meal string-= SW.concat
show me recipes requiring the ingredient e0	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-requires string-= e0 )
show me recipes not posted in d0	SW.filter entity-en.recipe string-posting_date string-!= d0
show me the ingredients for e0	SW.filter entity-en.ingredient SW.reverse string-requires string-= e0
which recipe takes less time to prepare than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what recipe calling for e0 was posted in d1	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d1 ) string-requires string-= e0
for what meals share two or more recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-> number2 entity-en.recipe
show me recipes for e0 posted in d1	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-posting_date string-= d1
what ingredients are used only for e0	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-meal string-= e0 )
what recipes posting date is at the greatest in d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity d0 )
show me recipes posted the same day as e0 or before	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
show me recipes posted in d0 requiring e0	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d0 ) string-requires string-= e0
what recipe has a cuisine including e0	SW.filter entity-en.recipe string-cuisine string-= SW.getProperty e0 string-cuisine
show me the most required ingredient in recipes	SW.countSuperlative entity-en.ingredient string-max SW.reverse string-requires entity-en.recipe
show me recipes with the longest cooking time	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-cooking_time
show me recipes that were posted later than d0	SW.filter entity-en.meal SW.reverse string-meal string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
what recipes need e0 or e1	SW.concat
what is a recipe that was not posted in d0	SW.filter entity-en.recipe string-posting_date string-!= d0
show me meals with two recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-= number2 entity-en.recipe
which meal has less than two recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-< number2 entity-en.recipe
which recipe takes longer to cook than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
show me meals with two or fewer recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-<= number2 entity-en.recipe
which recipes take as long as prepare e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
show me recipes that work for more than one meal	SW.countSuperlative entity-en.recipe string-min string-meal entity-en.meal
what recipe takes equal or less time to cook than e0 takes to prep	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
whats the average preparation time of a recipe	string-avg SW.getProperty entity-en.recipe string-preparation_time
how many recipes use more than two ingredients	SW.countComparative entity-en.recipe string-requires string-> number2 entity-en.ingredient
what recipes cooking time is lower than the preparation time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what recipe calls for either e0 or e1	SW.filter entity-en.recipe string-requires string-= SW.concat
which recipe was posted during d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity d0 )
what meal has over two recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-> number2 entity-en.recipe
which recipes take longer to cook than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
show me recipes posted the same day as e0 or after	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
show me recipes for e0 or e1	SW.concat
what is a recipe that is for more than two different meals	SW.countComparative entity-en.recipe string-meal string-> number2 entity-en.meal
find recipes posted before d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity d0 )
a recipe requiring fewer than two ingredients	SW.countComparative entity-en.recipe string-requires string-< number2 entity-en.ingredient
what ingredient is required in only one recipe	SW.countComparative entity-en.ingredient SW.reverse string-requires string-< number2 entity-en.recipe
what ingredient is most used	SW.countSuperlative entity-en.ingredient string-max SW.reverse string-requires entity-en.recipe
show me recipes good for at least two meals	SW.countComparative entity-en.recipe string-meal string->= number2 entity-en.meal
show me recipes posted in d0	SW.filter entity-en.recipe string-posting_date string-= d0
show me recipes for fewer than two meals	SW.countComparative entity-en.recipe string-meal string-< number2 entity-en.meal
what are the ingredients of e0 or e1	SW.filter entity-en.ingredient SW.reverse string-requires string-= SW.concat
what recipe is cooked faster than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
for what meal is e0 used for	SW.filter entity-en.meal SW.reverse string-meal string-= e0
what is the average time needed for the preparation of the dish	string-avg SW.getProperty entity-en.recipe string-cooking_time
what recipe has the latest date posted	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-posting_date
show me recipes with cooking time equal to or greater than cooking time for e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
recipe whose cooking time is not more than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what is the prep time for e0	SW.getProperty e0 string-preparation_time
what is a recipe found in two or more cuisines	SW.countComparative entity-en.recipe string-cuisine string->= number2
what recipe requires at the least two ingredients	SW.countComparative entity-en.recipe string-requires string->= number2 entity-en.ingredient
what recipe was posted after e0 recipe	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
which meal had two recipes or more	SW.countComparative entity-en.meal SW.reverse string-meal string-> number2 entity-en.recipe
show me recipes that can be used for two meals	SW.countComparative entity-en.recipe string-meal string-= number2 entity-en.meal
which recipe has the same cooking time of e0	SW.filter entity-en.recipe string-preparation_time string-= SW.getProperty e0 string-cooking_time
what recipe posted in d0 makes a e0 meal	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d0 ) string-meal string-= e0
which recipe has the least number of meals	SW.countSuperlative entity-en.recipe string-min string-meal entity-en.meal
e0 or e1	SW.concat
what meal has the least recipes	SW.countSuperlative entity-en.meal string-min SW.reverse string-meal entity-en.recipe
what meal has maximum recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-<= number2 entity-en.recipe
show me recipes that take the same amount of time to prepare as e0 does to cook	SW.filter entity-en.recipe string-preparation_time string-= SW.getProperty e0 string-cooking_time
name ingredients that is not required for e0	SW.filter entity-en.ingredient SW.reverse string-requires string-!= e0
which recipe  s cooking time is equal to that of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
find a meal with two recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-= number2 entity-en.recipe
for which meal is that recipe that has e0 as one of its ingredients	SW.filter entity-en.meal SW.reverse string-meal string-= ( SW.filter entity-en.recipe string-requires string-= e0 )
what recipe can you prep in the same or more time as it takes to cook e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
which recipes were posted after d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity d0 )
which recipes were posted up to d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity d0 )
find a e0 recipe that is prepared with e1	SW.filter ( SW.filter entity-en.recipe string-requires string-= e1 ) string-meal string-= e0
show me a recipe that has a posting date of at least d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity d0 )
what is a meal that incorporates e0	SW.filter ( SW.filter entity-en.meal SW.reverse string-meal string-= e0 ) SW.reverse string-meal string-= e0
which meal has the least recipes dedicated to it	SW.countSuperlative entity-en.meal string-min SW.reverse string-meal entity-en.recipe
what is a recipe that takes no more time to cook than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
name a recipe which was posted on or later than the posting date of the e0 recipe	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
recipe prepared in more time than cooking time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what recipe requires three or more ingredients	SW.countComparative entity-en.recipe string-requires string-> number2 entity-en.ingredient
show me recipes that take the same amount of time or more to cook as e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
which recipes require the least amount of ingredients	SW.countSuperlative entity-en.recipe string-min string-requires entity-en.ingredient
how many meals does this make	.size entity-en.meal
which recipe takes the least amount of time to prepare	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-preparation_time
ingredients not required to prepare e0	SW.filter entity-en.ingredient SW.reverse string-requires string-!= e0
which ingredient is needed by e0 or e1	SW.filter entity-en.ingredient SW.reverse string-requires string-= SW.concat
which recipe is intended for the least number of meals	SW.countSuperlative entity-en.recipe string-min string-meal entity-en.meal
a e0 recipe posted in d1	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-posting_date string-= d1
which is the last posted recipe	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-posting_date
what recipe serves at the most three	SW.countSuperlative entity-en.recipe string-max string-meal entity-en.meal
what recipe needs e0 and is for e1	SW.filter ( SW.filter entity-en.recipe string-requires string-= e0 ) string-meal string-= e1
what recipe was posted in either d0 or d1	SW.filter entity-en.recipe string-posting_date string-= SW.concat
recipe in least cuisines	SW.countSuperlative entity-en.recipe string-min string-cuisine
show me recipes from the same cuisine as e0	SW.filter entity-en.recipe string-cuisine string-= SW.getProperty e0 string-cuisine
what meal has the most number of recipes	SW.countSuperlative entity-en.meal string-max SW.reverse string-meal entity-en.recipe
what is the cooking time of e0	SW.getProperty e0 string-cooking_time
recipes that require same time to prepare than e0	SW.filter entity-en.recipe string-preparation_time string-= SW.getProperty e0 string-preparation_time
show me recipes that require less than two ingredients	SW.countComparative entity-en.ingredient SW.reverse string-requires string-< number2 entity-en.recipe
show me the oldest recipe	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-posting_date
which recipes fall under more than two cuisines	SW.countComparative entity-en.recipe string-cuisine string-> number2
which recipe was posted the earliest	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-posting_date
what recipe requires more prep time than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
a recipe with e0 posted in d1	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d1 ) string-requires string-= e0
either e0 or e1	SW.concat
show the recipe that takes the longest time to cook	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-cooking_time
what recipe doesnt require e0	SW.filter entity-en.recipe string-requires string-!= e0
what ingrediant is used in the fewest recipes	SW.countSuperlative entity-en.ingredient string-min SW.reverse string-requires entity-en.recipe
tell recipes with e0 for e1	SW.filter ( SW.filter entity-en.recipe string-meal string-= e1 ) string-requires string-= e0
how long does the recipe take to cook	string-sum SW.getProperty entity-en.recipe string-cooking_time
what recipe requiring e0 makes a e1 meal	SW.filter ( SW.filter entity-en.recipe string-meal string-= e1 ) string-requires string-= e0
what is the average cooking time for that recipe	string-avg SW.getProperty entity-en.recipe string-cooking_time
show recipes that could be used in any meal	SW.countComparative entity-en.recipe string-meal string-> number2 entity-en.meal
what recipe requires less prep time than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what is an ingredient found in a e0 recipe	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-meal string-= e0 )
which recipes were posted in d0 for e0	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-posting_date string-= d0
show me recipes posted after d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.concat )
which recipe has a larger cooking time than the preparation time needed for e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
recipe for only one meal	SW.countComparative entity-en.recipe string-meal string-< number2 entity-en.meal
show me recipes that requires the most time to prepare the dish	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-preparation_time
what recipe was posted the earliest	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-posting_date
show me recipes posted before d0 or before d1	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.concat )
what recipes have the same or longer preparation time as e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what ingredient is in than two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-> number2 entity-en.recipe
what recipes can be prepared faster than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
is the recipe for e0 or e1	SW.concat
what meal has two or fewer recipes designated for it	SW.countComparative entity-en.meal SW.reverse string-meal string-<= number2 entity-en.recipe
show me recipes requiring two or fewer ingredients	SW.countComparative entity-en.recipe string-requires string-<= number2 entity-en.ingredient
which meal has two or more recipes	SW.countComparative entity-en.meal SW.reverse string-meal string->= number2 entity-en.recipe
which recipe needs the longest preparation tome	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-preparation_time
what is a meal with no more than two recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-<= number2 entity-en.recipe
find me the recipes need more than one ingredients	SW.countComparative entity-en.recipe string-requires string->= number2 entity-en.ingredient
show me recipes with posting dates from d0 or later	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity SW.concat )
find recipes posted in d0 or d1	SW.filter entity-en.recipe string-posting_date string-= SW.concat
show me recipes with cooking times equal to cooking time of e0	SW.filter entity-en.recipe string-cooking_time string-= SW.getProperty e0 string-cooking_time
what recipes require e0 and are for e1	SW.filter ( SW.filter entity-en.recipe string-meal string-= e1 ) string-requires string-= e0
which meal has the least number of recipes	SW.countSuperlative entity-en.meal string-min SW.reverse string-meal entity-en.recipe
show me recipe which take as much time as e0	SW.filter entity-en.recipe string-preparation_time string-= SW.getProperty e0 string-cooking_time
which recipes need two ingredients	SW.countComparative entity-en.recipe string-requires string-= number2 entity-en.ingredient
which recipe was posted the earliest	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-posting_date
find a recipe that was posted  by d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity d0 )
show recipes that requires at most the preparation time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
which recipe is posted after the posting date of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
show me recipes that has e0 as one of its ingredients	SW.filter entity-en.recipe string-requires string-= e0
show me e0 recipes that posted in d1	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d1 ) string-meal string-= e0
recipes prepared in e0 cooking time	SW.filter entity-en.recipe string-preparation_time string-= SW.getProperty e0 string-cooking_time
which recipes can be used for most number of meals	SW.countSuperlative entity-en.recipe string-max string-meal entity-en.meal
what is a recipe from no more than two different cuisines	SW.countComparative entity-en.recipe string-cuisine string-<= number2
name ingredients used only in one or two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-<= number2 entity-en.recipe
name ingredients used in more than one recipe	SW.countComparative entity-en.ingredient SW.reverse string-requires string-= number2 entity-en.recipe
what is an ingredient used in more than two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-> number2 entity-en.recipe
show me recipes for e0 or e1	SW.concat
how many meals are there	.size entity-en.meal
show me a recipe for the least number of meals	SW.countSuperlative entity-en.recipe string-min string-meal entity-en.meal
show me recipes requiring e0	SW.filter ( SW.filter entity-en.recipe string-requires string-= e0 ) string-requires string-= e0
show me recipe that require longer time to cook than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what recipe was posted in d0 and needs e0	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d0 ) string-requires string-= e0
show me recipes not for e0	SW.filter entity-en.recipe string-meal string-!= e0
show me recipes that take less time to prepare than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what ingredient is required in either e0 or e1	SW.filter entity-en.ingredient SW.reverse string-requires string-= SW.concat
find recipe that needs the maximum number of food items	SW.countSuperlative entity-en.recipe string-max string-requires entity-en.ingredient
show me meals with fewer than two recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-< number2 entity-en.recipe
which recipes are not for e0	SW.filter entity-en.recipe string-meal string-!= e0
show recipes posted in d0 and has e0 as one of its ingredients	SW.filter ( SW.filter entity-en.recipe string-requires string-= e0 ) string-posting_date string-= d0
what recipes cooking time is at least the preparation time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what is a recipe from the same cuisine as e0	SW.filter entity-en.recipe string-cuisine string-= SW.getProperty e0 string-cuisine
how many total recipes are there	.size entity-en.recipe
show me meal with less than two recipe	SW.countComparative entity-en.meal SW.reverse string-meal string-< number2 entity-en.recipe
show me recipes with the most preparation time	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-preparation_time
what e0 recipes contain e1	SW.filter ( SW.filter entity-en.recipe string-requires string-= e1 ) string-meal string-= e0
show me recipes posted in d0 and d1	SW.filter entity-en.recipe string-posting_date string-= SW.concat
how long does this recipe take to cook	string-sum SW.getProperty entity-en.recipe string-cooking_time
show recipes that require at the most time as e0 preparation	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
show me recipes that take less time to cook than it takes to prepare e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what ingredient is found in e0	SW.filter entity-en.recipe string-requires string-= ( SW.filter entity-en.ingredient SW.reverse string-requires string-= e0 )
which recipe was posted most recently	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-posting_date
find a recipe that is good for e0 or e1	SW.filter entity-en.recipe string-meal string-= SW.concat
what recipes posting date is in d0 and what ingredients does it require	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
how much time it takes to prepare recipe	string-sum SW.getProperty entity-en.recipe string-preparation_time
show me recipes with a preparation time equal to the cooking time of e0	SW.filter entity-en.recipe string-preparation_time string-= SW.getProperty e0 string-cooking_time
what meal is the recipe e0 for	SW.filter entity-en.recipe string-meal string-= ( SW.filter entity-en.meal SW.reverse string-meal string-= e0 )
what is the average preparation time across all recipes	string-avg SW.getProperty entity-en.recipe string-preparation_time
which recipe requires the same ingredient as e0	SW.filter entity-en.recipe string-requires string-= ( SW.filter entity-en.ingredient SW.reverse string-requires string-= e0 )
what recipes cooking time is the same as e0	SW.filter entity-en.recipe string-cooking_time string-= SW.getProperty e0 string-cooking_time
ingredients in recipe posted in d0	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
show me recipe to do a meal for a single person	SW.countSuperlative entity-en.recipe string-min string-meal entity-en.meal
show me recipes that take as long to prepare as e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
show me e0 recipes that need e1	SW.filter ( SW.filter entity-en.recipe string-requires string-= e1 ) string-meal string-= e0
show me recipes that require e0 or e1	SW.filter entity-en.recipe string-requires string-= SW.concat
what recipe makes two types of cuisine	SW.countComparative entity-en.recipe string-cuisine string-= number2
what recipe cooks in more or the same time as e0 takes to prep	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what recipe is for two meals	SW.countComparative entity-en.recipe string-meal string->= number2 entity-en.meal
recipes that requires the same or more time to prepare as e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
an ingredient required by at least two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string->= number2 entity-en.recipe
show me recipes posted in d0 that use e0	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d0 ) string-requires string-= e0
recipes posted after d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity d0 )
how much time is needed to cook this dish	string-sum SW.getProperty entity-en.recipe string-cooking_time
which recipe is prepared using the same amount of time as that of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what recipes preparation time is at least that of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
name the recipe with a cooking time with at least the cooking time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what recipes have the same or less preparation time as e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
find recipes for all kinds of meals	SW.countSuperlative entity-en.recipe string-max string-meal entity-en.meal
what recipes cooking time is greater than that of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what is the cuisine of e0	SW.getProperty e0 string-cuisine
recipes with more preparation time than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what meal can be made by the recipe posted in d0	SW.filter entity-en.meal SW.reverse string-meal string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
find recipes that can be used for  more than two meals	SW.countComparative entity-en.recipe string-meal string-> number2 entity-en.meal
what recipe is fastest cooked	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-cooking_time
what type of cuisine is e0	SW.getProperty e0 string-cuisine
are there any recipes which were posted twice in d0	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d0 ) string-posting_date string-= d0
what recipes have a cooking time that is at least as long as e0 preparation time	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what recipes posting date is at most d0 or d1	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.concat )
what meal doesnt call for e0	SW.filter entity-en.meal SW.reverse string-meal string-!= e0
when is e0 recipe posted	SW.getProperty e0 string-posting_date
what recipe requires highest number of ingredients	SW.countSuperlative entity-en.recipe string-max string-requires entity-en.ingredient
which recipes can make two meals	SW.countComparative entity-en.recipe string-meal string-= number2 entity-en.meal
show me recipes that posted no later than the e0 recipe	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
show recipes with e0 as an ingredient and is posted in d1	SW.filter ( SW.filter entity-en.recipe string-posting_date string-= d1 ) string-requires string-= e0
what is the newest recipe	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-posting_date
how long does it take to  make e0	SW.getProperty e0 string-cooking_time
what recipes require e0	SW.filter ( SW.filter entity-en.recipe string-requires string-= e0 ) string-requires string-= e0
which recipe has the shortest ingredient list	SW.countSuperlative entity-en.recipe string-min string-requires entity-en.ingredient
what recipes share the cuisine of e0	SW.filter entity-en.recipe string-cuisine string-= SW.getProperty e0 string-cuisine
show recipes whose cooking time is same as that of e0	SW.filter entity-en.recipe string-cooking_time string-= SW.getProperty e0 string-preparation_time
which recipe has the shortest preparation time	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-preparation_time
either d0 or d1	SW.concat
what recipe cooks in less time than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
find recipes that were posted before d0 or d1	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.concat )
what recipes require the same ingredients as e0	SW.filter entity-en.recipe string-requires string-= ( SW.filter entity-en.ingredient SW.reverse string-requires string-= e0 )
what recipe requires e0 or e1	SW.filter entity-en.recipe string-requires string-= SW.concat
what ingredient is used for the least amount of recipes	SW.countSuperlative entity-en.ingredient string-min SW.reverse string-requires entity-en.recipe
show me recipes posted before e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
show recipes that has e0 as its ingredient	SW.filter ( SW.filter entity-en.recipe string-requires string-= e0 ) string-requires string-= e0
which recipes require more than two ingredients	SW.countComparative entity-en.recipe string-requires string-> number2 entity-en.ingredient
what recipes posting date is greater than d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity d0 )
which recipes have the most number of meals	SW.countSuperlative entity-en.recipe string-max string-meal entity-en.meal
show me meals with more than two recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-> number2 entity-en.recipe
preparation time of recipe  not more than that of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what recipes posting date is greater than that of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
which recipe was not posted in d0	SW.filter entity-en.recipe string-posting_date string-!= d0
show me recipe requiring e0 posted in d1	SW.filter ( SW.filter entity-en.recipe string-requires string-= e0 ) string-posting_date string-= d1
show me meals with at least two recipes	SW.countComparative entity-en.meal SW.reverse string-meal string->= number2 entity-en.recipe
show me recipes that require longer time to cook than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what recipes posting date is in d0	SW.filter entity-en.meal SW.reverse string-meal string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
show recipes with one cuisine	SW.countSuperlative entity-en.recipe string-min string-cuisine
what recipe was posted before e0 recipe	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
show me recipes posted before d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.concat )
which recipes require two or more ingredients	SW.countComparative entity-en.ingredient SW.reverse string-requires string->= number2 entity-en.recipe
recipes that have cooking time less than cooking time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what recipes preparation time is the same as e0	SW.filter entity-en.recipe string-preparation_time string-= SW.getProperty e0 string-preparation_time
name the ingredient not required in e0	SW.filter entity-en.ingredient SW.reverse string-requires string-!= e0
what is a recipe with the most ingredients	SW.countSuperlative entity-en.recipe string-max string-cuisine
show me recipes with cooking times greater than cooking time of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what meal has two or less recipes	SW.countComparative entity-en.meal SW.reverse string-meal string-<= number2 entity-en.recipe
what ingredients does e0 need	SW.filter ( SW.filter entity-en.ingredient SW.reverse string-requires string-= e0 ) SW.reverse string-requires string-= e0
what is the total cooking time of the recipe	string-sum SW.getProperty entity-en.recipe string-cooking_time
what meal is a recipe that requires e0 for	SW.filter entity-en.meal SW.reverse string-meal string-= ( SW.filter entity-en.recipe string-requires string-= e0 )
average cooking time	string-avg SW.getProperty entity-en.recipe string-cooking_time
show me recipes without e0	SW.filter entity-en.recipe string-requires string-!= e0
show me a recipe with the same prep time as e0	SW.filter entity-en.recipe string-preparation_time string-= SW.getProperty e0 string-preparation_time
which recipe needs longer preparation time than that of e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
ingredient required by least number of recipes	SW.countSuperlative entity-en.ingredient string-min SW.reverse string-requires entity-en.recipe
which recipes require at most two ingredients	SW.countComparative entity-en.recipe string-requires string-<= number2 entity-en.ingredient
which recipes have at least 2 cuisines	SW.countComparative entity-en.recipe string-cuisine string->= number2
how many ingredients does that require	.size entity-en.ingredient
show me recipes that have the same preparation time as e0	SW.filter entity-en.recipe string-preparation_time string-= SW.getProperty e0 string-preparation_time
show me recipes that have a cooking time equal to the preparation time of e0	SW.filter entity-en.recipe string-cooking_time string-= SW.getProperty e0 string-preparation_time
what are the ingredients needed for recipes posted in d0	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
what recipe requires e0	SW.filter entity-en.ingredient SW.reverse string-requires string-= ( SW.filter entity-en.recipe string-requires string-= e0 )
which recipe requires the least cooking time	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-cooking_time
show recipes that at most have two cuisine	SW.countComparative entity-en.recipe string-cuisine string-<= number2
what ingredient is in over two recipes	SW.countComparative entity-en.ingredient SW.reverse string-requires string-> number2 entity-en.recipe
what is a meal other than e0	SW.filter entity-en.meal SW.reverse string-meal string-!= e0
what recipes share ingredients	SW.countComparative entity-en.ingredient SW.reverse string-requires string-= number2 entity-en.recipe
what meal is the recipe posted in d0	SW.filter entity-en.meal SW.reverse string-meal string-= ( SW.filter entity-en.recipe string-posting_date string-= d0 )
what recipes posting date is greater than d0 or d1	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.concat )
what recipes posted in d0 require e0	SW.filter ( SW.filter entity-en.recipe string-requires string-= e0 ) string-posting_date string-= d0
which ingredient is needed in the least number of recipes	SW.countSuperlative entity-en.ingredient string-min SW.reverse string-requires entity-en.recipe
what recipe is found in two different meals	SW.countComparative entity-en.recipe string-meal string-= number2 entity-en.meal
show me all the recipes posted after d0	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-> ( SW.ensureNumericEntity SW.concat )
show me recipes with cooking time equal to e0	SW.filter entity-en.recipe string-cooking_time string-= SW.getProperty e0 string-cooking_time
what recipes have the most ingredients	SW.countSuperlative entity-en.recipe string-max string-requires entity-en.ingredient
which recipe posted in d0 needs e0 for preparation	SW.filter ( SW.filter entity-en.recipe string-requires string-= e0 ) string-posting_date string-= d0
find a meal without e0	SW.filter entity-en.meal SW.reverse string-meal string-!= e0
what meals does e0 not go with	SW.filter entity-en.meal SW.reverse string-meal string-!= e0
show me recipes that fall under two cuisines or less	SW.countComparative entity-en.recipe string-cuisine string-<= number2
single ingredient recipe	SW.countComparative entity-en.recipe string-requires string-< number2 entity-en.ingredient
what recipes posting date is not in d0	SW.filter entity-en.recipe string-posting_date string-!= d0
what recipe is for a meal for two	SW.countComparative entity-en.meal SW.reverse string-meal string->= number2 entity-en.recipe
what recipe has the fewest number of cuisine	SW.countSuperlative entity-en.recipe string-min string-cuisine
which ingredient is needed by many recipes	SW.countSuperlative entity-en.ingredient string-max SW.reverse string-requires entity-en.recipe
which recipe has less cooking time like e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-cooking_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-cooking_time  )
what is a recipe whose cooking time is the same as e0	SW.filter entity-en.recipe string-cooking_time string-= SW.getProperty e0 string-cooking_time
what recipe takes the longest to prepare	SW.superlative entity-en.recipe string-max SW.ensureNumericProperty string-preparation_time
meal with e0 recipe	SW.filter entity-en.meal SW.reverse string-meal string-= ( SW.filter entity-en.recipe string-requires string-= e0 )
recipes for two meal	SW.countComparative entity-en.recipe string-meal string-= number2 entity-en.meal
show recipes posted on dates between d0 and d1	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-< ( SW.ensureNumericEntity SW.concat )
find the recipes of multiple cuisine	SW.countComparative entity-en.recipe string-cuisine string->= number2
which recipes were posted up to d0 or d1	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.concat )
recipes posted till e0 is posted	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-posting_date  )
what meal has e0 and e1	SW.filter entity-en.meal SW.reverse string-meal string-= SW.concat
what is the cooking time for e0	SW.getProperty e0 string-cooking_time
which recipe has the least preparation time	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-preparation_time
what is the average cooking time for that dish	string-avg SW.getProperty entity-en.recipe string-cooking_time
what recipe has the least prep time	SW.superlative entity-en.recipe string-min SW.ensureNumericProperty string-preparation_time
what is the posting date of e0	SW.getProperty e0 string-posting_date
how many recipes are there	.size entity-en.recipe
show me meals with the most recipes	SW.countSuperlative entity-en.meal string-max SW.reverse string-meal entity-en.recipe
what is the cuisine of e0	SW.getProperty e0 string-cuisine
how long does it take to prepare e0	SW.getProperty e0 string-preparation_time
show recipes that requires lesser preparation than e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
find the recipes for e0	SW.filter ( SW.filter entity-en.recipe string-meal string-= e0 ) string-meal string-= e0
recipes posted in d0 and later	SW.filter entity-en.recipe SW.ensureNumericProperty string-posting_date  string->= ( SW.ensureNumericEntity d0 )
show me recipes designed for two meals	SW.countComparative entity-en.recipe string-meal string-= number2 entity-en.meal
find a recipe that takes the same time to cook as e0	SW.filter entity-en.recipe string-preparation_time string-= SW.getProperty e0 string-preparation_time
which recipe uses e0 as an ingredient	SW.filter entity-en.recipe string-requires string-= e0
which recipe has its posting date as d0	SW.filter entity-en.recipe string-posting_date string-= d0
what is cuisine for e0	SW.getProperty e0 string-cuisine
what recipe has the fewest amount of ingredients	SW.countSuperlative entity-en.recipe string-min string-requires entity-en.ingredient
what is the preparation of e0	SW.getProperty e0 string-preparation_time
what recipe is for less than two people	SW.countComparative entity-en.recipe string-meal string-< number2 entity-en.meal
show me recipes for e0 or supper	SW.filter entity-en.recipe string-meal string-= SW.concat
show recipes that take at least the preparation time of e0 to be done	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
what meals have recipes that use e0	SW.filter entity-en.meal SW.reverse string-meal string-= ( SW.filter entity-en.recipe string-requires string-= e0 )
how many ingredients are used	.size entity-en.ingredient
which recipe falls under the least kinds of cuisine	SW.countSuperlative entity-en.recipe string-min string-cuisine
what is an ingredient found in a recipe for e0 or e1	SW.filter entity-en.ingredient SW.reverse string-requires string-= SW.concat
what recipe takes at least as long to prepare as e0	SW.filter entity-en.recipe SW.ensureNumericProperty string-preparation_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-preparation_time  )
which resturants have takeout and a price rating of 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-takeout
what meal does the restaurant deliver	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-delivery )
what restaurant has the highest price rating	SW.superlative entity-en.restaurant string-max SW.ensureNumericProperty string-price_rating
what meals do the e0 serve	SW.filter ( SW.filter entity-en.food SW.reverse string-meals string-= e0 ) SW.reverse string-meals string-= e0
a restaurant with a 2 dollar sign rating for kids	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-kids
restaurants that take credit cards with a price rating of 2	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-price_rating string-= number2 en.dollar_sign
which restaurants in e0 deliver	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-delivery
restaurants with 2 dollar sign rating in e0	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-neighborhood string-= e0
restaurant that has delivery and whose star rating is 3 stars	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-star_rating string-= number3 en.star
which e0 restaurants offer takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-cuisine string-= e0
what meals dont the e0 serve	SW.filter entity-en.food SW.reverse string-meals string-!= e0
what restaurant a price rating greater than or equal to the e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-price_rating  )
offers take out and delievers	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-delivery
restaurant that has waiter service and that is good for kids	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-kids
restaurants that are more expensive than e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-price_rating  )
what restaurant delivers and has waiter service	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-waiter
which resturants serve e0 and have delivery	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-meals string-= e0
the e0 restaurant has delivery	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-delivery
restaurant that serves group meals	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-groups )
what restaurant can you eat e0 outside at	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-meals string-= e0
what is the neighborhood of the e0 restaurant	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-cuisine string-= e0 )
what cuisines are offered by restaurants that have outdoor seating	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-outdoor )
restaurant whose price rating is 2 dollar signs and whose star rating is 3 stars	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-star_rating string-= number3 en.star
restaurants with 2 or 3 price rating	SW.filter entity-en.restaurant string-price_rating string-= SW.concat
what restaurant has takeout and a e0 menu	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-takeout
three star restaurants in e0	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-neighborhood string-= e0
what is the average star rating	string-avg SW.getProperty entity-en.restaurant string-star_rating
which restaurants serve the least number of meals	SW.countSuperlative entity-en.restaurant string-min string-meals entity-en.food
what restaurant is good with groups and serves e0	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-meals string-= e0
what is a meal served in a e0 restaurant	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-cuisine string-= e0 )
what cuisine does a 2 dollar sign price rating restaurant have	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign )
3 star restaurants that accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-credit
meal served by a restaurant that delivers	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-delivery )
restaurant that has outdoor seating	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-outdoor )
what restaurants received 3 stars and serve e0	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-star_rating string-= number3 en.star
what e0 west restaurant is good for groups	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-neighborhood string-= e0
restaurant whose cuisine is cuisine that is cuisine of e0	SW.filter entity-en.restaurant string-cuisine string-= ( SW.filter entity-en.cuisine SW.reverse string-cuisine string-= e0 )
restaurant that serves unique meals	SW.countComparative entity-en.food SW.reverse string-meals string-< number2 entity-en.restaurant
restaurant that is good for groups and whose star rating is 3 stars	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-star_rating string-= number3 en.star
cuisine like e0 e1	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= SW.concat
list restaurants that are at or less than 2 or 3 dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-<= ( SW.ensureNumericEntity SW.concat )
which restaurants in e0 accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-neighborhood string-= e0
restaurant that takes credit cards and that has takeout	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-takeout
what restaurant in e0 contains outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-neighborhood string-= e0
restaurants with 3stars that take reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-star_rating string-= number3 en.star
a restaurant that has a 4 star or higher rating	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-> ( SW.ensureNumericEntity number3 en.star )
restaurants that serve e0 and have a price rating of 2	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-meals string-= e0
what restaurants have the same price rating or better than e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-price_rating  )
e0 neighborhood that also deliveries	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-delivery
hotel that has a price rating of 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-price_rating string-= number2 en.dollar_sign
restaurant that has waiter service and that has delivery	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-delivery
name a hotel which has a three star rating and good for group dining	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-groups
restaurant that has waiter service and whose price rating is 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-price_rating string-= number2 en.dollar_sign
neighborhood with restaurants that serve e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-meals string-= e0 )
what restaurant takes reservations and offers takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-reserve
e0 or e1	SW.concat
what restaurants accommodate groups	SW.filter entity-en.restaurant string-groups
which resturants have a star rating smaller than 3 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-< ( SW.ensureNumericEntity number3 en.star )
a three star restaurant that serves e0	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-star_rating string-= number3 en.star
restaurants with 5 star and lower price ratings	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-<= ( SW.ensureNumericEntity SW.concat )
what is a restaurant that is kidfriendly and has waiters	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-waiter
restaurant in the area of e0 that is good for group dining	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-groups
what is a meal from a restaurant with outdoor seating	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-outdoor )
restaurants that serve e0 and have waiter service	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-meals string-= e0
what neighborhood contains restaurants that offer delivery	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-delivery )
what e0 restaurant has a 3 star rating	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-cuisine string-= e0
what cuisine does the e0 have	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= e0
find a e0 restaurant that is good for groups	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-cuisine string-= e0
restaurant that has takeout and that is good for groups	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-groups
what restaurant offers outdoor seating and takes reservations	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-reserve
what restaurant is good for kids and offers outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-kids
a e0 resturant that takes reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-neighborhood string-= e0
restaurants in e0 that have takeout	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-takeout
restaurant that serves e0 and takes reservations	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-reserve
restaurant that takes reservations and that takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-credit
what e0 restaurant offers delivery	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-cuisine string-= e0
restaurant whose neighborhood is neighborhood that is neighborhood of e0	SW.filter entity-en.restaurant string-neighborhood string-= ( SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= e0 )
restaurants that accepts reservations	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-reserve )
what restaurant can i eat e0 outdoors at	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-outdoor
hotel that suits the taste of kids and offers delivery services	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-delivery
restaurant whose cuisine is e0 and whose star rating is 3 stars	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-star_rating string-= number3 en.star
what restaurant has the lower price rating	SW.superlative entity-en.restaurant string-min SW.ensureNumericProperty string-price_rating
what restaurant serves more than two meals	SW.countComparative entity-en.restaurant string-meals string-> number2 entity-en.food
what resturant has a price rating smaller than two dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-< ( SW.ensureNumericEntity number2 en.dollar_sign )
which restaurants have takeout and accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-credit
which resturants have a price rating of at least two or three dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string->= ( SW.ensureNumericEntity SW.concat )
what restaurant can i get reservations and get delivery from	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-reserve
what e0 restaurant offers waiter service	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-waiter
restaurant that serves food for kids	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-kids )
how many neighborhoods are there	.size entity-en.neighborhood
what meal is served in at least 2 restaurants	SW.countComparative entity-en.food SW.reverse string-meals string->= number2 entity-en.restaurant
e0 or e1 restaurants	SW.filter entity-en.restaurant string-cuisine string-= SW.concat
what restaurant has takeout and waiter service	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-takeout
name a restaurant found in at least two neighborhoods	SW.countComparative entity-en.restaurant string-neighborhood string->= number2
find a e0 restaurant with a 2 dollar price rating	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-price_rating string-= number2 en.dollar_sign
restaurant that is good for groups and whose cuisine is e0	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-cuisine string-= e0
name a restaurant in the neighbourhood of e0	SW.filter entity-en.restaurant string-neighborhood string-= ( SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= e0 )
what meal can you get at either the e0 or at e1	SW.filter entity-en.food SW.reverse string-meals string-= SW.concat
meal that more than two restaurant serves	SW.countComparative entity-en.food SW.reverse string-meals string-> number2 entity-en.restaurant
what neighborhoods have at least two restaurants	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string->= number2 entity-en.restaurant
what neighborhood has the most restaurants that are good for groups	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-groups )
what kind of meals does takeout restaurants serve	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-takeout )
restaurants accepting reservations	SW.filter entity-en.restaurant string-reserve
3 star rated restaurants for kids	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-kids
restaurants which have delivery and take credit cards	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-credit
which neighborhoods have restaurants that deliver	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-delivery )
restaurants that are good for group dining and that can be booked in advance	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-reserve
e0 with least price rating	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-price_rating  )
restaurant that has the least number of neighborhood	SW.countSuperlative entity-en.restaurant string-min string-neighborhood
which restaurant is good for a group of people and also serves e0	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-meals string-= e0
restaurants with waiters that are good for groups	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-groups
what restaurant offers delivery and an outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-delivery
a e0 restaurant for kids	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-kids
restaurants in e0 with outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-outdoor
no e0 restaurant	SW.filter entity-en.restaurant string-meals string-!= e0
restaurants rated higher than e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-star_rating  )
which restaurants are in the price rating level of two dollar signs	SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign
name a restaurant with a lower price rating than the e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-price_rating  )
restaurant that delivers and offers outside seating	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-outdoor
what is the total star rating of all restaurants	string-sum SW.getProperty entity-en.restaurant string-star_rating
what restaurant does not have a 3 star rating	SW.filter entity-en.restaurant string-star_rating string-!= number3 en.star
what 2 dollar signs restaurant offers e0	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-price_rating string-= number2 en.dollar_sign
what kind of cuisine is found at the restaurants that serve e0	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-meals string-= e0 )
what restaurant has takeout and serves e0	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-meals string-= e0
restaurants with 3 and higher price rating	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-> ( SW.ensureNumericEntity number2 en.dollar_sign )
what neighborhood has a e0 or e1	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= SW.concat
what 2 dollar signs restaurant is good for kids	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-kids
restaurant with a price rating equal to e0	SW.filter entity-en.restaurant string-price_rating string-= SW.getProperty e0 string-price_rating
what restaurants offer delivery and serves e0	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-meals string-= e0
what restaurant has 3 stars and serves e0	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-meals string-= e0
what is a meal from a restaurant that is good for kids	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-kids )
hotel that suits the tastes of kids and which is best for group dining	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-groups
restaurants that deliver and are open for e0	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-delivery
what is the cuisine of most restaurants	SW.countSuperlative entity-en.cuisine string-max SW.reverse string-cuisine entity-en.restaurant
restaurant that has delivery and that takes reservations	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-reserve
restaurants with a smaller star rating than e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-star_rating  )
find 3 star or 5 star restaurant	SW.concat
restaurant with takeout	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-takeout )
hotel which has a price rating of more than 2dollar or 3 dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-> ( SW.ensureNumericEntity SW.concat )
what restaurant in e0 is good for groups	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-groups
find a e0 restaurant in the e1 area	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e1 ) string-cuisine string-= e0
what restaurant serves meals and accepts credit cards	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-credit )
restaurants who have a price rating lower than 2 dollar signs	SW.filter entity-en.restaurant string-price_rating string-!= number2 en.dollar_sign
restaurant that has two cuisines	SW.countComparative entity-en.restaurant string-cuisine string-> number2
find restaurant with waiter service that takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-waiter
what neighborhood has the least amount of restaurants	SW.countSuperlative entity-en.neighborhood string-min SW.reverse string-neighborhood entity-en.restaurant
what e0 restaurant has e1	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e1 ) string-neighborhood string-= e0
a group friendly restaurant with outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-groups
restaurants rated 3 stars with outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-outdoor
a delivery restaurant with medium pricing	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-delivery
what is the type of cuisine of e0	SW.filter entity-en.restaurant string-cuisine string-= ( SW.filter entity-en.cuisine SW.reverse string-cuisine string-= e0 )
affordable restaurant with outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-outdoor
restaurant that has less than two cuisine	SW.countComparative entity-en.restaurant string-cuisine string-< number2
what is a meal served by a restaurant that accepts credit cards	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-credit )
what cuisine options are there among the kidfriendly restaurants	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-kids )
what restauarants are kid friendly and have takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-kids
e0 restaurants that have takeout	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-takeout
what kind of meals are served by restaurants that take reservations	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-reserve )
restaurant that is good for kids and that takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-credit
which resturants take reservations	SW.filter entity-en.restaurant string-reserve
what restaurant has e0 cuisine	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-cuisine string-= e0
restaurants that have takeout and take reservations	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-reserve
three star restaurants that take credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-star_rating string-= number3 en.star
cuisine that is like e0 or e1	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= SW.concat
what neighborhood is home to the most restaurants	SW.countSuperlative entity-en.neighborhood string-max SW.reverse string-neighborhood entity-en.restaurant
a e0 restaurant in the midtown neighborhood	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-neighborhood string-= en.neighborhood.midtown_west
what restaurants have at least a 3 star rating	SW.filter entity-en.restaurant string-star_rating string-= number3 en.star
restaurants with two neighborhood locations	SW.countComparative entity-en.restaurant string-neighborhood string-= number2
restaurant whose price rating is 2 dollar signs and that takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-credit
restaurant that has takeout with credit cards	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-credit
what neighborhoods have restaurants that accept reservations	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-reserve )
restaurant whose price rating is 2 dollar signs and that has takeout	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-takeout
neighborhood that is neighborhood of restaurant that takes reservations	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-reserve )
what restaurant is good for groups	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-groups
restaurants with waiters and outdoor dining areas	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-outdoor
restaurants that have outdoor seating and that offer takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-outdoor
e0 restaurants that have outdoor dining areas	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-outdoor
what restaurant offers a waiter service and is good for groups	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-waiter
family friendly restaurants in e0	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-neighborhood string-= e0
which restaurants take reservations and accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-credit
meal that the least number of restaurant serves	SW.countSuperlative entity-en.food string-min SW.reverse string-meals entity-en.restaurant
what restaurant offers e0 and takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-meals string-= e0
what is better a 3 or a 5 star rating	SW.concat
hotel that can be booked in advance which has a price rating of 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-price_rating string-= number2 en.dollar_sign
which restaurants are rated 3 or 5 stars	SW.filter entity-en.restaurant string-star_rating string-= SW.concat
restaurants with 3 to 5 star ratings	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string->= ( SW.ensureNumericEntity SW.concat )
what restaurant offers e0 and takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-meals string-= e0
restaurants that has a larger price rating than e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-price_rating  )
what restaurant offers e0 and delivery	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-delivery
which neighborhoods have the fewest restaurants	SW.countSuperlative entity-en.restaurant string-min string-neighborhood
what neighborhood has two or less restaurants	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-<= number2 entity-en.restaurant
the 3 star restaurant is good for kids	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-star_rating string-= number3 en.star
what restaurants offer e0 and is good for groups	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-groups
e0 thats erves pizzeria	SW.filter entity-en.food SW.reverse string-meals string-= SW.concat
what restaurants have outdoor seating and accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-credit
what kind of meals do restaurants with waiter service serve	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-waiter )
what is the price rating of e0	SW.getProperty e0 string-price_rating
restaurant in the e0 neighborhood	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-neighborhood string-= e0
what restaurants have more than two kinds of cuisine	SW.countComparative entity-en.restaurant string-cuisine string-> number2
which hotel is entertaining for kids	SW.filter entity-en.restaurant string-kids
restaurants that serve the same type of food as e0	SW.filter entity-en.restaurant string-cuisine string-= ( SW.filter entity-en.cuisine SW.reverse string-cuisine string-= e0 )
a neighborhood with two restaurants	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string->= number2 entity-en.restaurant
what 2 dollar signs restaurant takes reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-price_rating string-= number2 en.dollar_sign
restaurants with star ratings of 3 or 5	SW.filter entity-en.restaurant string-star_rating string-= SW.concat
restaurants with waiters that have a price rating of 2	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-waiter
find a good kids restaurant with waiter service	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-waiter
which resturants serve e0	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-meals string-= e0
what is a meal served by two different restaurants	SW.countComparative entity-en.food SW.reverse string-meals string-= number2 entity-en.restaurant
find a takeout restaurant	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-takeout
cuisine that is cuisine of restaurant whose cuisine is e0	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-cuisine string-= e0 )
which restaurant has a price rating no higher than e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-price_rating  )
hotel that serves the minimum number of meals	SW.countSuperlative entity-en.restaurant string-min string-meals entity-en.food
what is the best restaurant for big groups in e0	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-groups
restaurants that have at least two cuisines	SW.countComparative entity-en.restaurant string-cuisine string-> number2
family friendly restaurants with price rating of two	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-kids
what kind of restaurant offers outdoor seating	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-outdoor )
what restaurant has a lower price rating than the e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-price_rating  )
restaurants with delivery for kids	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-delivery
neighbourhood restaurant that offers outdoor seating facilities	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-outdoor )
which restaurants serve less than two meals	SW.countComparative entity-en.restaurant string-meals string-< number2 entity-en.food
what restaurant has delivery	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-delivery
restaurant whose neighborhood is e0 and that has outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-outdoor
what restaurant takes credit cards and is kid friendly	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-kids
what 3 star restaurant is good for kids	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-star_rating string-= number3 en.star
restaurant whose neighborhood is e0 and that has outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-outdoor
restaurants rated 3 stars with a 2 dollar sign price rating	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-price_rating string-= number2 en.dollar_sign
list all restaurants that have at least 3 star or 5 star ratings	SW.filter entity-en.restaurant string-star_rating string-= SW.concat
e0 cuisine restaurant	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-cuisine string-= e0 )
what is a meal served at the e0	SW.filter ( SW.filter entity-en.food SW.reverse string-meals string-= e0 ) SW.reverse string-meals string-= e0
restaurants that offer takeout and accept reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-takeout
what restaurants serve groups and accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-groups
restaurant that is open for e0 and e1	SW.filter entity-en.restaurant string-meals string-= SW.concat
what restaurant has 3 stars and has a 2 menu	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-price_rating string-= number2 en.dollar_sign
a restaurant that does not serve e0	SW.filter entity-en.restaurant string-cuisine string-!= e0
restaurants with a 2 dollar price rating	SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign
restaurant that takes credit cards and that has delivery	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-delivery
find a good group restaurant with takeout	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-takeout
3 star restraunts and under	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-<= ( SW.ensureNumericEntity number3 en.star )
groupfriendly restaurants in e0	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-neighborhood string-= e0
which resturants have a star rating smaller than 3 or 5 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-< ( SW.ensureNumericEntity SW.concat )
restaurants that can be booked in advance and that offers delivery services	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-reserve
what are some 3 star e0 restaurants	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-star_rating string-= number3 en.star
a restaurant as good as e0	SW.filter entity-en.restaurant string-star_rating string-= SW.getProperty e0 string-star_rating
what is the total star rating of all restaurants	string-sum SW.getProperty entity-en.restaurant string-star_rating
e0 cuisine restaurant that has a  price rating	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-price_rating string-= number2 en.dollar_sign
what restaurant does not offer e0	SW.filter entity-en.restaurant string-meals string-!= e0
restaurants with takeout that have waiters	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-waiter
list the types of cuisine for restaurants that offer takeout	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-takeout )
hotel which has a price rating of 2 dollar signs or 3 dollar signs	SW.filter entity-en.restaurant string-price_rating string-= SW.concat
which resturants with waiter service have delivery	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-delivery
hotels that can be booked in advance and offers e0	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-meals string-= e0
what 2 dollar sign restaurant contains takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-price_rating string-= number2 en.dollar_sign
restaurant that has at least 3 star rating	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string->= ( SW.ensureNumericEntity number3 en.star )
what restaurant has less than a 2 dollar price rating	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-< ( SW.ensureNumericEntity number2 en.dollar_sign )
find a restaurant with a price rating equal or less than the e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-price_rating  )
cuisine in at least 2 restaurants	SW.countComparative entity-en.cuisine SW.reverse string-cuisine string-> number2 entity-en.restaurant
what restaurant takes reservations and is good for kids	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-kids
what 3 star restaurant offers e0	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-meals string-= e0
restaurants with 2 stars or less	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-< ( SW.ensureNumericEntity number3 en.star )
which restaurants are good for groups and accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-credit
which neighborhood resturant has a 3 star rating	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star )
find a 3 star restaurant	SW.filter entity-en.restaurant string-star_rating string-= number3 en.star
what 2 dollar price rating restaurant takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-price_rating string-= number2 en.dollar_sign
restaurant whose neighborhood is e0 and that has delivery	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-delivery
find a restaurant with waiter service	SW.filter entity-en.restaurant string-waiter
what is the average price ratings of restaurants	string-avg SW.getProperty entity-en.restaurant string-price_rating
what meals are served by more than two restaurants	SW.countComparative entity-en.food SW.reverse string-meals string-> number2 entity-en.restaurant
what 3 star rated restaurant has a price rating of 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-price_rating string-= number2 en.dollar_sign
which restaurants with 3 stars takes reservations	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-reserve
a e0 in the neighborhood	SW.filter ( SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= e0 ) SW.reverse string-neighborhood string-= e0
restaurant that serves two meal	SW.countComparative entity-en.food SW.reverse string-meals string-= number2 entity-en.restaurant
find a restaurant in the same neighborhood as the e0	SW.filter entity-en.restaurant string-neighborhood string-= ( SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= e0 )
neighborhood that is neighborhood of restaurant that serves e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-meals string-= e0 )
what good kids restaurant serves e0	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-meals string-= e0
what cuisine offers takeout	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-takeout )
restaurants good for kids and has waiters	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-waiter
list all restaurants with 3 or 5 star ratings	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string->= ( SW.ensureNumericEntity SW.concat )
which restaurant chain is found in the most neighborhoods	SW.countSuperlative entity-en.restaurant string-max string-neighborhood
what restaurants have takeout	SW.filter entity-en.restaurant string-takeout
which restaurant has a 2dollarsigns price rating and takeout service	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-takeout
what restaurant offers takeout and is good for kids	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-takeout
family friendly restaurants where you can sit outside	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-outdoor
restaurant with at least a 2 dollar price rating	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string->= ( SW.ensureNumericEntity number2 en.dollar_sign )
what meals do 2 restaurants serve	SW.countComparative entity-en.food SW.reverse string-meals string->= number2 entity-en.restaurant
restaurant whose neighborhood is e0 and that has waiter service	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-waiter
restaurants in the e0 neighborhood with outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-outdoor
e0 restaurants in the e1 neighborhood	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-neighborhood string-= e1
restaurants that are in the neighborhood of e0 and have outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-outdoor
find all e0 restaurants	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-cuisine string-= e0 )
what are some 3 star rated restaurants in e0	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-star_rating string-= number3 en.star
what restaurants offer more than two cuisines	SW.countComparative entity-en.cuisine SW.reverse string-cuisine string-> number2 entity-en.restaurant
which restaurants accept reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-reserve
which restaurants have waiters and offer takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-waiter
list all restaurants that are not similar to e0	SW.filter entity-en.cuisine SW.reverse string-cuisine string-!= e0
which restaurants accept credit cards and are good places to go with kids	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-credit
what cuisine is served in two restaurants	SW.countComparative entity-en.cuisine SW.reverse string-cuisine string-= number2 entity-en.restaurant
what are some restaurants rated at most 3 dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-< ( SW.ensureNumericEntity SW.concat )
cuisine that is cuisine of the least number of restaurant	SW.countSuperlative entity-en.cuisine string-min SW.reverse string-cuisine entity-en.restaurant
what restaurant is open at e0 and is good for kids	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-kids
restaurants that are in two neighborhoods at least	SW.countComparative entity-en.restaurant string-neighborhood string->= number2
which neighborhood resturants have takeout	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-takeout )
what are the cuisines of all the e0 restaurants	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-neighborhood string-= e0 )
what neighborhood contains the most restaurants that offer reservations	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-reserve )
restaurants in e0 with outdoor dining areas	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-neighborhood string-= e0
restaurants in e0 rated 3 stars	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-neighborhood string-= e0
what good kids restaurant has outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-kids
restaurant that has the most number of cuisine	SW.countSuperlative entity-en.restaurant string-max string-cuisine
what 3 star restaurant has outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-outdoor
which restaurants have outdoor seating and are group friendly	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-outdoor
what restaurant serves e0 to groups	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-groups
restaurant that is good for groups and whose price rating is 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-price_rating string-= number2 en.dollar_sign
restaurant with outdoor seating that accepts credit cards	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-credit
three star restaurants that deliver	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-delivery
what restaurant has outdoor seating and offers waiter service service	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-waiter
list all restaurants that is cheaper than 2 dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-<= ( SW.ensureNumericEntity number2 en.dollar_sign )
name athai restaurant or cafe	SW.filter entity-en.restaurant string-cuisine string-= SW.getProperty en.restaurant.thai_cafe string-cuisine
what restaurant has a 2 dollar price rating and outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-outdoor
what is a type of cuisine of two restaurants	SW.countComparative entity-en.cuisine SW.reverse string-cuisine string-= number2 entity-en.restaurant
restaurant that has the  take out facility and has outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-takeout
what cuisine takes credit cards	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-credit )
a 3 star resturnt that has room for groups	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-groups
e0 cuisine restaurant with 3 star rating	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-star_rating string-= number3 en.star
list all restaurants in the neighborhood of e0	SW.filter entity-en.restaurant string-neighborhood string-= e0
hotel that offers e0 and best for group dining	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-meals string-= e0
what e0 restaurant takes reservations	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-reserve
what meal can you get at the e0	SW.filter entity-en.food SW.reverse string-meals string-= e0
an outdoor setting restaurant that takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-credit
restaurant not in the e0 area	SW.filter entity-en.restaurant string-neighborhood string-!= e0
how many neighboords are there that have restaurants	.size entity-en.neighborhood
what restaurants are located in e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-neighborhood string-= e0 )
what is a meal served at a restaurant that has waiters	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-waiter )
a take out restaurant	SW.filter entity-en.restaurant string-takeout
restaurant that is open for two meals	SW.countComparative entity-en.restaurant string-meals string-<= number2 entity-en.food
what restaurant offers reservations	SW.filter entity-en.restaurant string-reserve
find a e0 restaurant that serves e1	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-meals string-= e1
what neighborhood has more than two restaurants	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-> number2 entity-en.restaurant
what 3star restaurants also have waiters	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-waiter
a restaurant in e0 that takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-credit
what restaurants have outdoor dining and are childfriendly	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-outdoor
restaurants with between 30 and 40 reviews	SW.concat
which restaurants have a 3 star rating and 2 dollar price rating	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-price_rating string-= number2 en.dollar_sign
what restaurants are good for groups and accept reservations	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-reserve
restaurants with similar food to e0 or e1	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= SW.concat
restaurants that accept credit cards and reservations	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-reserve
what e0 restaurant offers reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-neighborhood string-= e0
cuisine that is cuisine of restaurant whose price rating is 2 dollar signs	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign )
restaurants with at least 3 stars rating	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-<= ( SW.ensureNumericEntity number3 en.star )
restaurant that has outdoor seating and whose neighborhood is e0	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-neighborhood string-= e0
what restaurant has delivery and is good for kids	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-delivery
restaurants with outdoor seating and a  price rating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-price_rating string-= number2 en.dollar_sign
what restaurant offers takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-takeout
what restaurant only serves two or less meals	SW.countComparative entity-en.restaurant string-meals string-<= number2 entity-en.food
which hotel has the least price rating	SW.superlative entity-en.restaurant string-min SW.ensureNumericProperty string-price_rating
what cuisine is served by fewer than two restaurants	SW.countComparative entity-en.cuisine SW.reverse string-cuisine string-< number2 entity-en.restaurant
restaurants with takeout for groups	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-takeout
what neighborhood has the largest number of restaurants	SW.countSuperlative entity-en.neighborhood string-max SW.reverse string-neighborhood entity-en.restaurant
restaurants that take reservations and are good for children	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-kids
restaurants that accept credit cards and have waiters	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-credit
restaurants that are kid friendly and inexpensive	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-kids
what is the restaurant that does not serve e0	SW.filter entity-en.restaurant string-meals string-!= e0
restaurants for two	SW.countComparative entity-en.restaurant string-meals string-= number2 entity-en.food
3 stars restaurant which offers takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-star_rating string-= number3 en.star
restaurants with price rating above 3 dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-> ( SW.ensureNumericEntity SW.concat )
what e0 restaurants take reservations	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-reserve
restaurants in the neighborhoods that contain e0	SW.filter entity-en.restaurant string-neighborhood string-= ( SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= e0 )
what is the restaurants number	.size entity-en.restaurant
what kind of cuisine is e0	SW.getProperty e0 string-cuisine
what is the cuisine of restaurants that serve e0	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-meals string-= e0 )
restaurant that can deliver and is open for e0	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-delivery
restaurant whose star rating is 3 stars and whose star rating is 3 stars	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-star_rating string-= number3 en.star
what resturants take credit cards and have outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-outdoor
restaurant that has takeout and whose cuisine is e0	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-cuisine string-= e0
what restaurant takes resverations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-reserve
a restaurant in a kid friendly neighborhood	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-kids )
what e0 restaurant has the highest star rating	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-<= ( SW.ensureNumericEntity SW.getProperty en.restaurant.thai_cafe string-star_rating  )
what is the nature of the cuisine of e0	SW.getProperty e0 string-cuisine
what kind of meals does e0 serve	SW.filter entity-en.food SW.reverse string-meals string-= e0
what restaurant has two neighborhoods	SW.countComparative entity-en.restaurant string-neighborhood string-= number2
what is the star rating of the e0	SW.getProperty e0 string-star_rating
a good e0 resturant with room for groups	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-groups
kid friendly restaurant with a price equal to 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-price_rating string-= number2 en.dollar_sign
which restaurants are good for groups and also deliver	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-groups
restaurants whose price rating is similar to that of e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-price_rating  )
restaurant with outdoor dining area that serves e0	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-outdoor
restaurants that are near two neighborhoods	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-<= number2 entity-en.restaurant
restaurants rated 2 dollar signs that take reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-price_rating string-= number2 en.dollar_sign
what restaurant offers takeout and delivery	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-takeout
neighborhood that is neighborhood of at least two restaurant	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string->= number2 entity-en.restaurant
restaurant whose price rating is smaller than 2 dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-< ( SW.ensureNumericEntity number2 en.dollar_sign )
what resturant has outdoor seating and is good for kids	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-kids
which neighborhood is not where that cafe is located	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-!= en.restaurant.thai_cafe
what restaurant serves less than two meals	SW.countComparative entity-en.restaurant string-meals string-< number2 entity-en.food
what is the phone number of the restaurant	.size entity-en.restaurant
restaurant whose cuisine is e0 and whose cuisine is e0	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-cuisine string-= e0
restaurants with a price rating larger than e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-price_rating  )
number of restaurant	.size entity-en.restaurant
what neighborhood has fewer than two restaurants	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-< number2 entity-en.restaurant
meal not served by e0	SW.filter entity-en.food SW.reverse string-meals string-!= e0
3 star rated restaurant that accepts reservations	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-reserve
what 3 star rated restaurant offers waiter service	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-waiter
restaurants with a price rating higher than 3 dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-> ( SW.ensureNumericEntity SW.concat )
what restaurant offers e0 and is good for groups	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-meals string-= e0
delivery is avaiable	SW.filter entity-en.restaurant string-delivery
restaurant that has outdoor seating and that is good for groups	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-groups
e0 restaurant cuisine	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-cuisine string-= e0 )
find the type of food of all restaurants that take reservations	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-reserve )
what restaurant in e0 has a rating of two dollar signs	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-price_rating string-= number2 en.dollar_sign
what neighborhoods have restaurants that serve outdoors	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-outdoor )
what kind of cuisine offers e0	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-meals string-= e0 )
which e0 restaurant has a 2dollarsign rating	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-cuisine string-= e0
neighborhood that is neighborhood of restaurant that has waiter service	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-waiter )
which hotel offers waiter service and outdoor seating facilities	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-outdoor
what e0 restaurants offer a waiter service	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-cuisine string-= e0
what restaurant takes reservations and has takeout	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-takeout
what restaurant has over two cuisines	SW.countComparative entity-en.restaurant string-cuisine string-> number2
what restaurant is good for groups and kids	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-kids
what is the star rating of the restaurant	string-sum SW.getProperty entity-en.restaurant string-star_rating
restaurants with e0 and takes reservations	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-reserve
which restaurant welcomes children and has outdoor seats	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-kids
restaurants that have delivery and take credit cards	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-credit
hotels that have a minimum  price rating of 2 dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string->= ( SW.ensureNumericEntity SW.concat )
cuisine that is cuisine of restaurant whose star rating is 3 stars	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star )
restaurants that have waiters and outdoor dining areas	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-waiter
restaurants in e0 that serve e1 food	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-cuisine string-= e1
find a restaurant that has delivery as well as waiter service	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-delivery
restaurant that not serves e0	SW.filter entity-en.restaurant string-meals string-!= e0
restaurants in the 2 or 3 dollar sign price range	SW.filter entity-en.restaurant string-price_rating string-= SW.concat
average star rating of restaurant	string-avg SW.getProperty entity-en.restaurant string-star_rating
restaurant that serves e0 and that has delivery	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-delivery
what kind of restaurant serves the same food as e0	SW.filter entity-en.restaurant string-meals string-= ( SW.filter entity-en.food SW.reverse string-meals string-= e0 )
what neighborhood is e0 or e1 in	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= SW.concat
e0 restaurant which provides outdoor seating facilities	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-cuisine string-= e0
what restaurant has waiter service and serves e0	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-meals string-= e0
what is the cuisine of restaurants that have delivery	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-delivery )
moderately priced restaurants that have outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-outdoor
restaurant that delivers and is good for groups	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-delivery
restaurants that can be booked in advance ant which de	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-reserve
restaurant that is good for kids and that takes reservations	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-reserve
which restaurants accept reservation and have outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-outdoor
what restaurant has a 3 star rating	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star )
what 2 dollar sign restaurant takes credit card	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-credit
restaurants in the e0 neighborhood that have a 2 dollar sign price rating	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-price_rating string-= number2 en.dollar_sign
hotel in the area of e0 which serves e1	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e1 ) string-neighborhood string-= e0
what is the neighborhood with the most restaurants that are good for kids	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-kids )
hotel that offers e0 and has outdoor seating facilities	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-meals string-= e0
restaurants good for groups and kids	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-kids
what neighborhood has the least restaurants	SW.countSuperlative entity-en.neighborhood string-min SW.reverse string-neighborhood entity-en.restaurant
name a restaurant that does not offer  e0 food	SW.filter entity-en.restaurant string-cuisine string-!= e0
restaurant whose star rating is smaller than 3 stars or 5 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-< ( SW.ensureNumericEntity SW.concat )
e0 restaurants with 3star ratings	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-star_rating string-= number3 en.star
which restaurants are rated the same or better than e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-star_rating  )
hotel that does not have a	SW.filter entity-en.restaurant string-price_rating string-!= number2 en.dollar_sign
name a meal served in a restaurant with a price rating of two dollar signs	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign )
what restaurant offers e0	SW.filter entity-en.restaurant string-meals string-= e0
restaurants that accept credit cards	SW.filter entity-en.restaurant string-credit
what 3 star restaurants accept reservations	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-reserve
find a e0 restaurant with outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-cuisine string-= e0
what restaurants are in e0	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-neighborhood string-= e0
what cuisine is shown in only two restaurants	SW.countComparative entity-en.cuisine SW.reverse string-cuisine string-<= number2 entity-en.restaurant
restaurant in the  area around e0 that offers delivery services	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-neighborhood string-= e0
total price rating of restaurant	string-sum SW.getProperty entity-en.restaurant string-price_rating
restaurant whose neighborhood is e0 and that has takeout	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-takeout
what is a meal served at a 3 star rated restaurant	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star )
restaurant that has delivery	SW.filter entity-en.restaurant string-delivery
what good kids restaurants serve e0 cuisine	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-cuisine string-= e0
what restaurant serves the most meals	SW.countSuperlative entity-en.restaurant string-max string-meals entity-en.food
restaurant that serves e0 meal	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-cuisine string-= e0 )
what are some cuisines offered by more than two restaurants	SW.countComparative entity-en.cuisine SW.reverse string-cuisine string-> number2 entity-en.restaurant
restaurant that has takeout and that is good for groups	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-groups
what restaurant doesnt have a 2 dollar sign	SW.filter entity-en.restaurant string-price_rating string-!= number2 en.dollar_sign
what restaurant is in multiple neighborhoods	SW.countComparative entity-en.restaurant string-neighborhood string->= number2
restaurants with the same or lower price rating as e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-price_rating  )
restaurant that takes reservations and that is good for kids	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-kids
which restaurant has a price rating of two dollar signs and has waiters	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-waiter
what restaurant has waiter service and a 2 dollar sign rating	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-price_rating string-= number2 en.dollar_sign
which restaurant s cuisine has 3 star rating	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star )
what is the cuisine of the restaurant that has group dining	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-groups )
list all restaurants offering takeout	SW.filter entity-en.restaurant string-takeout
what is the average star rating of all restaurants	string-avg SW.getProperty entity-en.restaurant string-star_rating
what are some 3 star restaurants that accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-star_rating string-= number3 en.star
restaurants with dollar ratings less than 2	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-< ( SW.ensureNumericEntity number2 en.dollar_sign )
what are some restaurants rated 3 dollar signs or less	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-<= ( SW.ensureNumericEntity number3 en.star )
restaurant for e0 rated 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-price_rating string-= number2 en.dollar_sign
e0 restaurant that is good for group dining	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-groups
what neighborhood has the most e0 restaurants	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-cuisine string-= e0 )
what meals does e0 serve	SW.filter ( SW.filter entity-en.food SW.reverse string-meals string-= e0 ) SW.reverse string-meals string-= e0
restaurants that are good for children and offer takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-kids
restaurant that serves at most two meal	SW.countComparative entity-en.restaurant string-meals string-<= number2 entity-en.food
restaurant that takes credit cards and whose star rating is 3 stars	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-star_rating string-= number3 en.star
what restaurants have takeout and are kidfriendly	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-kids
restaurants with the most options	SW.countSuperlative entity-en.restaurant string-max string-meals entity-en.food
restaurants found in less than two neighborhoods	SW.countComparative entity-en.restaurant string-neighborhood string-< number2
find a restaurant with less stars than the e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-star_rating  )
what restaurant has less than 5 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-< ( SW.ensureNumericEntity SW.concat )
total star rating of restaurant	string-sum SW.getProperty entity-en.restaurant string-star_rating
what e0 restaurant has a 3 star rating	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-neighborhood string-= e0
what restaurant is good for groups and takes credit card	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-credit
what cuisines are offered by restaurants that offer takeout	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-takeout )
restaurant that does not have a three star rating	SW.filter entity-en.restaurant string-star_rating string-!= number3 en.star
list all restaurants that have a price rating of 2 dollar signs or 3 dollar signs	SW.filter entity-en.restaurant string-price_rating string-= SW.concat
what are some 3 star restaurants that serve e0	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-meals string-= e0
restaurants with a 2 dollar sign rating that take credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-price_rating string-= number2 en.dollar_sign
restaurants with similar food to e0	SW.getProperty e0 string-cuisine
list all restaurants that are either e0 or e1	SW.concat
which neighborhoods have restaurants that offer takeout	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-takeout )
list all 3 star rated e0 restaurants	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-cuisine string-= e0
restaurants with at least 30 or 40 reviews	SW.concat
restaurant whose star rating is at least 3 stars or 5 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string->= ( SW.ensureNumericEntity SW.concat )
3 star restaurants that have outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-star_rating string-= number3 en.star
restaurant that is good for group dining and accepts credit cards	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-credit
what are the neighborhoods of restaurants that take reservations	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-reserve )
restaurant which has waiters	SW.filter entity-en.restaurant string-waiter
what restaurant can i eat e0 and pay with a credit card	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-meals string-= e0
what is a meal that a restaurant that is open for e0 serves	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-meals string-= e0 )
which restaurants are rated between 3 and 5 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string->= ( SW.ensureNumericEntity SW.concat )
what e0 restaurant offers outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-outdoor
a e0 restaurant	SW.filter entity-en.restaurant string-cuisine string-= e0
what restaurant is in over two neighborhoods	SW.countComparative entity-en.restaurant string-neighborhood string-> number2
restaurant whose star rating is at most 3 stars or 5 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-<= ( SW.ensureNumericEntity SW.concat )
what neighborhood contains restaurants that accept credit cards	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-credit )
what restaurant takes reservations and has outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-reserve
which neighboorhodd has the least number of resturants	SW.countSuperlative entity-en.neighborhood string-min SW.reverse string-neighborhood entity-en.restaurant
what e0 restaurant offers e1	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e1 ) string-cuisine string-= e0
which restaurant is good for group dining	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-groups )
what 3 star restaurants deliver	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-delivery
restaurants with price ratings less than 2 dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-< ( SW.ensureNumericEntity SW.concat )
restaurant whose price rating is 2 dollar signs or 3 dollar signs	SW.filter entity-en.restaurant string-price_rating string-= SW.concat
restaurants rated with 3 stars and have outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-outdoor
restaurant that has delivery and that is good for groups	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-groups
list all 3 star restaurants	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-star_rating string-= number3 en.star
find a restaurant with outdoor seating that takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-outdoor
restaurant whose price rating is at most 2 dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-<= ( SW.ensureNumericEntity number2 en.dollar_sign )
a restaurant around alot of neighborhoods	SW.countSuperlative entity-en.restaurant string-max string-neighborhood
what is the priuce rating of e0	SW.getProperty e0 string-price_rating
a 3 star restaurant that is good for kids	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-kids
family friendly restaurants with takeout	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-takeout
restaurant that takes reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-reserve
which restaurants are good for groups and have outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-outdoor
what neighborhood with the most restaurants	SW.countSuperlative entity-en.neighborhood string-max SW.reverse string-neighborhood entity-en.restaurant
restaurant that is good for groups and that has delivery	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-delivery
a restaurant that is group friendly	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-groups
which restaurants that have waiters take credit cards	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-credit
what restaurants offer waiter serivce	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-waiter )
what is the cuisine of the most restaurants	SW.countSuperlative entity-en.cuisine string-max SW.reverse string-cuisine entity-en.restaurant
what 3 star restaurant has delivery	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-star_rating string-= number3 en.star
restaurant whose price rating is 2 dollar signs	SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign
what restaurants are good for kids and serve e0	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-meals string-= e0
a delivering restaurant with waiters	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-waiter
e0 restaurants that deliver	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-delivery
restaurants with more than two meals	SW.countComparative entity-en.restaurant string-meals string-> number2 entity-en.food
which restaurants in e0 have a price rating of 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-price_rating string-= number2 en.dollar_sign
what neighborhoods have the most 3 star rated restaurants	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star )
what restaurants offer e0	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-meals string-= e0
what e0 restaurant has delivery	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-delivery
what restaurant serves a meal similar to that found at the e0	SW.filter entity-en.restaurant string-meals string-= ( SW.filter entity-en.food SW.reverse string-meals string-= e0 )
the three star restaurant has takeout food	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-star_rating string-= number3 en.star
restaurants that have outdoor seating and serve e0	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-meals string-= e0
name some e0 restaurants meant for group dining	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-cuisine string-= e0
what meals do credit card taking restaurants serve	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-credit )
name a restaurant serving more than two types of cuisine	SW.countComparative entity-en.restaurant string-cuisine string-> number2
restaurant that is kidfriendly and has an outdoor dining area	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-outdoor
which restaurant has a cuisine that offers delivery services	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-delivery )
what meal is served in the most restaurants	SW.countSuperlative entity-en.food string-max SW.reverse string-meals entity-en.restaurant
what restaurant can i get e0 at that has waiter service	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-waiter
neighborhood that is neighborhood of restaurant whose price rating is 2 dollar signs	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign )
what restaurant has 2 or greater dollar signs as its price rating	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string->= ( SW.ensureNumericEntity number2 en.dollar_sign )
restaurant that is rated 3 to 5 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string->= ( SW.ensureNumericEntity SW.concat )
hotel that offers delivery services and has a price rating of 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-price_rating string-= number2 en.dollar_sign
restaurant that serves e0 and whose price rating is 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-price_rating string-= number2 en.dollar_sign
restaurant with takeout in e0	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-neighborhood string-= e0
which restaurant has the lowest star rating	SW.superlative entity-en.restaurant string-min SW.ensureNumericProperty string-star_rating
restaurant that has waiter service and that takes reservations	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-reserve
restaurant with a 2 or 3 dollar price rating	SW.filter entity-en.restaurant string-price_rating string-= SW.concat
what restaurant has the lowest star rating	SW.superlative entity-en.restaurant string-min SW.ensureNumericProperty string-star_rating
restaurant that is good for groups and that is good for kids	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-kids
restaurant with e0 menu	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-meals string-= e0 )
restaurant that has the largest price rating	SW.superlative entity-en.restaurant string-max SW.ensureNumericProperty string-price_rating
which neighborhood restaurant is good for a group of people	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-groups )
restaurant that has at most two cuisine	SW.countComparative entity-en.restaurant string-cuisine string-<= number2
which neighborhood has two restaurants	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-= number2 entity-en.restaurant
what neighborhood has at least two restaurants	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-= number2 entity-en.restaurant
a restaurant with e0 cuisine	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-cuisine string-= e0
which hotel offers delivery services	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-delivery
which e0 restaurants have outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-cuisine string-= e0
what is the average price rating of a restaurant	string-avg SW.getProperty entity-en.restaurant string-price_rating
restaurants that take credit cards and are childfriendly	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-kids
what is the number of this meal	.size entity-en.food
what restaurants deliver that serve food good for kids	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-delivery
list all restaurants that have the same or better price rating than e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-price_rating  )
hotel with a e0 or e1 restaurant	SW.filter entity-en.restaurant string-cuisine string-= SW.concat
a kid friendly restaurant with outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-outdoor
restaurant whose star rating is 3 stars or 5 stars	SW.filter entity-en.restaurant string-star_rating string-= SW.concat
restaurant whose price rating is at least 2 dollar signs or 3 dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string->= ( SW.ensureNumericEntity SW.concat )
e0 restaurant in mid town west	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= en.neighborhood.midtown_west ) string-cuisine string-= e0
what cuisine options are there among group friendly restaurants	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-groups )
which restaurants have a price rating of 2 to3 dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string->= ( SW.ensureNumericEntity SW.concat )
what resturant takes credit cards and is good for groups	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-groups
what is the eighborhood  of the takeout restaurant	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-takeout )
what is a good meal served by a restaurant that accommodates children	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-kids )
restaurant whose neighborhood is e0 and that takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-credit
a e0 restaurant with medium pricing	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign )
restaurants that have waiters and are good for kids	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-kids
what restaurant serves the same food as the e0	SW.filter entity-en.restaurant string-meals string-= ( SW.filter entity-en.food SW.reverse string-meals string-= e0 )
restaurant that is good for groups	SW.filter entity-en.restaurant string-groups
hotel that has a price rating of 2 dollar signs and a 3 star rating	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-star_rating string-= number3 en.star
restaurants called e0 or e1	SW.concat
what restaurants have a price rating of two dollar signs and also accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-credit
restaurants with delivery rated 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-delivery
which restaurants have the same star rating as e0	SW.filter entity-en.restaurant string-star_rating string-= SW.getProperty e0 string-star_rating
restaurants with 3 stars and 2 price rating	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-star_rating string-= number3 en.star
restaurants that are deliver and are good for large parties	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-delivery
what restaurant has the largest menu	SW.countSuperlative entity-en.restaurant string-max string-meals entity-en.food
5 stars or 3 stars	SW.concat
this restaurant had the largest rating in price	SW.superlative entity-en.restaurant string-max SW.ensureNumericProperty string-price_rating
restaurants whose ratings are 3 stars and that take reservations	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-reserve
restaurants with outdoor seating that takes reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-outdoor
restaurants with a 3 or 5 star rating	SW.filter entity-en.restaurant string-star_rating string-= SW.concat
what meal does the e0 restaurant serve	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-neighborhood string-= e0 )
restaurants rated less than 3 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-< ( SW.ensureNumericEntity number3 en.star )
restaurants in the e0 neighborhood that have waiters	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-neighborhood string-= e0
what restaurant offers delivery and takes reservations	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-reserve
what group restaurant takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-groups
restaurant that takes reservations and that has takeout	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-takeout
restaurant that is around mid town west that offers e0	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= en.neighborhood.midtown_west ) string-meals string-= e0
what cuisines are offered by restaurants accepting reservations	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-reserve )
what e0 restaurants have a price rating of 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-price_rating string-= number2 en.dollar_sign
what neighborhoods have restaurants that deliver	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-delivery )
what restaurant has a star rating the same as e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-star_rating  )
restaurant that has waiter service and that has waiter service	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-waiter
restaurants serving e0 that accept reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-meals string-= e0
restaurants that has more than one cuisine	SW.countComparative entity-en.restaurant string-cuisine string-= number2
hotel that has outdoor seating  facilities and accepts credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-outdoor
what neighborhood contains at least two restaurants	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string->= number2 entity-en.restaurant
what restaurant offers reservations and takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-credit
3 star restaurants which have waiters	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-waiter
restaurants open for e0	SW.filter entity-en.restaurant string-meals string-= e0
restaurant whose star rating is smaller than 3 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-< ( SW.ensureNumericEntity number3 en.star )
which restaurant appeals to kids and is good for group dining	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-kids
which restaurants with outdoor dining areas accept reservations	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-reserve
which restaurant offers e0	SW.filter entity-en.restaurant string-meals string-= e0
which restaurant is good for a group and also has waiters	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-waiter
what e0 restaurant takes reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-cuisine string-= e0
what restaurants are good for groups that have waiter service	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-waiter
restaurant whose star rating is 3 stars and whose price rating is 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-price_rating string-= number2 en.dollar_sign
what is the average restaurant star rating	string-avg SW.getProperty entity-en.restaurant string-star_rating
a three star kid friendly restaurant	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-kids
take out restaurant in e0	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-neighborhood string-= e0
what retaurant in e0 have waiter services	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-neighborhood string-= e0
list all restaurants that have lower stars than 3 star or 5 star	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-<= ( SW.ensureNumericEntity SW.concat )
what neighborhood has restaurants that serve e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-meals string-= e0 )
most expensive restaurants	SW.superlative entity-en.restaurant string-max SW.ensureNumericProperty string-price_rating
which restaurants have outdoor seating and offer takeout	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-takeout
what restaurants serve at least two meals	SW.countComparative entity-en.restaurant string-meals string->= number2 entity-en.food
what is a meal that a restaurant with delivery service has	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-delivery )
restaurant that serves e0 in e1	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-neighborhood string-= e1
what is a meal that the e0 does not serve	SW.filter entity-en.food SW.reverse string-meals string-!= e0
what e0 restaurant offers takeout	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-takeout
restaurants serving fewer than two meals	SW.countComparative entity-en.restaurant string-meals string-< number2 entity-en.food
what restaurant has more than two cuisines	SW.countComparative entity-en.restaurant string-cuisine string->= number2
what restaurant offers takeout and has reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-takeout
what restaurant serves e0 and offers takeout	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-takeout
what cuisine does the e0 not have	SW.filter entity-en.cuisine SW.reverse string-cuisine string-!= e0
which restaurant is rated the most expensive	SW.superlative entity-en.restaurant string-max SW.ensureNumericProperty string-price_rating
list all 2 dollar signs restaurants	SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign
restaurants open for e0 that take credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-meals string-= e0
list all restaurants in e0 or e1	SW.filter entity-en.restaurant string-neighborhood string-= SW.concat
family friendly restaurants that have waiters	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-kids
what e0 restaurant can i get takeout from	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-neighborhood string-= e0
restaurants rated 3 stars that accept reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-star_rating string-= number3 en.star
restaurants that serves more than two cuisines	SW.countComparative entity-en.restaurant string-cuisine string->= number2
restaurants that serve e0 that are good for large parties	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-meals string-= e0
restaurants with takeout and delivery	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-delivery
cuisine that is cuisine of restaurant that takes credit cards	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-credit )
restaurants with 2 price rating that accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-credit
what takeout restaurant has outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-takeout
find a 3 or fewer star restaurant	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-<= ( SW.ensureNumericEntity number3 en.star )
what is the neighborhood of the restaurant that has a price rating of 2 dollar signs	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign )
which e0 restaurants take credit cards	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-credit
restaurants with waiters that offer takeout	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-takeout
e0 neighborhood restaurant with 3 star ratings	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-star_rating string-= number3 en.star
restaurants that have outdoor seating and are good for large parties	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-groups
find a good kids restaurant that serves e0	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-kids
restaurant whose star rating is larger than 3 stars or 5 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-> ( SW.ensureNumericEntity SW.concat )
which resturants have a price less than or equal to e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-price_rating  )
what restaurant serves two cuisines	SW.countComparative entity-en.restaurant string-cuisine string-= number2
what meal does the restaurant serve for e0	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-meals string-= e0 )
what meal is served by fewer than two restaurants	SW.countComparative entity-en.food SW.reverse string-meals string-< number2 entity-en.restaurant
e0 restaurants with outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-cuisine string-= e0
restaurants that have waiters and have 2 dollar sign price rating	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-waiter
list all restaurants that are at least 2 dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string->= ( SW.ensureNumericEntity number2 en.dollar_sign )
what cuisine is at at least two restaurants	SW.countComparative entity-en.cuisine SW.reverse string-cuisine string->= number2 entity-en.restaurant
meals at restaurants that have waiters	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-waiter )
what meals do e0 serving restaurants serve	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-meals string-= e0 )
which e0 resturants serve e1	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e1 ) string-cuisine string-= e0
restaurant in the neighbourhood that has takeout facilities	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-takeout )
what is the price rating of the hotel	string-sum SW.getProperty entity-en.restaurant string-price_rating
a three star restaurant thats mid priced	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-price_rating string-= number2 en.dollar_sign
find a 3 star restaurant that is good for groups	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-star_rating string-= number3 en.star
restaurants that take credit cards and have waiter service	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-waiter
what restaurants has more than two meals on the menu	SW.countComparative entity-en.restaurant string-meals string->= number2 entity-en.food
what is the most expensive restaurant	SW.superlative entity-en.restaurant string-max SW.ensureNumericProperty string-price_rating
which restaurant is friendly towards children and takes reservations	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-reserve
three star rated restaurants that deliver	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-star_rating string-= number3 en.star
restaurants with delivery in e0	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-delivery
restaurant in e0  which is good for groups	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-groups
which restaurants are rated under 3 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-<= ( SW.ensureNumericEntity SW.concat )
find a good group restaurant with waiter service	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-waiter
what good group restaurant takes reservations	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-reserve
accepts reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-reserve
restaurant that serves e0 and that takes reservations	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-reserve
e0 in the neighborhood	SW.getProperty e0 string-neighborhood
cuisine that is cuisine of restaurant whose neighborhood is e0	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-neighborhood string-= e0 )
restaurants with outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-outdoor
neighborhood that is neighborhood of the most number of restaurant	SW.countSuperlative entity-en.neighborhood string-max SW.reverse string-neighborhood entity-en.restaurant
what restaurant takes credit card and is open for e0	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-credit
what restaurant is kid friendly and has takeout	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-takeout
what restaurant takes group reservations	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-reserve
restaurant with two locations	SW.countComparative entity-en.restaurant string-neighborhood string-<= number2
a e0 restaurant that takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-credit
what is the total price rating of all the restaurants	string-sum SW.getProperty entity-en.restaurant string-price_rating
restaurants that have between 30 and 40 reviews	SW.concat
what resturant is not in e0	SW.filter entity-en.restaurant string-neighborhood string-!= e0
groupfriendly restaurants	SW.filter entity-en.restaurant string-groups
e0 or e1	SW.concat
what cuisine is good for groups at a restaurant	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-groups )
restaurants in e0 with waiter service	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-waiter
what is the price rating	string-sum SW.getProperty entity-en.restaurant string-price_rating
list all restaurants that areworse than 3 or 5 star rated restaurants	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-< ( SW.ensureNumericEntity SW.concat )
a e0 serving restaurant with take out	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-meals string-= e0
what neighborhood contains two restaurants	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-= number2 entity-en.restaurant
which 3 star restaurants have waiters	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-waiter
neighborhood that is neighborhood of restaurant that has takeout	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-takeout )
what are some restaurants who are 4 stars or better	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-> ( SW.ensureNumericEntity number3 en.star )
find a 3 star restaurant with waiter service	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-star_rating string-= number3 en.star
restaurant that is good for groups and that serves e0	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-meals string-= e0
restaurants with reservations and serves e0	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-meals string-= e0
restaurants situated between neighborhoods	SW.countComparative entity-en.restaurant string-neighborhood string-= number2
what restaurant is available in less than two neighborhoods	SW.countComparative entity-en.restaurant string-neighborhood string-< number2
what restaurant with a price rating of two dollar signs is a good place for a group	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-price_rating string-= number2 en.dollar_sign
what restaurant can be found in only two neighborhoods	SW.countComparative entity-en.restaurant string-neighborhood string-<= number2
which hotel appeals to kids and accepts credit cards	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-credit
restaurant whose star rating is 3 stars and that has takeout	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-takeout
neighborhood that is neighborhood of e0 or e1	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= SW.concat
which is the e0 restaurant in this neighbourhood	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-cuisine string-= e0 )
neighborhood that is neighborhood of more than two restaurant	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-> number2 entity-en.restaurant
what restaurant is kid friendly and takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-credit
which resturant serves e0 and is good for kids	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-kids
restaurants in e0 that have takeout	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-takeout
restaurants that are in e0	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-neighborhood string-= e0 )
restaurant whose cuisine is e0 and that has takeout	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-takeout
hotel which has a 3 star rating	SW.filter entity-en.restaurant string-star_rating string-= number3 en.star
which neighborhoods have 3 star restaurants	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star )
list all restaurants that are more expensive than 2 dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-> ( SW.ensureNumericEntity number2 en.dollar_sign )
e0 restaurant with waiters	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-waiter
which restaurant that welcomes kids offers e0	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-kids
cheapest restaurants	SW.superlative entity-en.restaurant string-min SW.ensureNumericProperty string-price_rating
what restaurants serve e0 and offer takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-meals string-= e0
a restaurant that offers e0 and delivery services	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-delivery
which resturants serve more than two meals	SW.countComparative entity-en.restaurant string-meals string-> number2 entity-en.food
the restaurant takes credit cards and serves e0	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-credit
restaurants that have waiters and are good for groups	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-groups
what restaurant is good for groups and takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-groups
what neighborhood are the restaurants that are in e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-neighborhood string-= e0 )
restaurants that offer takeout and are price rated 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-takeout
e0 restaurant that delievers	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-cuisine string-= e0
groupfriendly e0 restaurants	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-cuisine string-= e0
find a restaurant that takes credit cards	SW.filter entity-en.restaurant string-credit
what restaurant offers delivery and has waiter service	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-delivery
restaurants with a common meal	SW.countComparative entity-en.food SW.reverse string-meals string-< number2 entity-en.restaurant
restaurants with 2 price rating that serve e0	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-meals string-= e0
what restaurant offers delivery and takes credit card	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-delivery
whats the star rating of e0	SW.getProperty e0 string-star_rating
what 2 dollar signs restaurants are in the neighbor of e0	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-neighborhood string-= e0
restaurant whose cuisine is cuisine of e0	SW.filter entity-en.restaurant string-cuisine string-= SW.getProperty e0 string-cuisine
what restaurant is good for kids and takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-credit
restaurant with waiter service and reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-waiter
which restaurant has waiters and a star rating of three stars	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-star_rating string-= number3 en.star
what is the star rating of e0	SW.getProperty e0 string-star_rating
what neighborhood has no more than two restaurants	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-<= number2 entity-en.restaurant
what e0 restaurant takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-credit
3star restaurants that deliver	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-star_rating string-= number3 en.star
restaurants with takeout that are kidfriendly	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-kids
what restaurants are both good for groups and kids	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-groups
what restaurant serves the least amount of meals	SW.countSuperlative entity-en.food string-min SW.reverse string-meals entity-en.restaurant
restaurant that has outdoor seating and that has waiter service	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-waiter
restaurants with a 2 dollar sign price rating	SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign
restaurants that accept credit cards and serve outdoors	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-outdoor
restaurant that takes reservations and that has outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-outdoor
list all restaurants that have takeout and delivery	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-delivery
restaurant in mid town west that deliver	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= en.neighborhood.midtown_west ) string-delivery
what restaurant is good for kids and groups	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-groups
restaurant that serves e0 and whose cuisine is e1	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-cuisine string-= e1
restaurants in e0 that deliver	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-neighborhood string-= e0
what restaurant offers outdoor seating and takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-outdoor
which restaurant has outdoor seats as well as delivery	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-delivery
restaurants that can be booked in advance	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-reserve )
a group friendly e0 restaurant	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-cuisine string-= e0
what 2 dollar signs restaurant is good for groups	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-price_rating string-= number2 en.dollar_sign
restaurant serving e0 that can deliver	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-meals string-= e0
restaurants with 2 dollar sign rating	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-price_rating string-= number2 en.dollar_sign
which neighborhoods have e0 restaurants	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-cuisine string-= e0 )
hotel in the e0 area which has outdoor seating facilities	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-neighborhood string-= e0
which restaurant has waiter service and takes reservations	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-reserve
open for two meals	SW.countComparative entity-en.restaurant string-meals string->= number2 entity-en.food
what is the average price rating of all restaurants	string-avg SW.getProperty entity-en.restaurant string-price_rating
restaurant which offer e0 and has a three star rating	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-meals string-= e0
what neighborhood contains restaurants that offer e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-meals string-= e0 )
what restaurant is kid friendly and takes reservations	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-reserve
which restaurants have a price rating of two dollar signs	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-price_rating string-= number2 en.dollar_sign
restaurant whose price rating is 2 dollar signs and that is good for kids	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-kids
restaurants that serves e0 and is large	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-groups
restaurants for groups and is in e0	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-neighborhood string-= e0
what is a good kids restaurant	SW.filter entity-en.restaurant string-kids
what meal does the waiter serve at the restaurant	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-waiter )
what neighborhood is the e0 in	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= e0
restaurant with takeout service that accepts credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-takeout
what restaurants have outdoor seating that take credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-outdoor
which restaurant accepts kids and offers takeout	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-takeout
what restaurant serves at least two cuisines	SW.countComparative entity-en.restaurant string-cuisine string->= number2
restaurant that takes reservations and that serves e0	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-meals string-= e0
restaurants that serve good meals for kids	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-kids )
what restaurants have outdoor dining	SW.filter entity-en.restaurant string-outdoor
restaurants rated 3 stars that take credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-star_rating string-= number3 en.star
what restaurants with 2 price rating also have waiter service	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-waiter
e0 restaurants that are kid friendly	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-cuisine string-= e0
restaurants in e0 that offer takeout	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-takeout
restaurant whose star rating is 3 stars and that has delivery	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-delivery
which restaurant accepts credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-credit
what is a 3 star restaurant that serves e0	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-star_rating string-= number3 en.star
restaurant whose star rating is larger than star rating of e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-star_rating  )
a neighborhood similar to e0 cafes	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= en.restaurant.thai_cafe
which hotel has the highest star rating	SW.superlative entity-en.restaurant string-max SW.ensureNumericProperty string-star_rating
hotel which has a price rating of less than 2 dollar signs or 3 dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-< ( SW.ensureNumericEntity SW.concat )
list all e0 or e1 restaurants	SW.filter entity-en.restaurant string-cuisine string-= SW.concat
what neighborhood has a restaurant that contains outdoor seating	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-outdoor )
restaurants with the lowest star rating	SW.superlative entity-en.restaurant string-min SW.ensureNumericProperty string-star_rating
restaurants that deliver	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-delivery
what restaurant is good for groups and takes reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-groups
find a 2 dollar price rating restaurant with delivery	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-price_rating string-= number2 en.dollar_sign
restaurant that has the least number of cuisine	SW.countSuperlative entity-en.restaurant string-min string-cuisine
what meal does the 3 star restaurant serve	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star )
restaurants that serve same meals as e0	SW.filter entity-en.restaurant string-meals string-= ( SW.filter entity-en.food SW.reverse string-meals string-= e0 )
which restaurant offers the most variety of cuisine	SW.countSuperlative entity-en.restaurant string-max string-cuisine
restaurants with waiter service and takeout	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-takeout
which resturants serve the least number of meals	SW.countSuperlative entity-en.restaurant string-min string-meals entity-en.food
which e0 resturants have takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-cuisine string-= e0
list all restaurants in e0	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-neighborhood string-= e0
what restaurants in e0 serve e1	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e1 ) string-neighborhood string-= e0
what cuisine has the most restaurants	SW.countSuperlative entity-en.cuisine string-max SW.reverse string-cuisine entity-en.restaurant
what restaurant takes reservations and is kid friendly	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-kids
what is a meal served by a restaurant that has takeout service	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-takeout )
restaurant that has delivery and that has takeout	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-takeout
what e0 restaurants are kid friendly	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-kids
which e0 restaurant has delivery	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-cuisine string-= e0
what restaurant is good for groups and offers takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-groups
restaurants that have takeout that are good for large parties	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-groups
restaurants in the 2 dollar sign price category that accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-credit
which resturant takes reservations and has waiter service	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-waiter
what e0 restaurant offers e1	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e1 ) string-neighborhood string-= e0
a kid friendly restaurant for e0	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-meals string-= e0
restaurants with price ratings between 2 and 3	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string->= ( SW.ensureNumericEntity SW.concat )
area that has the minimum number of restaurants	SW.countSuperlative entity-en.neighborhood string-min SW.reverse string-neighborhood entity-en.restaurant
restaurants that accept credit cards and offer takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-credit
which 3 star rated restaurants are amenable to kids	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-star_rating string-= number3 en.star
restaurants that can be booked in advance and good for group dining	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-groups
restaurant that takes credit cards and whose price rating is 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-price_rating string-= number2 en.dollar_sign
which restaurant is the most highly rated	SW.superlative entity-en.restaurant string-max SW.ensureNumericProperty string-star_rating
three star restaurants that accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-credit
restaurants with outdoor dining area	SW.filter entity-en.restaurant string-outdoor
which resturants have at most two cuisines	SW.countComparative entity-en.restaurant string-cuisine string-<= number2
restaurants at least with a 2 dollar price rating	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string->= ( SW.ensureNumericEntity number2 en.dollar_sign )
what restaurants are good for groups and kids	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-groups
which restaurants are group friendly and have waiters	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-groups
which restaurant not only serves e0 but has delivery	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-delivery
restaurants with price rating of 2 in e0	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-neighborhood string-= e0
what cuisine does the e0 restaurant have	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-neighborhood string-= e0 )
restaurant whose cuisine is e0 and that is good for groups	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-groups
restaurant has seating outside	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-outdoor
restaurant whose star rating is 3 stars and that is good for groups	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-groups
find a e0 restaurant	SW.filter entity-en.restaurant string-cuisine string-= e0
find a restaurant i can get reservations at that has a 2 dollar price rating	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-price_rating string-= number2 en.dollar_sign
e0 restaurants with 2 dollar signs price rating	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= e0 ) string-price_rating string-= number2 en.dollar_sign
what restaurant has 3 or 2 menu items	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-<= ( SW.ensureNumericEntity SW.concat )
what meal is good for groups	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-groups )
a reservation restaurant that is kid friendly	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-kids
cuisine like that of e0	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= e0
which resturants have a price rating the same as the e0	SW.filter entity-en.restaurant string-price_rating string-= SW.getProperty e0 string-price_rating
name a restaurant in mid town that accepts credit cards	SW.filter ( SW.filter entity-en.restaurant string-neighborhood string-= en.neighborhood.midtown_west ) string-credit
which restaurant is located in e0	SW.filter entity-en.restaurant string-neighborhood string-= e0
e0 or e1	SW.concat
what restaurants serves more than just one meal	SW.countComparative entity-en.restaurant string-meals string-> number2 entity-en.food
which restaurants take credit and can accommodate a group	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-groups
which restaurant both has outdoor seating and takes reservations	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-reserve
restaurant that is good for groups and that has takeout	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-takeout
3 star restaurants that take groups	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-star_rating string-= number3 en.star
restaurant who shares a neighborhood with the e0	SW.filter entity-en.restaurant string-neighborhood string-= SW.getProperty e0 string-neighborhood
which restaurant chain is found in the fewest neighborhoods	SW.countSuperlative entity-en.restaurant string-min string-neighborhood
at least 3 star restaurants	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string->= ( SW.ensureNumericEntity number3 en.star )
neighborhood that is neighborhood of restaurant that has delivery	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-delivery )
what cuisine type is most common	SW.countSuperlative entity-en.food string-max SW.reverse string-meals entity-en.restaurant
what restaurant contains the most number of cuisines	SW.countSuperlative entity-en.restaurant string-max string-cuisine
restaurants with waiter service and outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-outdoor
hotel which has a higher star rating than e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-star_rating  )
whats a resturant thats good for groups and has waiter service	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-waiter
restaurant in e0 that is good for groups	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-neighborhood string-= e0
restaurant that offers reservation facility and serves e0	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-meals string-= e0
which restaurant serves this cuisine	SW.countComparative entity-en.cuisine SW.reverse string-cuisine string-= number2 entity-en.restaurant
hotel that can be booked in advance and which has a price rating of 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-reserve
restaurants that offer credit cards and takeout	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-takeout
which restaurants have takeout and delivery	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-delivery
the e0 is in which neighborhood	SW.getProperty e0 string-neighborhood
what e0 restaurant has a good star rating	SW.filter entity-en.restaurant string-star_rating string-= SW.getProperty en.restaurant.thai_cafe string-star_rating
restaurants that deliver and accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-delivery
great place for groups and takes reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-groups
what is the neighborhood of e0 or e1	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= SW.concat
e0 restaurants rated 3 stars	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-cuisine string-= e0
restaurant in the e0 area	SW.filter entity-en.restaurant string-neighborhood string-= e0
what kind fo meals do e0 and e1 serve	SW.filter entity-en.food SW.reverse string-meals string-= SW.concat
what restaurant has outdoor seating and has a price rating of the 2 dollar sign	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-price_rating string-= number2 en.dollar_sign
find a e0 or e1 restaurant	SW.filter entity-en.restaurant string-cuisine string-= SW.concat
restaurant that is near to e0	SW.filter entity-en.restaurant string-neighborhood string-= SW.getProperty e0 string-neighborhood
what restaurants accept credit cards and reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-credit
what neighborhood contain the most restaurants that have waiter service	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-waiter )
which resturants serve e0 and have waiter service	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-waiter
what restaurant has at least a 2 or 3 dollar sign rating	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-> ( SW.ensureNumericEntity SW.concat )
what restaurants use waiters	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-waiter
restaurant that has delivery and that takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-credit
which restaurants have outdoor seating and accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-credit
restaurants open for at least two meals per day	SW.countComparative entity-en.restaurant string-meals string->= number2 entity-en.food
in which neighborhood is e0	SW.filter ( SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= e0 ) SW.reverse string-neighborhood string-= e0
what entrees does e0 offer	SW.filter entity-en.food SW.reverse string-meals string-= e0
what restaurant delivers and is good for kids	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-kids
what kind of meals are served in the restaurants in e0	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-neighborhood string-= e0 )
restaurants that serves meal	SW.countComparative entity-en.food SW.reverse string-meals string-<= number2 entity-en.restaurant
hotel that has more than a three star rating	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-> ( SW.ensureNumericEntity number3 en.star )
find a restaurant with more than 3 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-> ( SW.ensureNumericEntity SW.concat )
list all e0 restaurants that offer takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-cuisine string-= e0
restaurants rated more highly than e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-star_rating  )
what meal can you get for take out at the restaurant	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-takeout )
what restaurant offers an outdoot and takeout	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-takeout
which restaurants have outdoor seating	SW.filter entity-en.restaurant string-outdoor
what restaurant offers only one cuisine	SW.countComparative entity-en.restaurant string-cuisine string-< number2
restaurant that has delivery and that has delivery	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-delivery
restaurants that is in the least numbers of neighborhoods	SW.countSuperlative entity-en.restaurant string-min string-neighborhood
restaurants which take reservations and are rated 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-reserve
what types of cuisine are there at resturants with outdoor seating	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-outdoor )
what restaurants have both outdoor seating and takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-outdoor
restaurants that have takeout and are good for groups	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-groups
which restaurant offers the fewest types of cuisine	SW.countSuperlative entity-en.restaurant string-min string-cuisine
hotel in e0 that can be booked in advance	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-neighborhood string-= e0
which restaurants have star ratings lower than the e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-star_rating  )
what cuisine is served by the fewest restaurants	SW.countSuperlative entity-en.cuisine string-min SW.reverse string-cuisine entity-en.restaurant
what good group restaurant has delivery	SW.filter ( SW.filter entity-en.restaurant string-groups ) string-delivery
neighborhood that is neighborhood of e0 and that is neighborhood of e0	SW.filter ( SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= e0 ) SW.reverse string-neighborhood string-= e0
what restaurant has a higher price rating than the e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-price_rating  )
restaurant that has outdoor seating and whose price rating is 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-price_rating string-= number2 en.dollar_sign
what resturant is good for kids and groups	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-groups
a reservation restaurant with meduim	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-reserve
what restaurants take credit cards and have outdoor settings	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-credit
what is the price range for the e0 restaurant	SW.filter entity-en.restaurant string-price_rating string-= SW.getProperty en.restaurant.thai_cafe string-price_rating
which e0 restaurants take reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-cuisine string-= e0
restaurants located in e0	SW.filter entity-en.restaurant string-neighborhood string-= e0
what e0 restaurant takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-cuisine string-= e0
what e0 restaurant has a star rating of 3 star	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-star_rating string-= number3 en.star
which neighborhoods have more than two restaurants	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-> number2 entity-en.restaurant
which resturants serve e0 and are good for groups	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-groups
what is a meal that the e0 or e1 serves	SW.filter entity-en.food SW.reverse string-meals string-= SW.concat
what e0 restaurant has outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-outdoor
what is the number of restaurants	.size entity-en.restaurant
what neighborhood has restaurants that accept credit cards	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-credit )
restaurant that has waiter service and that is good for kids	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-kids
what restaurants have at least 30 or 40 reviews	SW.concat
restaurant whose price rating is 2 dollar signs and that has waiter service	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-waiter
e0 restaurants that kids enjoy	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-cuisine string-= e0
restaurants that are good for children	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-kids
list 3 star restaurants by neighborhood	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star )
what resturant is good for kids and has delivery	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-kids
what is a meal served by a restaurant in e0	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-neighborhood string-= e0 )
what restaurants have lower ratings that e0	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-star_rating  )
which restaurants have waiters and accept reservations	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-reserve
hotel that has a price rating or more than 2 dollars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-> ( SW.ensureNumericEntity number2 en.dollar_sign )
groupfriendly restaurants that are rated 3 stars	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-groups
restaurant whose cuisine is e0 and that has delivery	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-delivery
how many different kind of cuisines are there	.size entity-en.cuisine
what meal does the e0 restaurant serve	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-cuisine string-= e0 )
what cuisines are offered by more than one restaurant	SW.countComparative entity-en.cuisine SW.reverse string-cuisine string->= number2 entity-en.restaurant
restaurants that have waiters and take credit cards	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-credit
which restaurants serve e0 and accept reservations	SW.filter ( SW.filter entity-en.restaurant string-meals string-= e0 ) string-reserve
restaurant that delivers and has an outdoor seating area	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-outdoor
neighborhood that is neighborhood of restaurant whose cuisine is e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-cuisine string-= e0 )
family friendly e0 restaurants	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-kids
restaurant whose star rating is 3 stars and whose cuisine is e0	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-cuisine string-= e0
restaurants that are good for children and have waiters	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-kids
restaurants with 3 or lower price rating	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-<= ( SW.ensureNumericEntity SW.concat )
what are some 2 dollar rated restaurants good for groups	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-groups
restaurant that has less than two neighborhood	SW.countComparative entity-en.restaurant string-neighborhood string-< number2
which 3star restaurant has takeout service	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-takeout
e0 restaurant that offers waiter services	SW.filter ( SW.filter entity-en.restaurant string-waiter ) string-cuisine string-= e0
restaurants for e0 for kids	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-meals string-= e0
restaurant that does delivery and reservations	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-reserve
what restaurants serve the same cuisine as e0	SW.filter entity-en.restaurant string-cuisine string-= ( SW.filter entity-en.cuisine SW.reverse string-cuisine string-= e0 )
a group friendly restaurant that is medium priced	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-groups
which restaurants have a 2 dollar sign price rating and outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-outdoor ) string-price_rating string-= number2 en.dollar_sign
what restaurant has two different cuisines	SW.countComparative entity-en.restaurant string-cuisine string-<= number2
what cuisines are offered by 3 star restaurants	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star )
what neighborhood only has one or two restaurants	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-<= number2 entity-en.restaurant
what neighborhoods have kidfriendly restaurants	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-kids )
what restaurant has two meals	SW.countComparative entity-en.restaurant string-meals string-= number2 entity-en.food
restaurant that has delivery and that has outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-outdoor
what restaurant is in the least number of neighborhoods	SW.countSuperlative entity-en.restaurant string-min string-neighborhood
hotel which has a minimum of 3 star rating	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string->= ( SW.ensureNumericEntity number3 en.star )
what neighborhood is e0 located in	SW.getProperty e0 string-neighborhood
what are the types of cuisine available in the e0 neighborhood	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-neighborhood string-= e0 )
which hotel has outdoor seating facilities and offers delivery services	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-outdoor
restaurant whose price rating is price rating of e0	SW.filter entity-en.restaurant string-price_rating string-= SW.getProperty e0 string-price_rating
what restaurants have a rating of 2 dollar signs	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign )
what neighborhood has less than two restaurants	SW.countComparative entity-en.neighborhood SW.reverse string-neighborhood string-< number2 entity-en.restaurant
which neighborhood has restaurants that offer outdoor seating	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= ( SW.filter entity-en.restaurant string-outdoor )
e0 restaurants that take credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-cuisine string-= e0
what meal is served at a restaurant with outdoor seating	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-outdoor )
what kind of meal does e0 not serve	SW.filter entity-en.food SW.reverse string-meals string-!= e0
what 2 dollar signs restaurant has outdoor seating	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-outdoor
restaurant that is good for kids and that has takeout	SW.filter ( SW.filter entity-en.restaurant string-kids ) string-takeout
highest star rated restaurants	SW.superlative entity-en.restaurant string-max SW.ensureNumericProperty string-star_rating
restaurants with takeout and takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-credit
restaurants in the same neighborhood as e0	SW.filter entity-en.neighborhood SW.reverse string-neighborhood string-= SW.concat
a restaurant that has the highest star rating	SW.superlative entity-en.restaurant string-max SW.ensureNumericProperty string-star_rating
restaurants that have the same meal	SW.countComparative entity-en.cuisine SW.reverse string-cuisine string-<= number2 entity-en.restaurant
restaurants with takeout and waiter service	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-waiter
which restaurants serve at least two meals	SW.countComparative entity-en.restaurant string-meals string->= number2 entity-en.food
what restaurants offer waiter service and takes credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-waiter
which restaurants have price ratings higher than two or three dollar signs	SW.filter entity-en.restaurant SW.ensureNumericProperty string-price_rating  string-> ( SW.ensureNumericEntity SW.concat )
what restaurant has a price rating of 2 dollar signs	SW.filter ( SW.filter entity-en.restaurant string-price_rating string-= number2 en.dollar_sign ) string-price_rating string-= number2 en.dollar_sign
what is the cuisine of e0	SW.getProperty e0 string-cuisine
what is the star rating of the e0	SW.getProperty e0 string-star_rating
restaurants that can be booked in advance and accepts credit cards	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-credit
restaurants serving the same cuisine as e0	SW.filter entity-en.restaurant string-cuisine string-= SW.getProperty e0 string-cuisine
restaurants that have takeout and deliver	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-takeout
what restaurant has reservations and takeout	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-reserve
what cuisine is served at no more than two restaurants	SW.countComparative entity-en.cuisine SW.reverse string-cuisine string-<= number2 entity-en.restaurant
which restaurant has a three star rating and also takes reservations	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-star_rating string-= number3 en.star
list all restaurants that are at least 3 stars	SW.filter entity-en.restaurant SW.ensureNumericProperty string-star_rating  string-<= ( SW.ensureNumericEntity number3 en.star )
restaurants location	SW.countComparative entity-en.restaurant string-neighborhood string-> number2
restaurant that serves e0	SW.filter entity-en.restaurant string-meals string-= e0
restaurant that has takeout and that takes reservations	SW.filter ( SW.filter entity-en.restaurant string-takeout ) string-reserve
a restaurant rated at least 3 stars that delivers	SW.filter ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star ) string-delivery
a fairly inexpensive e0 cuisine can be purchased at this restaurant	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-price_rating string-= number2 en.dollar_sign
restaurants that deliver and offer takeout	SW.filter ( SW.filter entity-en.restaurant string-delivery ) string-takeout
restaurants that take credit cards	SW.filter entity-en.restaurant string-credit
restaurants with a 2 or 3 dollar sign price rating	SW.concat
which restaurant takes reservations and is suitable for groups	SW.filter ( SW.filter entity-en.restaurant string-reserve ) string-groups
list all restaurants in the neighborhood of e0 or e1	SW.concat
what is the cuisine of restaurants that have waiters	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-waiter )
what kind of meal do 3 star restaurants serve	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-star_rating string-= number3 en.star )
restaurant that has delivery services	SW.filter entity-en.food SW.reverse string-meals string-= ( SW.filter entity-en.restaurant string-delivery )
what kind of restaurant is good for groups	SW.filter entity-en.cuisine SW.reverse string-cuisine string-= ( SW.filter entity-en.restaurant string-groups )
restaurants rated with 3 to 5 stars	SW.concat
the restaurant serves e0 as well as e1 food	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e1 ) string-meals string-= e0
which kid friendly restaurants accept credit cards	SW.filter ( SW.filter entity-en.restaurant string-credit ) string-kids
what e0 restaurant has delivery	SW.filter ( SW.filter entity-en.restaurant string-cuisine string-= e0 ) string-delivery
article whose author is e0 or e1	SW.filter entity-en.article string-author string-= SW.concat
name an article that won an award	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-won_award )
article whose venue is annals of e0 and that won an award	SW.filter ( SW.filter entity-en.article string-venue string-= e0 ) string-won_award
name the author of an article about e0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
what article was published on the same date as e0	SW.filter entity-en.article string-publication_date string-= SW.getProperty e0 string-publication_date
article citing e0 by e1	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-author string-= e1
what article does not cite e0	SW.filter entity-en.article string-cites string-!= e0
what article has annals of e0 as a venue	SW.filter ( SW.filter entity-en.article string-venue string-= e0 ) string-venue string-= e0
article citing e0 published in annals of e1	SW.filter ( SW.filter entity-en.article string-venue string-= e1 ) SW.reverse string-cites string-= e0
what are the articles that e0 cites	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-cites string-= e0
articles not published in d0	SW.filter entity-en.article string-publication_date string-!= d0
what article won an award and has a publication date of d0	SW.filter ( SW.filter entity-en.article string-won_award ) string-publication_date string-= d0
author with maximum two article	SW.countComparative entity-en.person SW.reverse string-author string-<= number2 entity-en.article
which article cites an awardwinning article	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-won_award )
articles that cites at least two article	SW.countComparative entity-en.article SW.reverse string-cites string->= number2 entity-en.article
writer of e0	SW.filter ( SW.filter entity-en.person SW.reverse string-author string-= e0 ) SW.reverse string-author string-= e0
what annals of e0 article cited e1	SW.filter ( SW.filter entity-en.article string-venue string-= e0 ) string-cites string-= e1
who wrote the most articles	SW.countSuperlative entity-en.person string-max SW.reverse string-author entity-en.article
find an article published on or before e0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
name an article about e0 that has won an award	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-won_award
venues that have published the most articles	SW.countSuperlative entity-en.venue string-max SW.reverse string-venue entity-en.article
who has authored the least articles	SW.countSuperlative entity-en.person string-min SW.reverse string-author entity-en.article
article that mentions award winning e0 article	SW.filter ( SW.filter entity-en.article string-cites string-= e0 ) string-won_award
first published article	SW.superlative entity-en.article string-min SW.ensureNumericProperty string-publication_date
find an e0 article	SW.filter entity-en.article string-author string-= e0
who is the author of the two articles	SW.countComparative entity-en.person SW.reverse string-author string-= number2 entity-en.article
article that references one or two articles	SW.countComparative entity-en.article SW.reverse string-cites string-<= number2 entity-en.article
article authored by e0 and has the annals of e1 as its venue	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-venue string-= e1
find a venue with more than two articles in it	SW.countComparative entity-en.venue SW.reverse string-venue string-> number2 entity-en.article
what articles are written between d0 and d1	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-<= ( SW.ensureNumericEntity SW.concat )
what article is about e0	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-cites string-= e0 )
people who did not author e0	SW.filter entity-en.person SW.reverse string-author string-!= e0
what article has fewer than two venues	SW.countComparative entity-en.article string-venue string-< number2
which venue was venue for more than two articles publication	SW.countComparative entity-en.venue SW.reverse string-venue string-> number2 entity-en.article
what article exchanged citations with e0	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-cites string-= e0
article cited the fewest times	SW.countSuperlative entity-en.article string-min SW.reverse string-cites entity-en.article
name some articles that are not written by e0	SW.filter entity-en.article string-author string-!= e0
what article has the oldest publication date	SW.superlative entity-en.article string-min SW.ensureNumericProperty string-publication_date
name someone who has written no more than two articles	SW.countComparative entity-en.person SW.reverse string-author string-<= number2 entity-en.article
award winning article whose venue is annals of e0	SW.filter ( SW.filter entity-en.article string-venue string-= e0 ) string-won_award
article with venue anals of e0 that e1 cites	SW.filter ( SW.filter entity-en.article string-venue string-= e0 ) SW.reverse string-cites string-= e1
articles citing articles cited in e0	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
what is the date of the article	.size entity-en.article
what d0 article cites e0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) string-cites string-= e0
articles published contemporaneous to or before the e0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
article that has the largest publication date	SW.superlative entity-en.article string-max SW.ensureNumericProperty string-publication_date
articles in annals of e0 cited in e1	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e1 ) string-venue string-= e0
what is an article that does not cite e0	SW.filter entity-en.article SW.reverse string-cites string-!= e0
find the author of an award winning article	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-won_award )
articles published between d0 and d1	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-<= ( SW.ensureNumericEntity SW.concat )
what is an article cited in a publication about e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
article published in d0 or d1	SW.filter entity-en.article string-publication_date string-= SW.concat
author of two articles	SW.countComparative entity-en.person SW.reverse string-author string-= number2 entity-en.article
what article has less than two authors	SW.countComparative entity-en.article string-author string-< number2
articles cited by award winning articles	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-won_award )
what article cites other articles	SW.countComparative entity-en.article string-cites string-> number2 entity-en.article
which article was written by minimum number of authors	SW.countSuperlative entity-en.article string-min string-author
article written by e0 which e1 cites	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) SW.reverse string-cites string-= e1
find me an article with two or more venues	SW.countComparative entity-en.article string-venue string->= number2
which annals of e0 article cites e1	SW.filter ( SW.filter entity-en.article string-cites string-= e1 ) string-venue string-= e0
who has written more than two articles	SW.countComparative entity-en.person SW.reverse string-author string-> number2 entity-en.article
award winning article cited bymultivariate data analysis	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= en.article.multivariate_data_analysis ) string-won_award
articles that are cited by two articles	SW.countComparative entity-en.article SW.reverse string-cites string-= number2 entity-en.article
articles with three or more authors	SW.countComparative entity-en.article string-author string-> number2
publication date of e0	SW.getProperty e0 string-publication_date
venue of two articles	SW.countComparative entity-en.venue SW.reverse string-venue string-= number2 entity-en.article
article published in d0 that cites e0	SW.filter ( SW.filter entity-en.article string-cites string-= e0 ) string-publication_date string-= d0
article with two publishers	SW.countComparative entity-en.article string-venue string-= number2
articles that cite e0 in annals of e1	SW.filter ( SW.filter entity-en.article string-cites string-= e0 ) string-venue string-= e1
what article cites articles written by e0	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article string-author string-= e0 )
articles on e0	SW.filter entity-en.venue SW.reverse string-venue string-= e0
writers of fewer than two articles	SW.countComparative entity-en.person SW.reverse string-author string-< number2 entity-en.article
articles that cite more than two article	SW.countComparative entity-en.article SW.reverse string-cites string-> number2 entity-en.article
articles found in less than two publications	SW.countComparative entity-en.article string-venue string-< number2
what article was in the most venues	SW.countSuperlative entity-en.article string-max string-venue
article published in d0 and that cites e0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) string-cites string-= e0
what article did the article that cited e0 cite	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-cites string-= e0 )
article that cites the fewest articles	SW.countSuperlative entity-en.article string-min SW.reverse string-cites entity-en.article
what venue is about at least two articles	SW.countComparative entity-en.venue SW.reverse string-venue string->= number2 entity-en.article
name an article found in more than two venues	SW.countComparative entity-en.article string-venue string-> number2
article that does not cite e0	SW.filter entity-en.article SW.reverse string-cites string-!= e0
articles cited by e0 published in d1	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-publication_date string-= d1
what article has the same venue as e0	SW.filter entity-en.article string-venue string-= ( SW.filter entity-en.venue SW.reverse string-venue string-= e0 )
what e0 article has won an award	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-won_award
what author wrote an article that cities e0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-cites string-= e0 )
name the author whose article has its venue as annals of e0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-venue string-= e0 )
article that the least number of article cites	SW.countSuperlative entity-en.article string-min SW.reverse string-cites entity-en.article
which author did not write  e0	SW.filter entity-en.person SW.reverse string-author string-!= e0
articles cited by e0 that won awards	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-won_award
writers of two articles at most	SW.countComparative entity-en.person SW.reverse string-author string-<= number2 entity-en.article
all articles by e0	SW.filter entity-en.article string-author string-= e0
article that won an award and cites e0	SW.filter ( SW.filter entity-en.article string-cites string-= e0 ) string-won_award
what is the article with the oldest publication date	SW.superlative entity-en.article string-min SW.ensureNumericProperty string-publication_date
article that refernces a single article	SW.countComparative entity-en.article string-cites string->= number2 entity-en.article
who is the author of e0	SW.filter entity-en.person SW.reverse string-author string-= e0
articles that were written before d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-<= ( SW.ensureNumericEntity d0 )
articles that won awards cited by e0	SW.filter ( SW.filter entity-en.article string-won_award ) SW.reverse string-cites string-= e0
author with the most number of articles	SW.countSuperlative entity-en.person string-max SW.reverse string-author entity-en.article
find an article with the same venue as e0	SW.filter entity-en.article string-venue string-= SW.getProperty e0 string-venue
article with the venue as annals of e0	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article string-venue string-= e0 )
author of e0	SW.filter ( SW.filter entity-en.person SW.reverse string-author string-= e0 ) SW.reverse string-author string-= e0
what is an article written by e0	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-author string-= e0
article whose venue is annals of e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-venue string-= e0 )
articles cited by e0 and that won awards	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-won_award
either annals of e0 or e1	SW.concat
articles citing two articles	SW.countComparative entity-en.article string-cites string-= number2 entity-en.article
this article cites 2 other articles	SW.countComparative entity-en.article string-cites string-= number2 entity-en.article
person that is author of article that cites e0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-cites string-= e0 )
which article cites e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-cites string-= e0 )
articles cited by awardwinning articles	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-won_award )
find an article published before d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-< ( SW.ensureNumericEntity d0 )
which article is authored by e0 and has the annals of e1 as its venue	SW.filter ( SW.filter entity-en.article string-venue string-= e1 ) string-author string-= e0
articles that cite articles published in d0	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
articles published except in d0	SW.filter entity-en.article string-publication_date string-!= d0
which author wrote under two articles	SW.countComparative entity-en.person SW.reverse string-author string-< number2 entity-en.article
who has written the fewest articles	SW.countSuperlative entity-en.person string-min SW.reverse string-author entity-en.article
articles that cities maximum two articles	SW.countComparative entity-en.article string-cites string-<= number2 entity-en.article
what are some articles unrelated to annals of e0	SW.filter entity-en.article string-venue string-!= e0
what author wrote two articles	SW.countComparative entity-en.person SW.reverse string-author string-= number2 entity-en.article
who is the author of a e0	SW.filter ( SW.filter entity-en.person SW.reverse string-author string-= e0 ) SW.reverse string-author string-= e0
venue that is venue of article whose author is e0	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-author string-= e0 )
articles citing articles cited by e0	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
what author wrote the least number of articles	SW.countSuperlative entity-en.person string-min SW.reverse string-author entity-en.article
who authored two or fewer articles	SW.countComparative entity-en.person SW.reverse string-author string-<= number2 entity-en.article
writers who published in d0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
venues publishing the fewest articles	SW.countSuperlative entity-en.venue string-min SW.reverse string-venue entity-en.article
what venue has the most articles	SW.countSuperlative entity-en.venue string-max SW.reverse string-venue entity-en.article
what venue consists of e0	SW.getProperty e0 string-venue
name a person who has written two articles	SW.countComparative entity-en.person SW.reverse string-author string-= number2 entity-en.article
what article was cited by the award winning article	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-won_award )
what annals of e0 article was cited by e1	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e1 ) string-venue string-= e0
articles citing e0 written by e1	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-author string-= e1
article by more than two author	SW.countComparative entity-en.article string-author string-> number2
publication with the fewest articles	SW.countSuperlative entity-en.venue string-min SW.reverse string-venue entity-en.article
article that was awarded	SW.filter ( SW.filter entity-en.article string-won_award ) string-won_award
article citing more than two articles	SW.countComparative entity-en.article string-cites string-> number2 entity-en.article
articles published before d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-< ( SW.ensureNumericEntity d0 )
articles with more than two authors	SW.countComparative entity-en.article string-author string-> number2
name an article found in two venues	SW.countComparative entity-en.article string-venue string-= number2
what article cites an e0 article	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article string-author string-= e0 )
venue of article that e0 cites	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
what article has no less than two venues	SW.countComparative entity-en.article string-venue string->= number2
article cited by as well as cites e0	SW.filter ( SW.filter entity-en.article string-cites string-= e0 ) SW.reverse string-cites string-= e0
find a venue of an award winning article	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-won_award )
article that cites e0	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-cites string-= e0
which article cites e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-cites string-= e0 )
articles published in d0 and cited by e0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) SW.reverse string-cites string-= e0
who has coauthored articles with e0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-author string-= e0 )
author of at most two articles	SW.countComparative entity-en.person SW.reverse string-author string-<= number2 entity-en.article
article published in annals of e0	SW.filter ( SW.filter entity-en.article string-venue string-= e0 ) string-venue string-= e0
articles that mention three or more cities	SW.countComparative entity-en.article string-cites string-> number2 entity-en.article
what award winning article was written by e0	SW.filter ( SW.filter entity-en.article string-won_award ) string-author string-= e0
who is the author of the article that cites e0	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-author string-= en.person.efron
what article is written by e0 and won an award	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-won_award
which article does not cite e0	SW.filter entity-en.article SW.reverse string-cites string-!= e0
article published most recently	SW.superlative entity-en.article string-max SW.ensureNumericProperty string-publication_date
e0 venue	SW.getProperty e0 string-venue
article in less than two publications	SW.countComparative entity-en.article string-venue string-< number2
what article wasnt published in d0	SW.filter entity-en.article string-publication_date string-!= d0
find me an article that is in two venues	SW.countComparative entity-en.article string-venue string-= number2
venues that have published at least two articles	SW.countComparative entity-en.venue SW.reverse string-venue string->= number2 entity-en.article
article that references the least number of articles	SW.countSuperlative entity-en.article string-min string-cites entity-en.article
article cited two or fewer times	SW.countComparative entity-en.article SW.reverse string-cites string-<= number2 entity-en.article
venues with less than two articles	SW.countComparative entity-en.venue SW.reverse string-venue string-< number2 entity-en.article
article that cites two or fewer articles	SW.countComparative entity-en.article string-cites string-<= number2 entity-en.article
what article has the most authors	SW.countSuperlative entity-en.article string-max string-author
articles publised in d0 that won an award	SW.filter ( SW.filter entity-en.article string-won_award ) string-publication_date string-= d0
articles published after e0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
when was e0 published	SW.getProperty e0 string-publication_date
author of only one article	SW.countComparative entity-en.person SW.reverse string-author string-< number2 entity-en.article
what article is not cited in e0	SW.filter entity-en.article SW.reverse string-cites string-!= e0
author with at most two article	SW.countComparative entity-en.person SW.reverse string-author string-<= number2 entity-en.article
who is the other author for the article written by e0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-author string-= e0 )
find an additional author to an e0 article	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-author string-= e0 )
what articles are published in annals of e0 and in the year d1	SW.filter ( SW.filter entity-en.article string-venue string-= e0 ) string-publication_date string-= d1
writer of two articles	SW.countComparative entity-en.person SW.reverse string-author string-= number2 entity-en.article
articles published in two venues	SW.countComparative entity-en.article string-venue string-= number2
find an author of an article in annals of e0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-venue string-= e0 )
which article is mentioned in most number of articles	SW.countSuperlative entity-en.article string-max SW.reverse string-cites entity-en.article
what article cites an annals of e0 article	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-venue string-= e0 )
articles by e0 published in d1	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-publication_date string-= d1
writers of two articles	SW.countComparative entity-en.person SW.reverse string-author string-= number2 entity-en.article
what articles are published in e0	SW.filter entity-en.article SW.reverse string-cites string-= e0
publications with at least two articles	SW.countComparative entity-en.venue SW.reverse string-venue string->= number2 entity-en.article
award winning articles published in d0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) string-won_award
when was e0 published	SW.getProperty e0 string-publication_date
articles with more than two authors	SW.countComparative entity-en.article string-author string-> number2
what venue has under two articles	SW.countComparative entity-en.venue SW.reverse string-venue string-< number2 entity-en.article
articles published before d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-< ( SW.ensureNumericEntity d0 )
what article cites an award winning article	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article string-won_award )
who is the author of multivariate date analysis articles	SW.filter ( SW.filter entity-en.person SW.reverse string-author string-= en.article.multivariate_data_analysis ) SW.reverse string-author string-= en.article.multivariate_data_analysis
article that citesmultivariate data analysis by author e0	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= en.article.multivariate_data_analysis ) string-author string-= e0
what article has the most venues	SW.countSuperlative entity-en.article string-max string-venue
what article was published after d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-> ( SW.ensureNumericEntity d0 )
which author wrote two articles	SW.countComparative entity-en.person SW.reverse string-author string-= number2 entity-en.article
articles that cite two or fewer articles	SW.countComparative entity-en.article SW.reverse string-cites string-<= number2 entity-en.article
name someone who has written an article about e0	SW.filter ( SW.filter entity-en.person SW.reverse string-author string-= e0 ) SW.reverse string-author string-= e0
name an article not published in d0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
what is the venues number	.size entity-en.venue
article with two or more publishers	SW.countComparative entity-en.article string-venue string->= number2
what article has a publication date greater than that of e0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
article that cites e0 that is published in d1	SW.filter ( SW.filter entity-en.article string-cites string-= e0 ) string-publication_date string-= d1
what is the venue of the article published in d0	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
find an article making a citation of a d0 published article	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
name an article found in more than two publications	SW.countComparative entity-en.article string-venue string-> number2
article that does not reference e0	SW.filter entity-en.article string-cites string-!= e0
articles found in at most two publications	SW.countComparative entity-en.article string-venue string-<= number2
article that mentions one article	SW.countComparative entity-en.article string-cites string-< number2 entity-en.article
articles published in d0 citations	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
article publication of e0	SW.filter entity-en.article string-venue string-= ( SW.filter entity-en.venue SW.reverse string-venue string-= e0 )
which e0 article cites e1	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e1 ) string-author string-= e0
what articles cites two other articles	SW.countComparative entity-en.article SW.reverse string-cites string->= number2 entity-en.article
articles published before d0 or before d1	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-<= ( SW.ensureNumericEntity SW.concat )
what article has a venue of e0	SW.filter entity-en.article string-venue string-= SW.getProperty e0 string-venue
articles published in annals of e0 and cited by e1	SW.filter ( SW.filter entity-en.article string-venue string-= e0 ) SW.reverse string-cites string-= e1
journal that publishes the fewest number of articles	SW.countSuperlative entity-en.venue string-min SW.reverse string-venue entity-en.article
which article is mentioned in least number of other articles	SW.countSuperlative entity-en.article string-min SW.reverse string-cites entity-en.article
article with the maximum number of venues	SW.countSuperlative entity-en.article string-max string-venue
what author wrote about annals of e0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-venue string-= e0 )
what venue has articles published in d0	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
article by e0	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-author string-= e0
find an article in the annals of e0 venue	SW.filter entity-en.article string-venue string-= e0
what article discusses another article that won an award	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article string-won_award )
venues that have published at most two articles	SW.countComparative entity-en.venue SW.reverse string-venue string-<= number2 entity-en.article
articles written by e0 cites	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-author string-= e0 )
articles with fewest citations	SW.countSuperlative entity-en.article string-min string-cites entity-en.article
what award winning article was cited by e0	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-won_award
what articles are published in annals of e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-venue string-= e0 )
what is the venue of e0	SW.filter ( SW.filter entity-en.venue SW.reverse string-venue string-= e0 ) SW.reverse string-venue string-= e0
what award winning article was in annals of e0	SW.filter ( SW.filter entity-en.article string-venue string-= e0 ) string-won_award
venue of maximum two articles	SW.countComparative entity-en.venue SW.reverse string-venue string-<= number2 entity-en.article
articles citing e0 published in annals of e1	SW.filter ( SW.filter entity-en.article string-cites string-= e0 ) string-venue string-= e1
which venue has two articles maximum	SW.countComparative entity-en.venue SW.reverse string-venue string-<= number2 entity-en.article
articles that cite e0 and are cited in e0	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-cites string-= e0
articles cited by studies using e0	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) SW.reverse string-cites string-= e0
writer of articles cited by e0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
article that cites a single article	SW.countComparative entity-en.article SW.reverse string-cites string-< number2 entity-en.article
name a person who has authored fewer than two articles	SW.countComparative entity-en.person SW.reverse string-author string-< number2 entity-en.article
find an article with no more than two authors	SW.countComparative entity-en.article string-author string-<= number2
articles that won an award written by e0	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-won_award
award winning article published by annals of e0	SW.filter ( SW.filter entity-en.article string-venue string-= e0 ) string-won_award
what article cites the most number of other articles	SW.countSuperlative entity-en.article string-max string-cites entity-en.article
writers who didnt write e0	SW.filter entity-en.person SW.reverse string-author string-!= e0
article citing e0 published in d1	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-publication_date string-= d1
publications of e0	SW.getProperty e0 string-venue
venue of two article	SW.countComparative entity-en.venue SW.reverse string-venue string-= number2 entity-en.article
award winning article	SW.filter entity-en.article string-won_award
article that cite at least two articles	SW.countComparative entity-en.article string-cites string->= number2 entity-en.article
articles published in the fewest venues	SW.countSuperlative entity-en.article string-min string-venue
find an e0 article that cites e1	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-cites string-= e1
what article was in less than two venues	SW.countComparative entity-en.article string-venue string-< number2
an article citing e0	SW.filter ( SW.filter entity-en.article string-cites string-= e0 ) SW.reverse string-cites string-= e0
what journal is e0 published in	SW.getProperty e0 string-venue
articles that have a minimum of two authors	SW.countComparative entity-en.article string-author string->= number2
article cited by article which is published in d0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
find an article in annals of e0 that was published in d1	SW.filter ( SW.filter entity-en.article string-venue string-= e0 ) string-publication_date string-= d1
who wrote an article citing e0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
articles not written by e0	SW.filter entity-en.article string-author string-!= e0
article written by one author	SW.countComparative entity-en.article string-author string-< number2
who wrote e0	SW.getProperty e0 string-author
there are at least two venues in the article	SW.countComparative entity-en.article string-venue string->= number2
publications with articles authored by e0	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-author string-= e0 )
author of two articles	SW.countComparative entity-en.person SW.reverse string-author string-= number2 entity-en.article
earliest published article	SW.superlative entity-en.article string-min SW.ensureNumericProperty string-publication_date
which article was published  in more than two magazines	SW.countComparative entity-en.article string-venue string-> number2
article that cites e0 whose venue is annals of e1	SW.filter ( SW.filter entity-en.article string-cites string-= e0 ) string-venue string-= e1
article with the largest amount of authors	SW.countSuperlative entity-en.article string-max string-author
what venue has less than two articles	SW.countComparative entity-en.venue SW.reverse string-venue string-< number2 entity-en.article
what article is about annals of e0	SW.filter ( SW.filter entity-en.article string-venue string-= e0 ) string-venue string-= e0
article written by e0 that cites e1	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-cites string-= e1
articles written by two authors at most	SW.countComparative entity-en.article string-author string-<= number2
what venue is about the most number of articles	SW.countSuperlative entity-en.venue string-max SW.reverse string-venue entity-en.article
articles cited in articles by e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-author string-= e0 )
what article makes the most citations	SW.countSuperlative entity-en.article string-max string-cites entity-en.article
articles published in e0	SW.filter entity-en.article string-venue string-= SW.getProperty e0 string-venue
who wrote an article about city e0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
name an article with fewer than two authors	SW.countComparative entity-en.article string-author string-< number2
what article cites the fewest articles	SW.countSuperlative entity-en.article string-min string-cites entity-en.article
articles that cite e0	SW.filter ( SW.filter entity-en.article string-cites string-= e0 ) string-cites string-= e0
articles published in two or fewer venues	SW.countComparative entity-en.article string-venue string-<= number2
publications where articles by e0 can be found	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-author string-= e0 )
article on annals of e0 by e1	SW.filter ( SW.filter entity-en.article string-venue string-= e0 ) string-author string-= e1
venue with two article published	SW.countComparative entity-en.venue SW.reverse string-venue string-= number2 entity-en.article
article written by e0 and published in d1	SW.filter ( SW.filter entity-en.article string-publication_date string-= d1 ) string-author string-= e0
name a publication containing no more than two articles	SW.countComparative entity-en.venue SW.reverse string-venue string-<= number2 entity-en.article
what article sites only one other article	SW.countComparative entity-en.article string-cites string-< number2 entity-en.article
authors of multiple articles	SW.countSuperlative entity-en.person string-min SW.reverse string-author entity-en.article
article that cited e0 in annals of e1	SW.filter ( SW.filter entity-en.article string-venue string-= e1 ) string-cites string-= e0
what is the newest published article	SW.superlative entity-en.article string-max SW.ensureNumericProperty string-publication_date
articles authored by one	SW.countComparative entity-en.article string-author string-< number2
which articles cite two or fewer articles	SW.countComparative entity-en.article SW.reverse string-cites string-<= number2 entity-en.article
what article makes the fewest citations	SW.countSuperlative entity-en.article string-min SW.reverse string-cites entity-en.article
article that has the least number of author	SW.countSuperlative entity-en.article string-min string-author
article with the fewest authors	SW.countSuperlative entity-en.article string-min string-author
venues of two articles	SW.countComparative entity-en.venue SW.reverse string-venue string-= number2 entity-en.article
articles that do not cite e0	SW.filter entity-en.article string-cites string-!= e0
what is the earliest published article	SW.superlative entity-en.article string-min SW.ensureNumericProperty string-publication_date
find an article published in either d0 or d1	SW.filter entity-en.article string-publication_date string-= SW.concat
which articles cite less than two articles	SW.countComparative entity-en.article string-cites string-< number2 entity-en.article
articles with their publication dates between d0 and d1	SW.filter entity-en.article string-publication_date string-= SW.concat
articles written by e0 and published in the annals of e1	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-venue string-= e1
name an article produced by more than two authors	SW.countComparative entity-en.article string-author string-> number2
articles cited by articles published in d0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
venue that is venue of article that cites e0	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-cites string-= e0 )
venues of two articles	SW.countComparative entity-en.venue SW.reverse string-venue string-= number2 entity-en.article
articles that cite the most articles	SW.countSuperlative entity-en.article string-max string-cites entity-en.article
what article has a publication date earlier than d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-< ( SW.ensureNumericEntity d0 )
article citing awardwinning article	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-won_award )
what venue has two or less articles	SW.countComparative entity-en.venue SW.reverse string-venue string-<= number2 entity-en.article
articles that cite more than two articles	SW.countComparative entity-en.article string-cites string-> number2 entity-en.article
venue of two articles	SW.countComparative entity-en.venue SW.reverse string-venue string-= number2 entity-en.article
articles with fewer than two authors	SW.countComparative entity-en.article string-author string-< number2
what article written by e0 cites e1	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-cites string-= e1
what article cites less than two other articles	SW.countComparative entity-en.article SW.reverse string-cites string-< number2 entity-en.article
who authored e0	SW.getProperty e0 string-author
an article by e0 that cites e1	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) SW.reverse string-cites string-= e1
article that cites the least number of article	SW.countSuperlative entity-en.article string-min string-cites entity-en.article
what article is cited at least twice	SW.countComparative entity-en.article SW.reverse string-cites string->= number2 entity-en.article
what article was published before e0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
what article won an award	SW.filter entity-en.article string-won_award
which article  is written by less than two authors	SW.countComparative entity-en.article string-author string-< number2
which articles cite at least two articles	SW.countComparative entity-en.article string-cites string->= number2 entity-en.article
what article has a publication date greater than d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-> ( SW.ensureNumericEntity d0 )
what article cites e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-cites string-= e0 )
what article has a publication date the same as the date of e0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
articles that cite e0 published in d1	SW.filter ( SW.filter entity-en.article string-cites string-= e0 ) string-publication_date string-= d1
articles published in d0 or before	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-<= ( SW.ensureNumericEntity d0 )
author of two articles	SW.countComparative entity-en.person SW.reverse string-author string-= number2 entity-en.article
any article that cites another article published in annals of e0	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article string-venue string-= e0 )
articles that cite articles written by e0	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article string-author string-= e0 )
article that cites e0	SW.filter entity-en.article string-venue string-= SW.getProperty e0 string-venue
article that cites two or more articles	SW.countComparative entity-en.article string-cites string->= number2 entity-en.article
articles published in annals of e0 that cite e1	SW.filter ( SW.filter entity-en.article string-cites string-= e1 ) string-venue string-= e0
how many journals are there	.size entity-en.venue
articles that won an award published in annals of e0	SW.filter ( SW.filter entity-en.article string-won_award ) string-venue string-= e0
what article was cited the most	SW.countSuperlative entity-en.article string-max SW.reverse string-cites entity-en.article
find a venue of an article in annals of e0	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-venue string-= e0 )
author of more than two articles	SW.countComparative entity-en.person SW.reverse string-author string-> number2 entity-en.article
which articles author is e0	SW.filter entity-en.article string-author string-= e0
author of article cited by e0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
an article whose also authored e0	SW.filter entity-en.article string-author string-= SW.getProperty e0 string-author
find an article by e0	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-author string-= e0
article with publication date as d0 or d1	SW.concat
what article has a publication date of d0	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
what is the venue of an article that cites e0	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
awardwinning article by e0	SW.filter ( SW.filter entity-en.article string-won_award ) string-author string-= e0
articles published in more than two venues	SW.countComparative entity-en.article string-venue string-> number2
articles published in d0 and citing e0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) string-cites string-= e0
articles with one or two authors	SW.countComparative entity-en.article string-author string-<= number2
what venue can you find e0 in	SW.filter ( SW.filter entity-en.venue SW.reverse string-venue string-= e0 ) SW.reverse string-venue string-= e0
what article cites more than two other articles	SW.countComparative entity-en.article SW.reverse string-cites string-> number2 entity-en.article
name an article from d0 about e0	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-publication_date string-= d0
which articles cite more than two articles	SW.countComparative entity-en.article SW.reverse string-cites string-> number2 entity-en.article
name an article from the annals of e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-venue string-= e0 )
articles written by e0 and cited by e1	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) SW.reverse string-cites string-= e1
who is someone who has authored articles about e0	SW.filter ( SW.filter entity-en.person SW.reverse string-author string-= e0 ) SW.reverse string-author string-= e0
articles with less than two references	SW.countComparative entity-en.article string-cites string-< number2 entity-en.article
publications that have contained more than two articles	SW.countComparative entity-en.venue SW.reverse string-venue string-> number2 entity-en.article
articles published in two or more venues	SW.countComparative entity-en.article string-venue string->= number2
what is an article that has two venues	SW.countComparative entity-en.article string-venue string-= number2
articles citing articles cited by e0	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
awardwinning articles cited in e0	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-won_award
publications that do not publish e0	SW.filter entity-en.venue SW.reverse string-venue string-!= e0
writers who cited e0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-cites string-= e0 )
articles citing e0 published in annals of e1	SW.filter ( SW.filter entity-en.article string-cites string-= e0 ) string-venue string-= e1
when was e0 published	SW.getProperty e0 string-publication_date
which authors have written two or more articles	SW.countComparative entity-en.person SW.reverse string-author string->= number2 entity-en.article
name an article found in at least two publications	SW.countComparative entity-en.article string-venue string->= number2
name a publication with fewer than two articles	SW.countComparative entity-en.venue SW.reverse string-venue string-< number2 entity-en.article
articles with more than two venues	SW.countComparative entity-en.article string-venue string-> number2
what articles are written by authors of e0	SW.filter entity-en.article string-author string-= ( SW.filter entity-en.person SW.reverse string-author string-= e0 )
articles cited by the most articles	SW.countSuperlative entity-en.article string-max SW.reverse string-cites entity-en.article
articles not published in the annals of e0	SW.filter entity-en.article string-venue string-!= e0
what article from d0 cites e0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) string-cites string-= e0
what article has a publication date of 2003 and won an award	SW.filter ( SW.filter entity-en.article string-publication_date string-= date:2004:-1:-1 ) string-won_award
what article has two citations	SW.countComparative entity-en.article string-cites string-= number2 entity-en.article
article whose publication date is smaller than publication date of e0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
what article won an award and is about annals of e0	SW.filter ( SW.filter entity-en.article string-won_award ) string-venue string-= e0
article that has less than two venue	SW.countComparative entity-en.article string-venue string-< number2
what article was published in d0 or later	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string->= ( SW.ensureNumericEntity d0 )
articles published before e0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
articles written by e0 cited by e1	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) SW.reverse string-cites string-= e1
find an article that makes two or fewer citations	SW.countComparative entity-en.article string-cites string-<= number2 entity-en.article
what articles have under two authors	SW.countComparative entity-en.article string-author string-< number2
articles cited by articles in annals of e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-venue string-= e0 )
author of article citing e0	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article string-cites string-= e0 )
articles published on the same date as e0	SW.filter entity-en.article string-publication_date string-= SW.getProperty e0 string-publication_date
what article was written by e0 and discusses annals of e1	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-venue string-= e1
what article cites two other articles	SW.countComparative entity-en.article string-cites string-= number2 entity-en.article
article whose author is e0 and whose publication date is d1	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-publication_date string-= d1
article found in the most publications	SW.countSuperlative entity-en.article string-max string-venue
articles written by the e0 writer	SW.filter entity-en.article string-author string-= SW.getProperty e0 string-author
articles published in the same venue as e0	SW.filter entity-en.article string-venue string-= ( SW.filter entity-en.venue SW.reverse string-venue string-= e0 )
what article doesnt cite e0	SW.filter entity-en.article string-cites string-!= e0
what article cites e0 and is also its venue	SW.filter ( SW.filter entity-en.article string-venue string-= en.venue.annals_of_statistics ) string-cites string-= e0
which article cites the fewest articles	SW.countSuperlative entity-en.article string-min string-cites entity-en.article
what article was cited by a d0 article	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
article that cites e0	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
what author published an article in d0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
what article has been cited less than twice	SW.countComparative entity-en.article SW.reverse string-cites string-< number2 entity-en.article
name an article that is not about e0	SW.filter entity-en.article SW.reverse string-cites string-!= e0
articles citing articles published in d0	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
article whose venue is venue that is venue of e0	SW.filter entity-en.article string-venue string-= ( SW.filter entity-en.venue SW.reverse string-venue string-= e0 )
name an article citing e0	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) SW.reverse string-cites string-= e0
what venue has two or more articles	SW.countComparative entity-en.venue SW.reverse string-venue string->= number2 entity-en.article
articles cited by e0 and published in annals of e1	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-venue string-= e1
award winning articles cited by e0	SW.filter ( SW.filter entity-en.article string-won_award ) SW.reverse string-cites string-= e0
what e0 article cites e1	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) SW.reverse string-cites string-= e1
articles published in annals of e0 cited by e1	SW.filter ( SW.filter entity-en.article string-venue string-= e0 ) SW.reverse string-cites string-= e1
what article cites an article from annals of e0	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article string-venue string-= e0 )
find a venue that does not have e0	SW.filter entity-en.venue SW.reverse string-venue string-!= e0
article cited by award winning article	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-won_award )
articles published in or before d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-<= ( SW.ensureNumericEntity d0 )
which author has written the most articles	SW.countSuperlative entity-en.person string-max SW.reverse string-author entity-en.article
an article that e0 cites	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) SW.reverse string-cites string-= e0
article whose author is e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-author string-= e0 )
articles published in or before d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-<= ( SW.ensureNumericEntity d0 )
name an article about e0 by the author e1	SW.filter ( SW.filter entity-en.article string-author string-= e1 ) SW.reverse string-cites string-= e0
publisher of only one article	SW.countComparative entity-en.venue SW.reverse string-venue string-< number2 entity-en.article
what article is cited by an article in annals of e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-venue string-= e0 )
what article was published on or before d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-<= ( SW.ensureNumericEntity d0 )
what e0 city articles were published after d1	SW.filter ( SW.filter entity-en.article string-cites string-= e0 ) string-publication_date string-= d1
award winning article published by e0	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-won_award
articles published after e0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
article not in annals of e0	SW.filter entity-en.article string-venue string-!= e0
e0 cited articles	SW.filter entity-en.article string-cites string-= e0
articles with two authors	SW.countComparative entity-en.article string-author string-= number2
articles that mention two or more cities	SW.countComparative entity-en.article SW.reverse string-cites string->= number2 entity-en.article
journal that did not publish e0	SW.filter entity-en.venue SW.reverse string-venue string-!= e0
what is the venue of an article cited by e0	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
article written by e0 that references e1	SW.filter ( SW.filter entity-en.article string-cites string-= e1 ) string-author string-= e0
articles that does not cites e0	SW.filter entity-en.article SW.reverse string-cites string-!= e0
venue in most of the articles	SW.countSuperlative entity-en.venue string-max SW.reverse string-venue entity-en.article
article that has the same publication date as the e0 article	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
articles citing e0	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article string-author string-= e0 )
article by only one author	SW.countComparative entity-en.article string-author string-< number2
venues that have efrons article	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-author string-= en.person.efron )
what article has the least venues	SW.countSuperlative entity-en.article string-min string-venue
articles published before d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-< ( SW.ensureNumericEntity d0 )
venue of one or two articles	SW.countComparative entity-en.venue SW.reverse string-venue string-<= number2 entity-en.article
articles cited by e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-author string-= e0 )
which article that cites e0 won an award	SW.filter ( SW.filter entity-en.article string-won_award ) string-cites string-= e0
articles cited by award winning articles	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-won_award )
an article on e0 that cites e1	SW.filter ( SW.filter entity-en.article string-cites string-= e1 ) string-venue string-= e0
how many people	.size entity-en.person
articles with two authors	SW.countComparative entity-en.article string-author string-= number2
articles that have won an award	SW.filter entity-en.article string-won_award
author of only one article	SW.countComparative entity-en.person SW.reverse string-author string-< number2 entity-en.article
name an article with more than two authors	SW.countComparative entity-en.article string-author string-> number2
what article was written before the publication date of articles about e0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
what award winning article has annals of e0 as a venue	SW.filter ( SW.filter entity-en.article string-won_award ) string-venue string-= e0
article that cites article that e0 cites	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
author of article that cites e0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
name an article that won an award	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-won_award )
an article that won award cites another article	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-won_award )
what person wrote articles than won an award	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-won_award )
articles cited in annals of e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-venue string-= e0 )
articles published before d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-<= ( SW.ensureNumericEntity SW.concat )
article with two venues	SW.countComparative entity-en.article string-venue string-= number2
award winning article cited by e0	SW.filter ( SW.filter entity-en.article string-won_award ) SW.reverse string-cites string-= e0
articles not published in annals of e0	SW.filter entity-en.article string-venue string-!= e0
which article was published in d0 authored by e0	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) string-publication_date string-= d0
what article discusses annals of e0 and whose publication date was d1	SW.filter ( SW.filter entity-en.article string-venue string-= e0 ) string-publication_date string-= d1
name an article about e0 published in d1	SW.filter ( SW.filter entity-en.article string-cites string-= e0 ) string-publication_date string-= d1
what article has more authors than any other	SW.countSuperlative entity-en.article string-max string-author
what article did e0 write whose venue is annals of e1	SW.filter ( SW.filter entity-en.article string-venue string-= e1 ) string-author string-= e0
what venue has two articles	SW.countComparative entity-en.venue SW.reverse string-venue string-= number2 entity-en.article
what are some articles written by e0 or e1	SW.filter entity-en.article string-author string-= SW.concat
name an author of two articles	SW.countComparative entity-en.person SW.reverse string-author string-= number2 entity-en.article
who is the author of the article who won an award	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-won_award )
articles cited by two other articles	SW.countComparative entity-en.article SW.reverse string-cites string-= number2 entity-en.article
which article  that cites e0 was published on d1	SW.filter ( SW.filter entity-en.article string-publication_date string-= d1 ) string-cites string-= e0
articles written by e0 that have won an award	SW.filter ( SW.filter entity-en.article string-won_award ) string-author string-= e0
what author has written more than two articles	SW.countComparative entity-en.person SW.reverse string-author string-> number2 entity-en.article
article by e0 citing e1	SW.filter ( SW.filter entity-en.article string-author string-= e0 ) SW.reverse string-cites string-= e1
writers of two or fewer articles	SW.countComparative entity-en.person SW.reverse string-author string-<= number2 entity-en.article
publications that contains articles that are also published in annals of e0	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-venue string-= e0 )
authors of articles published in d0	SW.filter entity-en.person SW.reverse string-author string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
articles cited by articles published in annals of e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-venue string-= e0 )
what article in annals of e0 cites e1	SW.filter ( SW.filter entity-en.article string-cites string-= e1 ) string-venue string-= e0
which article was published in d0 at annals of e0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) string-venue string-= e0
articles published in d0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) string-publication_date string-= d0
what is the publication date of a e0 article	SW.getProperty e0 string-publication_date
article citing article published in annals of e0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-venue string-= e0 )
what article has two venues minimum	SW.countComparative entity-en.article string-venue string->= number2
article whose publication date is d0	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
name an article found in two or more venues	SW.countComparative entity-en.article string-venue string->= number2
what articles were written by e0	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-author string-= e0 )
what article has over two authors	SW.countComparative entity-en.article string-author string-> number2
articles published in d0 that cite e0	SW.filter ( SW.filter entity-en.article string-cites string-= e0 ) string-publication_date string-= d0
what article cites a d0 article	SW.filter entity-en.article SW.reverse string-cites string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
articles published in d0 that won awards	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) string-won_award
an article that cites e0 published in d1	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e0 ) string-publication_date string-= d1
article written by more than two authors	SW.countComparative entity-en.article string-author string-> number2
which author wrote two articles maximum	SW.countComparative entity-en.person SW.reverse string-author string-<= number2 entity-en.article
name a person who is the author of an article about e0	SW.filter ( SW.filter entity-en.person SW.reverse string-author string-= e0 ) SW.reverse string-author string-= e0
articles written by the writer of e0	SW.filter entity-en.article string-author string-= ( SW.filter entity-en.person SW.reverse string-author string-= e0 )
name an article published in d0 about e0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) string-cites string-= e0
article that has the least number of venue	SW.countSuperlative entity-en.article string-min string-venue
find an article published after e0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
articles not authored by e0	SW.filter entity-en.article string-author string-!= e0
articles published before the date of e0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
articles that have a publication date close to the date of e0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-publication_date  )
what article was published in d0	SW.filter ( SW.filter entity-en.article string-publication_date string-= d0 ) string-publication_date string-= d0
venues that published in d0	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article string-publication_date string-= d0 )
venues of articles cited by e0	SW.filter entity-en.venue SW.reverse string-venue string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
what article was written by e0 and cities e1	SW.filter ( SW.filter entity-en.article string-cites string-= e1 ) string-author string-= e0
name an article about e0	SW.filter entity-en.article string-cites string-= ( SW.filter entity-en.article SW.reverse string-cites string-= e0 )
articles written by the author of e0	SW.filter entity-en.article string-author string-= ( SW.filter entity-en.person SW.reverse string-author string-= e0 )
articles published in or after d0	SW.filter entity-en.article SW.ensureNumericProperty string-publication_date  string->= ( SW.ensureNumericEntity d0 )
what is an article in annals of e0 about e1	SW.filter ( SW.filter entity-en.article SW.reverse string-cites string-= e1 ) string-venue string-= e0
article cited more than twice	SW.countComparative entity-en.article SW.reverse string-cites string-> number2 entity-en.article
what player has the fewest allseason turnovers	SW.superlative var-s string-min SW.ensureNumericProperty string-num_turnovers  ( SW.domain string-player ) ) string-player
name those players with blocks to their credit that tally less than 3 or more than 3	SW.filter var-s string-num_blocks string-!= number3 block ( SW.domain string-player ) ) string-player
how many fouls were played by e0 after getting 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_fouls
who has played the same or less games than e0	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
what season did e0 only have 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-season
player who is not a los angleles laker	SW.filter var-s string-team string-!= en.team.lakers ( SW.domain string-player ) ) string-player
what players have more than 3 turnovers over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-> ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
how many assists did e0 get after scoring 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_assists
how many rebounds did e0 have after 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_rebounds
how many games in a season did e0 have 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_games_played
name those players with rebounds in any one season equalling less than 3	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-< ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
how many different positions are there	.size entity-en.position
player who has played minimum 3 games over a season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string->= ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
how many rebounds did e0 have this season	SW.getProperty string-player  string-num_rebounds
what player had at most 3 games allseason	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-<= ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
what player had 3 or more turnovers	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string->= ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
how many fouls does e0 have at e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_fouls
what player is the most versatile and plays the most number of positions	SW.countSuperlative var-s string-max string-position ( SW.domain string-player ) ) string-player
has e0 averaged 3 rebounds a season while playing for any team	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-team
how many turnovers e0 made in the season he played for e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_turnovers
how many steals did e0 make over the season	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_steals
player with not more than 3 rebounds over a season	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-<= ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
number of steals over a season of player e0 with 3 blocks over a season	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_steals
who has had less than 3 points this season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
how many blocks has e0 had as an e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_blocks
which player had no more than three blocks	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-<= ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
this is considered the season of player e0 with 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-season
which player is at e0 or e1 position	SW.filter var-s string-position string-= SW.concat ( SW.domain string-player ) ) string-player
how many blocks did e0 have when he had 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_blocks
in how many seasons has e0 given up exactly 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_turnovers
player with most turnovers over a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_turnovers  ( SW.domain string-player ) ) string-player
which position did e0 play in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-position
name the season during which e0 committed 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_fouls
name the player with lesser steals than player e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
team of player e0 who has 3 fouls over a season	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-team
how many steals did e0 e1 have over the season	SW.getProperty ( SW.filter SW.getProperty e1 SW.reverse string-player  string-position string-= e0 ) string-num_steals
what season did e0 have 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-season
how many blocks with steal over 3 did e0 play in one season	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_blocks
who has 3 or less fouls	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-<= ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
e0 bryans assists for the season he had 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_assists
which player has the same number of rebounds in any one season as e0	SW.filter var-s string-num_rebounds string-= ( SW.getProperty string-player  string-num_rebounds ) ( SW.domain string-player ) ) string-player
find players who have point scores for any one season of no more than 3	SW.filter var-s SW.ensureNumericProperty string-num_points  string-<= ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
number of assists over a season of player e0 whose team is e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_assists
how many positions	.size entity-en.position
how many assists did e0 have in the games where he had three fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_assists
for the season in which he had 3 blocks to his credit how many steals were attributable to e0	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_steals
whos got the least turnovers so far this season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_turnovers  ( SW.domain string-player ) ) string-player
note those players with a total number of blocks in any one season that is more than the total number of blocks in any one season acquired by e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
what player has had more or less fouls than 3 over a season	SW.filter var-s string-num_fouls string-!= number3 foul ( SW.domain string-player ) ) string-player
how many points did e0 score over the season in which he played 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_points
which player has more points per season than e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
players with a total number of steals in a season that is equal to the lowest number of steals in a season for e0	SW.filter var-s SW.ensureNumericProperty string-num_steals  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
who has played the least amount of games	SW.superlative var-s string-min SW.ensureNumericProperty string-num_games_played  ( SW.domain string-player ) ) string-player
find players responsible for the same amount of assists in any one specific season as e0	SW.filter var-s string-num_assists string-= ( SW.getProperty string-player  string-num_assists ) ( SW.domain string-player ) ) string-player
what team did e0 play for	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-team
what player had the most blocks this season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_blocks  ( SW.domain string-player ) ) string-player
who plays on the same team as e0	SW.filter var-s string-team string-= ( SW.getProperty string-player  string-team ) ( SW.domain string-player ) ) string-player
name a player who had the same number of steals as e0	SW.filter var-s string-num_steals string-= ( SW.getProperty string-player  string-num_steals ) ( SW.domain string-player ) ) string-player
which player has played the minimum number of games	SW.superlative var-s string-min SW.ensureNumericProperty string-num_games_played  ( SW.domain string-player ) ) string-player
number of blocks over a season of player e0 with 3 turnovers over a season	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_blocks
number of rebounds over a season of player e0 from e1 team	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_rebounds
how many turnovers did e0 give up during the d1 regular season	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_turnovers
name a player with less than 3 assists per season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-< ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
what player had less than 3 turnovers	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-< ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
what position does e0 play	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-position
how many games will e0 play this coming season	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_games_played
find those players who have participated in less or more than 3 games in a given season	SW.filter var-s string-num_games_played string-!= number3 game ( SW.domain string-player ) ) string-player
during the d0 season how many turnovers did e0 acquire	SW.getProperty ( SW.filter string-player  string-season string-= d0 ) string-num_turnovers
how many turnoves has e0 given up in seasons with more than 3 on duty games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_turnovers
player that had more rebounds than e0 this season	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
what position was e0 in when he made 3 fouls in a season	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-position
how many fouls has e0 averaged per season as a laker	SW.getProperty ( SW.filter string-player  string-team string-= en.team.lakers ) string-num_fouls
what player had more than 3 assists	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-> ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
during d0 how many fouls did e0 get against him	SW.getProperty ( SW.filter string-player  string-season string-= d0 ) string-num_fouls
number of assists over a season of player e0 whoplayed 3 games over a season	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_assists
name the number of assists attributable to e0 during a season	SW.getProperty string-player  string-num_assists
which players are on the same team as e0	SW.filter var-s string-team string-= ( SW.getProperty string-player  string-team ) ( SW.domain string-player ) ) string-player
which player had no more than three turnovers	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-<= ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
who has had the same or less steals than e0	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
how many steals did e0 have	SW.getProperty string-player  string-num_steals
how many steals does e0 get in a season	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_steals
which is the team of e0 who had 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-team
how many fouls did e0 have when he had 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_fouls
as a laker how many steals has e0 averaged per season	SW.getProperty ( SW.filter string-player  string-team string-= en.team.lakers ) string-num_steals
either e0 or e1	SW.concat
what is the position of e0 in the season he played 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-position
which player has the minimum number of fouls	SW.superlative var-s string-min SW.ensureNumericProperty string-num_fouls  ( SW.domain string-player ) ) string-player
whos a player with less points per season than e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
what position e0 played in the season he made 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-position
how many rebounds did e0 player e1 have	SW.getProperty ( SW.filter SW.getProperty e1 SW.reverse string-player  string-team string-= e0 ) string-num_rebounds
what was the position of e0	SW.filter var-s string-position string-= ( SW.getProperty string-player  string-position ) ( SW.domain string-player ) ) string-player
in the same season in which e0 had 3 rebounds what was the number of turnovers that he had	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_turnovers
name a player with no more than three rebounds in the season	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-<= ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
what player had the same or more rebounds as e0	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
number of seasons where e0 had three fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_fouls
number of steals over a season of player e0 who has 3 played games over a season	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_steals
what player has fewer turnovers than e0 in a season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
player who plays position e0 or e1	SW.concat
who has had more or less than 3 fouls	SW.filter var-s string-num_fouls string-!= number3 foul ( SW.domain string-player ) ) string-player
which players arent point guards	SW.filter var-s string-position string-!= en.position.point_guard ( SW.domain string-player ) ) string-player
how many turnovers has e0 had over all seasons	SW.getProperty string-player  string-num_turnovers
which player has at least as many points in a season as e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
what player scored more than 3 points	SW.filter var-s SW.ensureNumericProperty string-num_points  string-> ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
who has had more or equal number of rebounds than e0	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
how many blocks has e0 had	SW.getProperty string-player  string-num_blocks
who are the players with foul totals equivalent in any one season to that of e0 in any one season	SW.filter var-s string-num_fouls string-= ( SW.getProperty string-player  string-num_fouls ) ( SW.domain string-player ) ) string-player
what team was e0 on when he played less than three games in a season	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-team
how many turnovers e0 made in the season he made 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_turnovers
players that had the lowest number of assists in a season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_assists  ( SW.domain string-player ) ) string-player
what position did e0 play when his all season points equaled 3	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-position
how many games has e0 played	SW.getProperty ( SW.filter string-player  string-season string-= date:2004:-1:-1 ) string-num_games_played
team of player e0	SW.getProperty string-player  string-team
which player has played for the fewest teams	SW.countSuperlative var-s string-min string-team ( SW.domain string-player ) ) string-player
players that had the least amount of turnovers in a season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_turnovers  ( SW.domain string-player ) ) string-player
who has played more games in a season than e0	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
how many turnovers did e0 have over the season for the la e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_turnovers
name the player that represented most teams	SW.countSuperlative var-s string-max string-team ( SW.domain string-player ) ) string-player
who had less than or equal to 3 points	SW.filter var-s SW.ensureNumericProperty string-num_points  string-<= ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
which players have made fewer assists than e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
what player has more than 3 rebounds in every season	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-> ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
which player has not played 3 fouls	SW.filter var-s string-num_fouls string-!= number3 foul ( SW.domain string-player ) ) string-player
what player played less than 3 games	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-< ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
what player played in more games over a season than e0	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
find the player responsible for the biggest number of steals in any one season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_steals  ( SW.domain string-player ) ) string-player
how many turn overs e0 made over a season	SW.getProperty string-player  string-num_turnovers
in what position was e0 able to get 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-position
how many rebounds does e0 have a season with 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_rebounds
how many turnovers does e0 average over a reason	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-team
what player played in d0 or d1	SW.filter var-s string-season string-= SW.concat ( SW.domain string-player ) ) string-player
players who had more than three assists in a season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-> ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
which year did e0 play in three games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-season
what was the total number of assists over a season for e0 playing e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_assists
what players have as many rebounds as e0 over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
how many blocks did e0 make during the season	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_blocks
what player had did not have 3 turnovers	SW.filter var-s string-num_turnovers string-!= number3 turnover ( SW.domain string-player ) ) string-player
who has had less turnovers than e0	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
season of player e0 who has 3 turnovers over a season	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-season
teams e0 plays for	SW.getProperty string-player  string-team
which player has played the greatest number of positions	SW.countSuperlative var-s string-max string-position ( SW.domain string-player ) ) string-player
how many blocks did e0 have over  the season	SW.getProperty string-player  string-num_blocks
which was the season e0 made 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-season
which player gets as many assists as e0 if not more	SW.filter var-s SW.ensureNumericProperty string-num_assists  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
during the season he scored he 3 points what was the number of fouls e0 was responsible for	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_fouls
what player made least points	SW.superlative var-s string-min SW.ensureNumericProperty string-num_points  ( SW.domain string-player ) ) string-player
how many games did e0 play as point guart during a season	SW.getProperty ( SW.filter string-player  string-position string-= en.position.point_guard ) string-num_games_played
how many assists did e0 have when he had 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_assists
either d0 or d1	SW.concat
name the player with the total number of assists equalling less than 3	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-< ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
which player has made a minimum of 3 blocks	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string->= ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
when e0 had 3 allseason turnovers how many allseason points did he have	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_points
how many points did e0 have on the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_points
which players played the most games in a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_games_played  ( SW.domain string-player ) ) string-player
player with smallest number of assists over a season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_assists  ( SW.domain string-player ) ) string-player
position of player e0 who has 3 points over a season	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-position
how many assists e0 made in the season in which he made 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_assists
who has played fewer than 3 games so far this season	SW.filter var-s string-num_games_played string-!= number3 game ( SW.domain string-player ) ) string-player
players whose number of turnovers in a season is no more than that of e0 byrant	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
player whose number of fouls over a season is less than that of player e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
what position does e0 play when hes got exactly 3 assists in a season	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-position
how many rebounds did kboe bryant have when he had 3 points	SW.getProperty ( SW.filter SW.getProperty en.player.kobe_bryant SW.reverse string-player  string-num_points string-= number3 point ) string-num_rebounds
what player had equal or more fouls as e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
what players have played for fewer than two teams	SW.countComparative var-s string-team string-< number2 ( SW.domain string-player ) ) string-player
player with fouls over a season not more than fouls over a season of player e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
how many games did e0 play during a season	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_games_played
who has fewer steals per season on average than e0	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
who has at least as many assists as e0 over a season	SW.filter var-s string-num_assists string-= ( SW.getProperty string-player  string-num_assists ) ( SW.domain string-player ) ) string-player
who has equal to or more than 3 turnovers	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string->= ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
how many all season rebounds did e0 have	SW.getProperty string-player  string-num_rebounds
how many three point assists does e0 have in a season	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_assists
which player has the most twos by position	SW.countComparative var-s string-position string-<= number2 ( SW.domain string-player ) ) string-player
how many fouls in a single season did e0 have that is greater than three assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_steals
which players made at 13 rebounds over the season	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-<= ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
who has at most 3 assists total in a season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-<= ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
how many blocks e0 made over a season in which he made 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_blocks
how many all season steals did e0 have in 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_steals
what player made 3 blocks over a season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string->= ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
who is someone with less than 3 blocks in a season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-< ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
player with more played games in a season than e0	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
what players had more than three fouls per game over the season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-> ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
who is better e0 or e1	SW.concat
how many assists has e0 had	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_assists
what player has a maximum of 3 allseason turnovers	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-<= ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
player with more rebounds over a season than that of player e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
who has more rebounds than e0	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
how many fouls in a season has e0 e1 had	SW.getProperty ( SW.filter SW.getProperty e1 SW.reverse string-player  string-position string-= e0 ) string-num_fouls
who has had more or equal to 3 fouls	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string->= ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
name the player who did not have three fouls in the season	SW.filter var-s string-num_fouls string-!= number3 foul ( SW.domain string-player ) ) string-player
which player has had the most rebounds in a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_rebounds  ( SW.domain string-player ) ) string-player
how many fouls did e0 have allseason	SW.getProperty string-player  string-num_fouls
find the player with assists to his credit for any one season  tallying more than the total number of assists performed by e0 in any one season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
how many steals did e0 have in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_steals
what players play e0 or e1	SW.filter var-s string-position string-= SW.concat ( SW.domain string-player ) ) string-player
e0 playing position	SW.getProperty string-player  string-position
for which team did e0 play three games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-team
what e0 players had more points than e1	SW.getProperty ( SW.filter SW.getProperty e1 SW.reverse string-player  string-position string-= e0 ) string-num_points
which players have the same position as e0	SW.filter var-s string-position string-= ( SW.getProperty string-player  string-position ) ( SW.domain string-player ) ) string-player
which players had fewer than 3 turnovers in a season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-< ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
name a player who had a point score that was not three	SW.filter var-s string-num_points string-!= number3 point ( SW.domain string-player ) ) string-player
what player didnt play 3 games	SW.filter var-s string-num_games_played string-!= number3 game ( SW.domain string-player ) ) string-player
how many rebounds has e0 made so far this season	SW.getProperty string-player  string-num_rebounds
player with more points over a season than that of player e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
players with a total number of rebounds in a season greater than three	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string->= ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
how many games has e0 played	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_games_played
how many steals did e0 make in seasons where he made 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_steals
player with smallest number of fouls over a season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_fouls  ( SW.domain string-player ) ) string-player
what number is e0 and how many assists does he have	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-team
how many fouls does e0 take in an average season	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_fouls
which is the season e0 made 3 fouls	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-season
what team did e0 play for during the season he average three blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-team
what year did e0 have exactly 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-season
name a player who had at least three fouls in the season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string->= ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
who has played 3 or more games	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string->= ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
how many games did e0 get 3 fouls in	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_games_played
what player had more than 3 rebounds	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-> ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
for season d0 note the number of total assists of e0	SW.getProperty ( SW.filter string-player  string-season string-= d0 ) string-num_assists
how many points did e0 score as e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_points
which player has the maximum number of steals	SW.superlative var-s string-max SW.ensureNumericProperty string-num_steals  ( SW.domain string-player ) ) string-player
e0 roster	SW.getProperty ( SW.filter SW.getProperty en.player.kobe_bryant SW.reverse string-player  string-team string-= e0 ) string-team
what player plays the most positions	SW.countSuperlative var-s string-max string-position ( SW.domain string-player ) ) string-player
how many blocks has e0 made in seasons with exactly 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_blocks
number of played games over a season of player e0 who has 3 steals over a season	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_games_played
how many fouls e0 made in the season in which he made 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_fouls
position of player e0 from e1 team	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-position
name those players with point tallies in any one season either less than or more than 3	SW.filter var-s string-num_points string-!= number3 point ( SW.domain string-player ) ) string-player
how many turnovers does e0 have in a season he has 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_turnovers
how many assists did e0 make in a season of 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_assists
how many blocks does e0 average in a given season	SW.getProperty string-player  string-num_blocks
how many assists does e0 manage in seasons limited to 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_assists
how  many rebounds in a season did e0 have in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_rebounds
how many fouls in a season did the e0 e1 commit	SW.getProperty ( SW.filter SW.getProperty e1 SW.reverse string-player  string-team string-= e0 ) string-num_fouls
what player had more fouls than e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
which season was e0	SW.getProperty string-player  string-season
which player doesnt have 3 assists	SW.filter var-s string-num_assists string-!= number3 assist ( SW.domain string-player ) ) string-player
how many points did e0 score during the season	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_points
player whose fouls are not 3 over a season	SW.filter var-s string-num_fouls string-!= number3 foul ( SW.domain string-player ) ) string-player
number of turnovers over a season of player e0 who has 3 turnovers over a season	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_turnovers
player with more steals over a season than that of player e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
how many all season rebounds did e0 have as e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_rebounds
players with the most steals in a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_steals  ( SW.domain string-player ) ) string-player
what was the total number of blocks in a season for e0 when he had three assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_blocks
how many teams are in the nba	.size entity-en.team
player whose number of fouls over a season is same as that of player e0 over a season	SW.filter var-s string-num_fouls string-= ( SW.getProperty string-player  string-num_fouls ) ( SW.domain string-player ) ) string-player
players that have the least amount of fouls in a season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_fouls  ( SW.domain string-player ) ) string-player
what was the total number of games played by e0 in a season	SW.getProperty string-player  string-num_games_played
name players who are not in e0	SW.filter var-s string-team string-!= e0 ( SW.domain string-player ) ) string-player
who has gotten 3 or less blocks	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-<= ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
a player that has played for no more than two teams	SW.countComparative var-s string-team string-<= number2 ( SW.domain string-player ) ) string-player
which team did e0 play for when he had only three rebounds in a season	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-team
players that had were outrebounded by	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-< ( SW.ensureNumericEntity ( SW.getProperty SW.getProperty en.player.kobe_bryant SW.reverse string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
player whose number of points over a season is not less  than that of player e0 bryantover a season	SW.filter var-s SW.ensureNumericProperty string-num_points  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
which player has played the most positions	SW.countSuperlative var-s string-max string-position ( SW.domain string-player ) ) string-player
who has had the same or more steals as e0	SW.filter var-s SW.ensureNumericProperty string-num_steals  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
whos got the same number of fouls as e0 each season theyve played	SW.filter var-s string-num_fouls string-= ( SW.getProperty string-player  string-num_fouls ) ( SW.domain string-player ) ) string-player
how many rebounds did e0 who had three steals have	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_rebounds
what player made more than 3 block over a season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-> ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
how many season did e0 have no more than three assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_assists
how many 3point games did e0 play allseason	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_games_played
which player has played the fewest positions	SW.countSuperlative var-s string-min string-position ( SW.domain string-player ) ) string-player
which player had fewer points in the season than e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
what player had the least assists this season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_assists  ( SW.domain string-player ) ) string-player
did e0 play in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-season
what players have been on the most teams	SW.countSuperlative var-s string-max string-team ( SW.domain string-player ) ) string-player
player whose number of rebounds over a season are not more than rebounds over a season of player e0	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
find those players responsible for less than 3 points in any given season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
which player has the least position	SW.countSuperlative var-s string-min string-position ( SW.domain string-player ) ) string-player
who had the most steals	SW.superlative var-s string-max SW.ensureNumericProperty string-num_steals  ( SW.domain string-player ) ) string-player
how many points did e0 who had three turnovers have	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_points
which players have played two or fewer positions	SW.countComparative var-s string-position string-<= number2 ( SW.domain string-player ) ) string-player
which player has played as any fouls as e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
which player had no more than three assists during the season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-<= ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
how any steals did e0 get	SW.getProperty string-player  string-num_steals
which season did e0 average over 3 steals a game	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-season
what player plays either e0 or e1	SW.filter var-s string-position string-= SW.concat ( SW.domain string-player ) ) string-player
how many blocks e0 made over a season in which he made 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_blocks
players that have the same number of rebounds as e0 over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
which players score at least 3 points per season	SW.filter var-s SW.ensureNumericProperty string-num_points  string->= ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
name a player with more than three turnovers in the season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-> ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
what player has had points more or less than 3	SW.filter var-s string-num_points string-!= number3 point ( SW.domain string-player ) ) string-player
who has more than 3 turnovers this season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-< ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
name a player with the same number of blocks as e0	SW.filter var-s string-num_blocks string-= ( SW.getProperty string-player  string-num_blocks ) ( SW.domain string-player ) ) string-player
what is the position of e0 in e1 team	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-position
name a player who played at least as many games as e0	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
which player has the minimum number of steals of e0	SW.filter var-s SW.ensureNumericProperty string-num_steals  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
how many blocks does e0 average in a season with 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_blocks
what is the number of rebounds by e0 over the season	SW.getProperty string-player  string-num_rebounds
how many seasons has e0 played for the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-season
how many games e0 played over a season in which he made 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_games_played
how many assists did e0 have this season	SW.getProperty string-player  string-num_assists
which season e0 made 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-season
name the position of e0 when he made three rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-position
what player was on the most teams	SW.countSuperlative var-s string-max string-team ( SW.domain string-player ) ) string-player
what players have had the same or more blocks than e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
what player had more than 3 steals	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-> ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
how many blocks did e0 have when he had three assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_blocks
what player has at least as many all season points as e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
how many games did e0 have three turnovers over the season	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_games_played
what player has fewer per season assists than  e0 e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
players with less than three fouls in a season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-< ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
find the player who made the same or a lesser number of assists in the same season as e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
e0 made 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_blocks
how many turnovers did e0 have when he had 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_turnovers
koby bryant position	SW.getProperty SW.getProperty en.player.kobe_bryant SW.reverse string-player  string-position
who has the record for fewest steals in a season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_steals  ( SW.domain string-player ) ) string-player
which player has made the maximum number of blocks	SW.superlative var-s string-max SW.ensureNumericProperty string-num_blocks  ( SW.domain string-player ) ) string-player
how many rebounds did e0 get after playing 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_rebounds
which player has no more than three steals	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-<= ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
player who has minimum number of teams	SW.countSuperlative var-s string-min string-team ( SW.domain string-player ) ) string-player
what players had the same games played than e0 over all seasons	SW.filter var-s string-num_games_played string-= ( SW.getProperty string-player  string-num_games_played ) ( SW.domain string-player ) ) string-player
who made turnovers same as the least turnovers made by e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
player whose number of assists over a season is same as that of player e0 over a season	SW.filter var-s string-num_assists string-= ( SW.getProperty string-player  string-num_assists ) ( SW.domain string-player ) ) string-player
what is the number of the player in this position	.size entity-en.position
which team did e0 make three blocks for	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-team
which player played fewer than three games	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-< ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
during the season e0 committed 3 steals how many fouls did he have	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_fouls
name a player with fewer than three blocks per season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-< ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
who has had more than 3 rebounds	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-> ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
in how many games did e0 get3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_games_played
player whose number of blocks over a season is less than that of player e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
which player as less than 3 assists	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-< ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
which player has scored less than three points	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
how many points did e0 score in three played games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_points
find the player with the highest score of assists performed in any one given season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_assists  ( SW.domain string-player ) ) string-player
what position did e0 play when he made three assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-position
what player has played more or less than 3 games	SW.filter var-s string-num_games_played string-!= number3 game ( SW.domain string-player ) ) string-player
what player had more blocks all season than e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
player who has less than 3 assists over a season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-< ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
which player has had the most steals per season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_steals  ( SW.domain string-player ) ) string-player
number of turnovers over a season of player e0 from team e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_turnovers
what is the number of games played by e0 whose team is e1 over the season	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_games_played
find those players who have game time in no more than 3 games in a given season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-<= ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
number of fouls over a season of player e0 who has played 3 games over a season	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_fouls
who has played more than 3 games in a season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-> ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
player whose number of turnovers over a season is same as that of player e0 over a season	SW.filter var-s string-num_turnovers string-= ( SW.getProperty string-player  string-num_turnovers ) ( SW.domain string-player ) ) string-player
which player played more number of games over a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_games_played  ( SW.domain string-player ) ) string-player
what is the number of positions	.size entity-en.position
what is the number of the player e0	.size entity-en.player
which players did not play in d0	SW.filter var-s string-season string-!= d0 ( SW.domain string-player ) ) string-player
name a player who assists over a single season is at least the same as e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
how many games did e0 play in the d1 season	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_games_played
how many fouls in a season did e0 have	SW.getProperty ( SW.filter string-player  string-position string-= en.position.point_guard ) string-num_fouls
how many steals did e0 get in 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_steals
position of player e0 from d1 season	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-position
whos got the lead for fouls in a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_fouls  ( SW.domain string-player ) ) string-player
name players with a single position	SW.countComparative var-s string-position string-< number2 ( SW.domain string-player ) ) string-player
what team has e0 played e1 for	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-team
name the player with fewer than three assists	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-< ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
player with lowest jersey number	SW.countSuperlative var-s string-min string-team ( SW.domain string-player ) ) string-player
what player had the same or less fouls as e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
players with a total amount of blocks in a season equal to the most blocks in a season for e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
which player has  played lesser than 3 fouls	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-< ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
how many blocks were made by e0 who belonged to the e1 team	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_blocks
how many blocks did e0 have during the 04 season	SW.getProperty ( SW.filter string-player  string-season string-= date:2004:-1:-1 ) string-num_blocks
player with not more than 3 blocks over a season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-<= ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
which team did e0 play for with three assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-team
what player had equal or fewer assists than e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
number of points over a season of player e0 from season d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_points
what player played more than 3 games	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-> ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
what player has no fewer allseason steals than e0	SW.filter var-s SW.ensureNumericProperty string-num_steals  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
during his e0 season how many rebounds did e1 have	SW.getProperty ( SW.filter SW.getProperty e1 SW.reverse string-player  string-team string-= e0 ) string-num_rebounds
which player has the same position as e0	SW.filter var-s string-position string-= ( SW.getProperty string-player  string-position ) ( SW.domain string-player ) ) string-player
player whose number of turnovers over a season is more than that of player e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
who has had more or less than 3 steals	SW.filter var-s string-num_steals string-!= number3 steal ( SW.domain string-player ) ) string-player
number of turnovers over a season of player e0 from season d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_turnovers
how many points did e0 score in the season that he had three steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_points
how many season games did e0 play as an e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_games_played
how many rebounds e0 made over a season in which he made 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_rebounds
players that have more than three steals over a season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-> ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
what players have played at most two positions	SW.countComparative var-s string-position string-<= number2 ( SW.domain string-player ) ) string-player
how many fouls did e0 have in the season he played point gaurd	SW.getProperty ( SW.filter string-player  string-position string-= en.position.point_guard ) string-num_fouls
find a player with 3 or less blocks in any given season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-<= ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
in which season was it that e0 participated in 3 games total	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-season
during the season in which he scored 3 points name the number of rebounds he was responsible for e0	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_rebounds
how many fouls does e0 over all seasons	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_fouls
who has had the same or more fouls as e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
players that have the same number of fouls as e0 over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
fouls by e0 in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_fouls
who had the least steals	SW.superlative var-s string-min SW.ensureNumericProperty string-num_steals  ( SW.domain string-player ) ) string-player
whats the name of a player with less turnovers per season than e0	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
what team did e0 play for when he had 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-team
how many points does e0 get per season	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_points
who has had the same amount of assists as e0	SW.filter var-s string-num_assists string-= ( SW.getProperty string-player  string-num_assists ) ( SW.domain string-player ) ) string-player
which team did e0 play as e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-team
what position is e0	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-position
name a player who did not have exactly three assists in any given season	SW.filter var-s string-num_assists string-!= number3 assist ( SW.domain string-player ) ) string-player
what players all season assists totaled over 3	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-> ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
in which season did e0 participate in 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_games_played
what players have had the same number of turnovers as e0	SW.filter var-s string-num_turnovers string-= ( SW.getProperty string-player  string-num_turnovers ) ( SW.domain string-player ) ) string-player
fouls by e0 over all seasons with 3 games played	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_fouls
which player had the fewest rebounds in one season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_rebounds  ( SW.domain string-player ) ) string-player
what player had 3 or less turnovers	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-<= ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
what player had the most turnovers	SW.superlative var-s string-max SW.ensureNumericProperty string-num_turnovers  ( SW.domain string-player ) ) string-player
during his season as e0 how many blocks did e1 perform	SW.getProperty ( SW.filter SW.getProperty e1 SW.reverse string-player  string-position string-= e0 ) string-num_blocks
what was the total number of assists in seasons where e0 had just three points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_assists
what position does e0 play in his best scoring seasons	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-position
players who had a greater number of assists in a season than e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
how many turnovers has e0 had	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_turnovers
how many turnovers did e0 have in a season he had 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_turnovers
which player has less then two positions	SW.countComparative var-s string-position string-< number2 ( SW.domain string-player ) ) string-player
what was the total number of assists in all seasons for player e0 when he was with the lose angeles e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_assists
what season did e0 score 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-season
which player had as many rebounds as e0 in a season	SW.filter var-s string-num_rebounds string-= ( SW.getProperty string-player  string-num_rebounds ) ( SW.domain string-player ) ) string-player
what player has less rebounds than e0	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
which player had at least 3 turnovers in a season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string->= ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
e0 team when he had 3 rebounds for the season	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-team
number of steals over a season of player e0 with 3 fouls over a season	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_steals
how many blocks as e0 e1 made	SW.getProperty ( SW.filter SW.getProperty e1 SW.reverse string-player  string-position string-= e0 ) string-num_blocks
how many steals did e0 have when he had 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_steals
how many fouls did e0 make allseason playing 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_fouls
how many rebounds did e0 have over the season in which he played 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_rebounds
number of rebounds over a season of player e0 with 3 turnovers over a season	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_rebounds
how many fouls did e0 have on the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_fouls
how many rebounds does e0 make by the time hes got 3 points in a season	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_rebounds
players that had the least amount of rebounds in a season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_rebounds  ( SW.domain string-player ) ) string-player
which team did e0 play on in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-team
how many points did e0 make in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_points
how many games did e0 play in a season where his number of blocks were over 3	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_games_played
how many points did e0 have when he had 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_points
while he was e0 find the number of games played by e1 in the same season	SW.getProperty ( SW.filter SW.getProperty e1 SW.reverse string-player  string-position string-= e0 ) string-num_games_played
whos got the fewest points in a year	SW.superlative var-s string-min SW.ensureNumericProperty string-num_points  ( SW.domain string-player ) ) string-player
how many games has e0 played in the last 3 seasons	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_games_played
name a player with the fewest turnovers during a season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_turnovers  ( SW.domain string-player ) ) string-player
player that has the least fouls over all seasons	SW.superlative var-s string-min SW.ensureNumericProperty string-num_fouls  ( SW.domain string-player ) ) string-player
which player has got a minimum of 3 turnovers	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string->= ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
which player made as many blocks over the season as e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
who plays for the e0 or e1	SW.filter var-s string-team string-= SW.concat ( SW.domain string-player ) ) string-player
to which team does e0 belong who scored 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-team
does e0 have more fouls or rebounds per season	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_fouls
how many assists e0 made in season d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_assists
how many blocks has e0 had	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_blocks
during the season in which he played in 3 games total what position was e0 playing	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-position
number of turnovers over a season of player e0 who has assists over a season	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_turnovers
what position did e0 play in the d1 season	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-position
what is the number of assists by e0 who made 3 assists over the season	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_assists
how many rebounds did e0 who had three blocks have	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_rebounds
how many points e0 made in the season he made 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_points
what players had 3 or more assists over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-> ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
this is the season of player e0 who has played 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-season
what players had more than 3 turnovers over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-> ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
what player has been in for only 1 or 2 games in a season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-< ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
players who are forwards or point guards	SW.concat
rebounds by e0 over all seasons as e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_rebounds
player with least number of blocks over a season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_blocks  ( SW.domain string-player ) ) string-player
which player had three or more blocks	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string->= ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
player whose number of points over a season is same as that of player e0 bryantcover a season	SW.filter var-s string-num_points string-= ( SW.getProperty string-player  string-num_points ) ( SW.domain string-player ) ) string-player
which team was e0 on when he had 3 blocks in a season	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-team
what players have the points same as kob e0 highest points	SW.filter var-s SW.ensureNumericProperty string-num_points  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
what team did e0 play for in the d1 season	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-team
what players has the most points over all seasons	SW.superlative var-s string-max SW.ensureNumericProperty string-num_points  ( SW.domain string-player ) ) string-player
which player had no more rebounds than e0	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
during the season in which he had 3 turnovers what team was e0 on	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-team
which player has as many blocks as e0	SW.filter var-s string-num_blocks string-= ( SW.getProperty string-player  string-num_blocks ) ( SW.domain string-player ) ) string-player
in which seson did e0 get 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-season
are there players whose total tally of assists is less than the tallly of assists acquired by e0 in the same season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
who has had less than or the same number of turnovers as e0	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
number of rebounds over a season of player e0 who has played 3 games over a season	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_rebounds
what players made more than 2 points over a season	SW.filter var-s SW.ensureNumericProperty string-num_points  string->= ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
how many games has e0 given up exactly 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_games_played
how many seasons has e0 been starting e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-season
who plays for either la e0 or e1	SW.filter var-s string-team string-= SW.concat ( SW.domain string-player ) ) string-player
which players have as many rebounds as e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
in which season did e0 have three steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-season
what is the team of e0  bryant who played 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-team
how many assists has e0 got for this season so far	SW.getProperty string-player  string-num_assists
which player has got a maximum of 3 turnovers	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-<= ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
how many blocks were made by e0 in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_blocks
in what season did e0 only give up 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-season
how many steals has e0 had	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_steals
who has played the same number of games as e0	SW.filter var-s string-num_games_played string-= ( SW.getProperty string-player  string-num_games_played ) ( SW.domain string-player ) ) string-player
name a player with no more than three points per season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-<= ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
how many steals did e0 make over the season when made only 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_steals
player with not less than 3 points over a season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-<= ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
how many games has e0 played each season	SW.getProperty string-player  string-num_games_played
how many turnovers did e0 get in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_turnovers
which player has no more played games than e0	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
number of assists over a season of player e0 with 3 rebounds over a season	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_assists
which player has been in fewer games than e0	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
what player has most allseason points	SW.superlative var-s string-max SW.ensureNumericProperty string-num_points  ( SW.domain string-player ) ) string-player
which player had the same number of fouls as e0	SW.filter var-s string-num_fouls string-= ( SW.getProperty string-player  string-num_fouls ) ( SW.domain string-player ) ) string-player
what player had the same number of fouls as e0 allseason	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
what seasons did e0 play for the la e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-season
who has the same number of rebounds as e0	SW.filter var-s string-num_rebounds string-= ( SW.getProperty string-player  string-num_rebounds ) ( SW.domain string-player ) ) string-player
number of played games over a season of player e0 with 3 turnovers over a season	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_games_played
how many rebounds did player e0 have during the season d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_rebounds
who has had more or less than 3 turnovers	SW.filter var-s string-num_turnovers string-!= number3 turnover ( SW.domain string-player ) ) string-player
what player has 3 allseason rebounds maximum	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-<= ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
how many turnovers does e0 average in games with more than 3 rebounds for him	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_turnovers
player with less than 3 points over a season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
which season did e0 have only 3 rebounds in	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-season
find the season in which e0 had a total number of 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_steals
what player had 3 or more assists	SW.filter var-s SW.ensureNumericProperty string-num_assists  string->= ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
which player has the maximum points of e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
what player has more allseason steals than e0	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
players who played more than 3 games over a season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-> ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
player from e0 or e1	SW.filter var-s string-team string-= SW.concat ( SW.domain string-player ) ) string-player
who has had less points than e0 in a season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
player with number of blocks over a season as that of player e0 bryantis	SW.filter var-s string-num_blocks string-= ( SW.getProperty string-player  string-num_blocks ) ( SW.domain string-player ) ) string-player
who has had less than 3 fouls	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-< ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
how many points did e0 have when he had 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_points
which players play for the e0 or e1	SW.filter var-s string-team string-= SW.concat ( SW.domain string-player ) ) string-player
how many turnovers did e0 ahve when he had 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_turnovers
how many asists e0 made over a season in which he made 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_assists
in which position did e0 score 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-position
how many steals has e0 had	SW.getProperty string-player  string-num_steals
what position did e0 have 3 turnovers as	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-position
how many fouls does e0 have in a season	SW.getProperty string-player  string-num_fouls
how many rebounds and assists does e0 have over a season	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_rebounds
how many steals did e0 get in 04	SW.getProperty ( SW.filter string-player  string-season string-= date:2004:-1:-1 ) string-num_steals
team of player e0 with 3 points over a season	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-team
name a player with more than three assists during the season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-> ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
how many allseason rebounds did e0 have as a los angeles laker	SW.getProperty ( SW.filter string-player  string-team string-= en.team.lakers ) string-num_rebounds
who has had the same or more turnovers than e0	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
how many games as e0 played for the la e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_games_played
what player had the least fouls this season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_fouls  ( SW.domain string-player ) ) string-player
d0 season of e0	SW.getProperty ( SW.filter string-player  string-season string-= d0 ) string-season
how many assists did e0 byrant have during a season	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_assists
what player had more assists than e0 this season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
for which team did e0 make three rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-team
who many rebounds in the season did e0 e1 make	SW.getProperty ( SW.filter SW.getProperty e1 SW.reverse string-player  string-position string-= e0 ) string-num_rebounds
how many turnovers did e0 have in a game where he had three fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_turnovers
how many fouls will e0 have in seasons when hes got 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_fouls
how many turnovers did e0 have when he had 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_turnovers
what player is on either the e0 or the e1	SW.filter var-s string-team string-= SW.concat ( SW.domain string-player ) ) string-player
how many blocks were made by e0 in 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_blocks
what was the total number of games played by e0 in season where he had only three rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_games_played
what player has played the least number of positions	SW.countSuperlative var-s string-min string-position ( SW.domain string-player ) ) string-player
during e0 time with the e1 how many assists has he averaged per season	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_assists
how many steals did e0 get after 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_steals
number of played games over a season of player e0 who has played 3 games over a season	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_games_played
who has had more than 3 assists	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-> ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
number of steals over a season of player e0 from team e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_steals
how many assists does e0 have over all seasons	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_assists
how many blocks does e0 make in seasons with only 3 fouls against him	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_blocks
the player with least blocks over a season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_blocks  ( SW.domain string-player ) ) string-player
which players have made the same number of fouls as e0 in a season	SW.filter var-s string-num_fouls string-= ( SW.getProperty string-player  string-num_fouls ) ( SW.domain string-player ) ) string-player
number of turnovers over a season of player e0 who has 3 rebounds over a season	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_turnovers
how many assists did e0 get after making 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_assists
players that never made 3 blocks in a season	SW.filter var-s string-num_blocks string-!= number3 block ( SW.domain string-player ) ) string-player
how many points does e0 get in seasons with 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_points
what player had more than 3 turnovers	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-> ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
how many fouls did e0 have with three points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_fouls
what player had more blocks than e0 this season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
how many allseason blocks did e0 have in 3 allseason games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_blocks
for the season in which he was responsible for 3 blocks how many fouls did e0 commit	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_fouls
what players have had 3 or less rebounds	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-<= ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
player who has played more games over a season player e0 has played over a season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
player who has less than 3 blocks over a season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-< ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
what seasons did e0 play	SW.getProperty string-player  string-season
how many players are there	.size entity-en.player
who has the most assists	SW.superlative var-s string-max SW.ensureNumericProperty string-num_assists  ( SW.domain string-player ) ) string-player
how many fouls does e0 average over a season	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-season
how many assists did e0 make in the season in which he scored three points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_assists
how many blocks did e0 have over the season he also had three rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_blocks
who has the most rebounds	SW.superlative var-s string-max SW.ensureNumericProperty string-num_rebounds  ( SW.domain string-player ) ) string-player
how many games did e0 play making 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_games_played
how many assists did e0 have after 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_assists
what players made more rebounds than e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
in which season did e0 have 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-season
player with two positions	SW.countComparative var-s string-position string-<= number2 ( SW.domain string-player ) ) string-player
what player had the same or less blocks as e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
players who had the same number of fouls in a season that e0 had	SW.filter var-s string-num_fouls string-= ( SW.getProperty string-player  string-num_fouls ) ( SW.domain string-player ) ) string-player
name a player who has played as many games as e0	SW.filter var-s string-num_games_played string-= ( SW.getProperty string-player  string-num_games_played ) ( SW.domain string-player ) ) string-player
how many assists were made by e0 over a season in which he made 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_assists
how many total points did e0 have in the d1 season	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_points
how many steals did e0 get after getting 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_steals
how many points does e0 have on average by game 3 in a season	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_points
find players whose total number of rebounds in a given season is more than the number of rebounds made in a season by e0	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
what player gets more blocks than  e0 or at least the same	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
which players have been on less than two teams	SW.countComparative var-s string-team string-< number2 ( SW.domain string-player ) ) string-player
number of blocks over a season of player e0 who has played 3 games over a season	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_blocks
how many turnovers has e0 played	SW.getProperty string-player  string-num_turnovers
in how many games did e0 get 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_games_played
find the number of points acquired by e0 over the entire season in which his number of fouls was 3	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_points
which player does not have 3 assists	SW.filter var-s string-num_assists string-!= number3 assist ( SW.domain string-player ) ) string-player
what position did e0 play for the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-position
is there a player with the same per season point average as e0	SW.filter var-s string-num_points string-= ( SW.getProperty string-player  string-num_points ) ( SW.domain string-player ) ) string-player
what player had the same or fewer steals than e0	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
who is a player that doesnt make even 3 steals per season	SW.filter var-s string-num_steals string-!= number3 steal ( SW.domain string-player ) ) string-player
which team did e0 play for in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-team
what is the number of turnovers by e0 who made 3 points over the season	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_turnovers
who had the least rebounds this season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_rebounds  ( SW.domain string-player ) ) string-player
which player has not had three rebounds in a season	SW.filter var-s string-num_rebounds string-!= number3 rebound ( SW.domain string-player ) ) string-player
how many turnovers  did e0 get after he made 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_turnovers
how many turnovers did e0 who had three rebounds have during the season	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_turnovers
how many steals did e0 get in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_steals
how many blocks did e0 make after getting 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_blocks
who has the most points	SW.superlative var-s string-max SW.ensureNumericProperty string-num_points  ( SW.domain string-player ) ) string-player
in d0 how many allseason blocks did e0 have	SW.getProperty ( SW.filter string-player  string-season string-= d0 ) string-num_blocks
how many rebounds did e0 make in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_rebounds
how many steals did e0 have in the game in which he had three blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_steals
who has made more than 3 points this season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-> ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
which player has scored lesser points than e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
how many assists did e0 get after 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_assists
name a player with at least as many steals as e0	SW.filter var-s SW.ensureNumericProperty string-num_steals  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
which player played in d0 or d1	SW.filter var-s string-season string-= SW.concat ( SW.domain string-player ) ) string-player
which player has the minimum number of steals	SW.superlative var-s string-min SW.ensureNumericProperty string-num_steals  ( SW.domain string-player ) ) string-player
how many blocks e0 made in the season d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_rebounds
which player had the fewest rebounds	SW.superlative var-s string-min SW.ensureNumericProperty string-num_rebounds  ( SW.domain string-player ) ) string-player
name a player with more than three played games	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-> ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
how many points did e0 aquire over the entire season	SW.getProperty string-player  string-num_points
what is the points e0 scored in season d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_points
what player made less than 4 points in a season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-<= ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
how many turnovers did e0 have during the season	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_turnovers
team of player e0 d1 season	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-team
how many blocks does e0 usually make if hes already got 3	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_blocks
name those players with scored assists in any one season tallying at least 3	SW.filter var-s SW.ensureNumericProperty string-num_assists  string->= ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
what player scored less points than e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
who has had the same amount or less of assists as e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
what was the number of turnovers for player e0 when he had just three steals in a season	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_turnovers
find those players who made more than 3 steals in a given season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-> ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
who has more or less than 3 blocks	SW.filter var-s string-num_blocks string-!= number3 block ( SW.domain string-player ) ) string-player
how many points has e0 made in a season when he made 3 plus rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_points
who has less than 3 blocks	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-< ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
how many turnovers did e0 have when he had 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_turnovers
how many games was e0 in during the season that he played with the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_games_played
what player played in the most games this season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_games_played  ( SW.domain string-player ) ) string-player
which year did e0 play for the la e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-season
how many rebounds e0 made in the season he played for e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_rebounds
who has had the most blocks in a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_blocks  ( SW.domain string-player ) ) string-player
what player has the fewest all season fouls	SW.superlative var-s string-min SW.ensureNumericProperty string-num_fouls  ( SW.domain string-player ) ) string-player
how many points does  e0 have for the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_points
how many turnovers did e0 get	SW.getProperty string-player  string-num_turnovers
in how many games did e0 score 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_games_played
what position did e0 play in the d1 season	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-position
who has played at least 3 games in a season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string->= ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
e0 belongs to the e1 team	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-team
player who has maximum number of teams	SW.countSuperlative var-s string-max string-team ( SW.domain string-player ) ) string-player
what player had more blocks than e0 whose number of assists is 3	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_blocks
which player has more points than e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
which players have committed 3 or more fouls in a season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string->= ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
player with more than 3 points over a season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-> ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
which player had more assists than e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
what players have a total number of fouls over a season that is not 3	SW.filter var-s string-num_fouls string-!= number3 foul ( SW.domain string-player ) ) string-player
how many turnovers were got by e0 who belonged to the e1 team	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_turnovers
what team did e0 play for in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-team
how many players have been on the e0 or e1	SW.filter var-s string-team string-= SW.concat ( SW.domain string-player ) ) string-player
what team did e0 play for in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-team
how any blocks did e0 make after getting 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_blocks
which player has had more points in a season than e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
how many rebounds did e0 get in the seasons he scored 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_rebounds
how many fouls did e0 make in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_fouls
how many fouls did e0 have after 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_fouls
during  season d0 note the total number of points scored by e0	SW.getProperty ( SW.filter string-player  string-season string-= d0 ) string-num_points
what team is e0 on	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-team
find players who have committed a higher amount of fouls in a given season than e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
which player scored less than 3 points in a full season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
who had at least as many fouls as e0 in a season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
what players have less fouls than e0 over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
player who has played largest numbergames over a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_games_played  ( SW.domain string-player ) ) string-player
who has a total foul count under 3 for the season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-< ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
how many games in a season did e0 play where he had 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_games_played
how many points did e0 score after 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_points
name the other players in e0 team	SW.filter var-s string-team string-= ( SW.getProperty string-player  string-team ) ( SW.domain string-player ) ) string-player
players who do not have three steals over the course of a season	SW.filter var-s string-num_steals string-!= number3 steal ( SW.domain string-player ) ) string-player
what players have played less than two positions	SW.countComparative var-s string-position string-< number2 ( SW.domain string-player ) ) string-player
how many rebounds did e0 have who played in three games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_rebounds
name the season in which e0 total point score was 3	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_points
who matches or beats e0 in steals per season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
which player has the minimum number of fouls of e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
what player played the fewest positions	SW.countSuperlative var-s string-min string-position ( SW.domain string-player ) ) string-player
what year did e0 have three rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-season
how many points did e0 score in a single season where he had exactly three assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_points
player with maximum 3 steals over a season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-<= ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
whos made the most assists from the start of the season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_assists  ( SW.domain string-player ) ) string-player
in how many games during a single season did e0 have more than three blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_games_played
number of fouls over a season of player e0 who has 3 steals over a season	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_fouls
player who has one team	SW.countComparative var-s string-team string-< number2 ( SW.domain string-player ) ) string-player
how many turnovers has e0 had	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_turnovers
how many steals did e0 have in season where he had only three rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_steals
name the player with fewer than three points	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
player with minimum 3 steals over a season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string->= ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
how many seasons has e0 played for the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-season
what players made less than 4 assists in a season	SW.filter var-s string-num_assists string-!= number3 assist ( SW.domain string-player ) ) string-player
how many rebounds has players that are not the 3 had	SW.filter var-s string-num_rebounds string-!= number3 rebound ( SW.domain string-player ) ) string-player
in which team did e0 play in season d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-team
which player had at least three points during the season	SW.filter var-s SW.ensureNumericProperty string-num_points  string->= ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
how many games e0 played in the season in which he made 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_games_played
what team did e0 play 3 games for	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-team
players who had no more rebounds over a season than that of e0	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
steals by e0 in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_steals
what player plays e0 or e1	SW.filter var-s string-position string-= SW.concat ( SW.domain string-player ) ) string-player
players that plat one or two different positions	SW.countComparative var-s string-position string-<= number2 ( SW.domain string-player ) ) string-player
name a player with fewer than three fouls	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-< ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
how many rebounds made by e0 over a season in which he played 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_rebounds
how many turnovers does e0 have over all seasons	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_turnovers
which player has had the most fouls in a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_fouls  ( SW.domain string-player ) ) string-player
which player got lesser number of assists than e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
e0 number of games played the season he had 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_games_played
e0 ended up with how many assists last season	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_assists
which player had at least three steals	SW.filter var-s SW.ensureNumericProperty string-num_steals  string->= ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
player who has played same number of games over a season as by player e0 bryantover a season	SW.filter var-s string-num_games_played string-= ( SW.getProperty string-player  string-num_games_played ) ( SW.domain string-player ) ) string-player
name those players who have a total number of fouls in any one season equal to or more than that of e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
how many blocks did e0 have when he had 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_blocks
how many fouls were played by e0 after 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_fouls
which player has the fewest rebounds ever	SW.superlative var-s string-min SW.ensureNumericProperty string-num_rebounds  ( SW.domain string-player ) ) string-player
how many rebounds can e0 make in one season	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_rebounds
number of played games over a season of player e0 who is at e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_games_played
a player with at least 3 fouls	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string->= ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
how many assists did e0 get  after getting 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_assists
in which season did e0 get 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-season
which player consistently has more steals per season than e0	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
what position did e0 have 3 assists as	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-position
turnovers of e0 over a season in which he made 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_turnovers
how many rebounds has e0 had	SW.getProperty string-player  string-num_rebounds
players with the same assist per game average as e0 over a season	SW.filter var-s string-num_assists string-= ( SW.getProperty string-player  string-num_assists ) ( SW.domain string-player ) ) string-player
what is the number of the position	.size entity-en.position
which player makes less than 3 rebounds per career average season	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-< ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
who is a player with fewer rebounds than e0	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
find those players responsible for 3 or less fouls in any one given season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-<= ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
during the season in which he had 3 steals how many rebounds was e0 responsible for	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_rebounds
how many blocks did e0 have in a season he had 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_blocks
player with smaller turnovers over a season than player e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
what player played the fewest games	SW.superlative var-s string-min SW.ensureNumericProperty string-num_games_played  ( SW.domain string-player ) ) string-player
name of a player with no more rebounds each season than e0	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
for the season who played the same number of games as e0	SW.filter var-s string-num_games_played string-= ( SW.getProperty string-player  string-num_games_played ) ( SW.domain string-player ) ) string-player
what players played less games than e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
are there players who have participated in more than 3 games in a season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-> ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
name the player with more turnovers per season than e0	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
how many fouls in a single season did e0 have that is greater than three turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_fouls
what players had more than three fouls over a season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-> ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
player with at least 3 rebounds over a season	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string->= ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
which players played in the d0 or d1 seasons	SW.filter var-s string-season string-= SW.concat ( SW.domain string-player ) ) string-player
how many rebounds did e0 have in games where he scored three points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_rebounds
who has gotten more than 3 points	SW.filter var-s SW.ensureNumericProperty string-num_points  string-> ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
players with less than three fould per game over the season players with the fewers	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-< ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
how many rebounds did e0 have when he had 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_rebounds
how many points did e0 score in the position of e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_points
name the number of total turnovers of e0	SW.getProperty string-player  string-num_turnovers
what player had more all season points than e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
how many steals did e0 have in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_steals
player who has same rebounds over a season as that of player e0 over a season	SW.filter var-s string-num_rebounds string-= ( SW.getProperty string-player  string-num_rebounds ) ( SW.domain string-player ) ) string-player
how many turnovers did e0 have when he had 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_turnovers
who has had the least points	SW.superlative var-s string-min SW.ensureNumericProperty string-num_points  ( SW.domain string-player ) ) string-player
which player has more rebounds per season than e0	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
players that have more and less than 3 blocks over seasons	SW.filter var-s string-num_blocks string-!= number3 block ( SW.domain string-player ) ) string-player
what team did e0 get 3 rebounds in	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-team
what player had more blocks than e0 whose number of blocks is 3	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-season
how many assists does e0 usually make in a season after hes made at least 3	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_assists
what players made more steals than e0 made over a season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
players that play the same position as e0	SW.filter var-s string-position string-= ( SW.getProperty string-player  string-position ) ( SW.domain string-player ) ) string-player
how many blocks did e0 make during seasons where he made 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_blocks
which players play no more than two positions	SW.countComparative var-s string-position string-<= number2 ( SW.domain string-player ) ) string-player
how many assists did e0 get when he was in the position of e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_assists
which players plays in two positions	SW.countComparative var-s string-position string-<= number2 ( SW.domain string-player ) ) string-player
what seasons did e0 play in	SW.filter var-s string-season string-= ( SW.getProperty string-player  string-season ) ( SW.domain string-player ) ) string-player
during the season in which e0 had 3 turnovers how many blocks was responsible for	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_blocks
what team did e0 score 3 points for	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-team
mention the number of turnovers of player e0 in 3 games played over this season	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_turnovers
what player scored more points than e0 this season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
how many positions are there	.size entity-en.position
how many blocks did e0 have in a game where he had three turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_blocks
how many games did e0 play in the d1 season	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_games_played
how many seasons have e0 played	SW.getProperty string-player  string-season
player whose number of assists over a season is more than that of  of player e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
which player has the fewest fouls per season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_fouls  ( SW.domain string-player ) ) string-player
what player had 3 or less points this season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-<= ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
how blocks did  did e0 make after playing 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_blocks
players that played on the same team as e0	SW.filter var-s string-team string-= ( SW.getProperty string-player  string-team ) ( SW.domain string-player ) ) string-player
what players did not score more than three points in a season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-<= ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
during the season in which his point tally was 3 how many games was e0 in	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_games_played
how many steals did e0 make	SW.getProperty string-player  string-num_steals
number of played games over a season of player e0 with 3 points over a season	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_games_played
how many rebounds were  got by e0 in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_rebounds
which player had the most career blocks per season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_blocks  ( SW.domain string-player ) ) string-player
which player has the minimum number of blocks of e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
how many assists has e0 had with three steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_assists
what is the position of player e0 with 3 rebounds over this season	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-position
season of player e0 from e1 team	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-season
how many rebounds did e0 make in seasons where he made 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_rebounds
how many games did e0 play where he made three assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_games_played
e0 played in the season d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-season
number of assists over a season of player e0 from season d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_assists
in how many games has e0 made 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_games_played
how many threepoint turnovers did e0 have	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_turnovers
number of rebounds over a season of player e0 with 3 blocks over a season	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_rebounds
what players made less turnovers than e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
how many assists e0 made over a season	SW.getProperty string-player  string-num_assists
how many points did e0 score while playing for the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_points
what team will e0 be on this year	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-team
what player has as much steals as e0 made over a season	SW.filter var-s string-num_steals string-= ( SW.getProperty string-player  string-num_steals ) ( SW.domain string-player ) ) string-player
who has played 3 or less games	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-<= ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
what player played less than 4 games over a season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-<= ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
how many fouls did e0 have this season	SW.getProperty string-player  string-num_fouls
what player had more blocks than e0 whose number of points is 3	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_points
number of points over a season of player e0 who has 3 blocks over a season	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_points
who had few steals over the season than e0	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
how many steals did e0 make during a season while playing for the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_steals
has e0 averaged 3 fouls and 3 blocks per game over a season	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_blocks
in what season did e0 score a total of 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-season
player with assists over a season not less than that of player e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
how many points did e0 score during a season	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_points
whos a player with less games played than e0	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
e0 played three games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_games_played
what players are point guards or forwards	SW.filter var-s string-position string-= SW.concat ( SW.domain string-player ) ) string-player
how many fouls did e0 have in the season in which he played e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_fouls
what teams did e0 play on as e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-team
what position does e0 who has three steals play	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-position
position of player e0 who has played 3 games over a season	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-position
name a player with fewer than three steals	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-< ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
how many turnovers did e0 have when he played in three games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_turnovers
what position is e0	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-position
who has had less than 3 assists	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-< ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
name a player who had at least as many assists as e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
what is the number of blocks by e0 who made 3 rebounds over the season	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_blocks
when e0 had 3 allseason assists how many rebounds did he have	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_rebounds
which players are not point guards	SW.filter var-s string-position string-!= en.position.point_guard ( SW.domain string-player ) ) string-player
what players had more steals than e0 over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
during the season in which e0 managed 3 assists how many games did he play in	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_games_played
note the players whose total number of rebounds in any one given season is more than 3	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-> ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
during the season in which he was responsible for 3 steals what was the name of the team e0 was on	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-team
98019705layers with the fewest turnovers per game during the season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_turnovers  ( SW.domain string-player ) ) string-player
how many rebounds did e0 make when his total blocks over a season was 3	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_rebounds
name the player who has scored the most points in a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_points  ( SW.domain string-player ) ) string-player
what team did e0 play on when he had 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-team
how many games has e0 played and hasnt scored a 3	SW.filter var-s string-num_games_played string-!= number3 game ( SW.domain string-player ) ) string-player
how many turnovers has e0 had	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_steals
which player has a maximum of 3 blocks	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-<= ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
how many points e0 made in the season in which he played for e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_points
how many games has e0 played	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_games_played
which player had the same number of points in the season as e0	SW.filter var-s string-num_points string-= ( SW.getProperty string-player  string-num_points ) ( SW.domain string-player ) ) string-player
which player gives up te same number of turnovers as e0 each season	SW.filter var-s string-num_turnovers string-= ( SW.getProperty string-player  string-num_turnovers ) ( SW.domain string-player ) ) string-player
in what position was e0 able  to make 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-position
what position did e0 play when his allseason turnovers equaled 3	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-position
what player had 3 or less steals this season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-<= ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
what players are associated with one or no team	SW.countComparative var-s string-team string-< number2 ( SW.domain string-player ) ) string-player
position of player e0 with 3 steals over a season	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-position
what players have played less than 3 games over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-< ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
player e0 has given 3 fouls over this season	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_steals
in what year did e0 have three fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-season
what was the position of e0 in the season he made 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-position
number of blocks over a season of player e0 from team e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_blocks
how many games has e0 played	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_games_played
which players have had the least amount of turnovers in any one particular season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_turnovers  ( SW.domain string-player ) ) string-player
whats e0 season turnover average	SW.getProperty string-player  string-num_turnovers
how many games did e0 play for the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_games_played
what players had less blocks than e0 over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
how many turnovers in the season did e0 have for the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_turnovers
player with less than 3 turnovers in a season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-< ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
who played the fewest games in a season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_games_played  ( SW.domain string-player ) ) string-player
how many fouls were played by e0 after having 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_fouls
how many teams are there	.size entity-en.team
which players are e0 or e1	SW.filter var-s string-position string-= SW.concat ( SW.domain string-player ) ) string-player
players that have the same number of points in a season as e0 lowest amount	SW.filter var-s SW.ensureNumericProperty string-num_points  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
which player has as many fouls as e0	SW.filter var-s string-num_fouls string-= ( SW.getProperty string-player  string-num_fouls ) ( SW.domain string-player ) ) string-player
who has had the same or more assists than e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
player with not more turnovers over a season than player e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
in which seasons e0 made 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-season
how many rebounds did e0 have this season	SW.getProperty string-player  string-num_rebounds
how many assists did e0 make in a season with steals over 3	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_assists
in the season in which he made 3 steals how many games was e0 in	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_games_played
which player played less than three games	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-< ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
who gets 3 or more turnovers each season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string->= ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
are there players whose total number of assists in any one given season equals at most 3	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-<= ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
stats of e0 during d1 season	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-season
who has played for the least number of teams	SW.countSuperlative var-s string-min string-team ( SW.domain string-player ) ) string-player
whos got more than 3 assists each season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string->= ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
what player has the most turnovers in a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_turnovers  ( SW.domain string-player ) ) string-player
how many steals e0 made in the season he made 3 assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_steals
how many fouls does e0 average in seasons limited to 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_assists
which team does e0 play for which has less than 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-team
what player had less than 3 blocks	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-< ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
how many career turnovers has e0 has	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_turnovers
player not with 3 blocks over a season	SW.filter var-s string-num_blocks string-!= number3 block ( SW.domain string-player ) ) string-player
name a player with no more than three fouls	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-<= ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
how many blocks has e0 made playing e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_blocks
what position did e0 play on the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-position
what players have the same number of turnovers over all their seasons equal to or worse than that of e0	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
what player has fewer blocks per season than e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
when e0 had 3 assists in a season what was his position	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-position
how many seasons has e0 broken 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-season
how many teams are there	.size entity-en.team
how many fouls did e0 have when he had 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_fouls
what was the total number of steals in seasons where e0 had only played three games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_steals
which player did not play in d0 or d1	SW.filter var-s string-season string-= SW.concat ( SW.domain string-player ) ) string-player
which player had more than three fouls in the season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-> ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
e0 got 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_steals
what player had more steals than e0 this season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
how many turnovers e0 made in season d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_turnovers
how many fouls has e0 had	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_fouls
who has had the least amount of blocks	SW.superlative var-s string-min SW.ensureNumericProperty string-num_blocks  ( SW.domain string-player ) ) string-player
how many seasons has e0 scored more than 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-season
what player had less than 3 points	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
what position did e0 play when he had 3 blocks in a season	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-position
how many fouls did e0 have when he had 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_fouls
how many assists did e0 make during a season	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_assists
what position did e0 play 3 games as	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-position
what players have had less steals than e0	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
how many fouls were committed by e0 over a season in which he made 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_fouls
in what year did e0 play three games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_games_played
how many points did e0 score this season	SW.getProperty string-player  string-num_points
during the year he played for the e0 how many fouls did e1 have	SW.getProperty ( SW.filter SW.getProperty e1 SW.reverse string-player  string-team string-= e0 ) string-num_fouls
which player doesnt average over 3 assists per game	SW.filter var-s string-num_assists string-!= number3 assist ( SW.domain string-player ) ) string-player
what player has more than 3 allseason blocks	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-> ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
how many points did e0 score allseason when his steals equaled 3	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_points
how many steals did e0 have after 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_steals
what position does e0 play	SW.getProperty string-player  string-position
players who made less than 4 steals	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-<= ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
what players did not play in d0	SW.filter var-s string-season string-!= d0 ( SW.domain string-player ) ) string-player
which player leads e0 for rebounds per season	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
who has more blocks per season than e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
which player had fewer turnovers than three	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-< ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
who has the fewest assists per season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_assists  ( SW.domain string-player ) ) string-player
what players had a total number of rebounds in a season not equal to three	SW.filter var-s string-num_rebounds string-!= number3 rebound ( SW.domain string-player ) ) string-player
team of player e0 who has 3 rebounds over a season	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-team
how many points did e0 score in the season	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_points
how many points had e0 scored after 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_points
how many points did e0 who had three fouls have	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_points
how many assists has e0 had	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_assists
players that have more steals than e0 over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
either e0 or e1	SW.concat
player who made less than 4 blocks over a season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-<= ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
who has had the same number of turnovers as e0	SW.filter var-s string-num_fouls string-= ( SW.getProperty string-player  string-num_fouls ) ( SW.domain string-player ) ) string-player
what position did e0 play in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-position
how many games e0 played in e1 position over a season	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_games_played
how many turnovers has e0 made in 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_turnovers
which is the team of e0 who has played 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-team
how many blocks did player e0 have with 3 assists over this season	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_blocks
what players made blocks same as maximum blocks by e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
who has 3 or more steals in a season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string->= ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
what was the total number of season where e0 had just three rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_rebounds
find players who have performed blocks in any one season tallying to the same amount as those blocks performed by e0 in any one season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
what was the total number of rebounds of e0 in season where he only had three blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_rebounds
how many did e0 play so far this year	SW.getProperty string-player  string-num_games_played
what position did e0 get 3 steals as	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-position
players that have more and less than 3 fouls over all seasons	SW.filter var-s string-num_fouls string-!= number3 foul ( SW.domain string-player ) ) string-player
what was the total number of fouls in a season for e0 when he had only three blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_fouls
what player has more or less than 3 all season rebounds	SW.filter var-s string-num_rebounds string-!= number3 rebound ( SW.domain string-player ) ) string-player
what players have played during the same seasons as e0	SW.filter var-s string-season string-= ( SW.getProperty string-player  string-season ) ( SW.domain string-player ) ) string-player
whats the number of assists e0 gets in a season when hes got 3 or more blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_assists
what player played 3 or more games	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string->= ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
players that average at least three assists per game over a season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string->= ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
what team did e0 have 3 fouls for	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-team
how many turnovers did e0 get after scoring 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_turnovers
how many rebounds did e0 have over a season	SW.getProperty ( SW.filter string-player  string-team string-= en.team.lakers ) string-num_rebounds
how many blocks did e0 have this season	SW.getProperty string-player  string-num_blocks
which player has the most assists over a season other than e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
player whose number of steals over a season is less than that of  of player e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
name a player with more than three rebounds this season	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-> ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
what players made less than 4 fouls	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-<= ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
player who plays the same position as e0	SW.filter var-s string-position string-= ( SW.getProperty string-player  string-position ) ( SW.domain string-player ) ) string-player
which player has played no more than three games	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-<= ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
steals by e0 over all seasons with 3 or more points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_steals
number of fouls of e0 who has 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_fouls
how many steals did e0 have in the d1 season	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_steals
what team did e0 play for while having only 3 fouls in a season	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-team
which player has had the fewest fouls	SW.superlative var-s string-min SW.ensureNumericProperty string-num_fouls  ( SW.domain string-player ) ) string-player
how many points were scored by e0 when he made 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_points
what was the total number of assist for e0 over a season where he had three rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_assists
player with more than 3 rebounds over a season	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-> ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
which player had more fouls than e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
which players played in the same season as e0	SW.filter var-s string-season string-= ( SW.getProperty string-player  string-season ) ( SW.domain string-player ) ) string-player
what players number of games played allseason equaled no less than e0	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
what player had the fewest turnovers this season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_turnovers  ( SW.domain string-player ) ) string-player
what player did not have 3 steals	SW.filter var-s string-num_steals string-!= number3 steal ( SW.domain string-player ) ) string-player
how many blocks in a season did e0 have	SW.getProperty string-player  string-num_blocks
how many players acquired less or more that 3 turnovers	SW.filter var-s string-num_turnovers string-!= number3 turnover ( SW.domain string-player ) ) string-player
which played has played on the most teams	SW.countSuperlative var-s string-max string-team ( SW.domain string-player ) ) string-player
what seasons did e0 play e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-season
how many turnovers did e0 have when he made three assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_turnovers
whos got the record for most rebounds in a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_rebounds  ( SW.domain string-player ) ) string-player
which player has had the most  turnovers in any one season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_turnovers  ( SW.domain string-player ) ) string-player
who has the least fouls	SW.superlative var-s string-min SW.ensureNumericProperty string-num_fouls  ( SW.domain string-player ) ) string-player
how many all season steals did e0 have	SW.getProperty string-player  string-num_steals
players with more than 2 rebounds	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string->= ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
find the player with the highest number of blocks to his credit in any one season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_blocks  ( SW.domain string-player ) ) string-player
player with at most 3 turnovers over a season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-<= ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
how many rebounds has e0 had	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_rebounds
which player has a minimum of three steals	SW.filter var-s SW.ensureNumericProperty string-num_steals  string->= ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
player e0 number of rebounds over a season	SW.getProperty string-player  string-num_rebounds
which player has played in the fewest games in a season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_games_played  ( SW.domain string-player ) ) string-player
are there players who have scored a total number of points in one season  larger than the total number of points scored in the same seaon by e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
what player had less than 3 blocks allseason	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-< ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
how many players have less than 3 steals on them in a season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-< ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
who made the most turnovers over all seasons	SW.superlative var-s string-max SW.ensureNumericProperty string-num_turnovers  ( SW.domain string-player ) ) string-player
how many fouls were played by e0 when he scored 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_fouls
name a player with no more points per season than e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
what players had the same or more steals e0 over the season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
who has had more than 3 turnovers	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-> ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
players with a total number of rebounds in a season no greater than three	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-<= ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
what seasons did e0 have only three blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-season
which players have at least 3 turnovers in a season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string->= ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
who did e0 play for when he had 3 all season rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-team
how many steals did e0 have during the season when averaging three assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_steals
players that scored the same or fewer points than e0 during the season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
how many points did e0 e1 score	SW.getProperty ( SW.filter SW.getProperty e1 SW.reverse string-player  string-team string-= e0 ) string-num_points
players that have fewer fouls over a season than that of e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
what players scored at least three points over a season	SW.filter var-s SW.ensureNumericProperty string-num_points  string->= ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
what players made less than three assists over a season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-< ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
how many games did e0 play who had turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_games_played
which player tied e0 highest seasonal point score in a single season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
which players have been on two or less teams	SW.countComparative var-s string-team string-<= number2 ( SW.domain string-player ) ) string-player
what players made more than 3 fouls over a season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-> ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
players that did no play in d0	SW.filter var-s string-season string-!= d0 ( SW.domain string-player ) ) string-player
what players have had 3 or more rebounds	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string->= ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
number of blocks over a season of player e0 who has 3 fouls over a season	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_blocks
how many all season fouls did e0 have as an e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_fouls
what player had less fouls than e0 this season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
how many all season points did e0 have as e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_points
how many rebounds did e0 make in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_rebounds
what players have played in the same amount or more games than e0 this season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
which player has played less games than e0	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
player with not more blocks over a season than player e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
what player has under 3 assists all season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-< ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
what players made more than 3 assists over a season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-> ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
what player had the same amount of turnovers as e0	SW.filter var-s string-num_turnovers string-= ( SW.getProperty string-player  string-num_turnovers ) ( SW.domain string-player ) ) string-player
note those players who accrued a total of points in any one season totalling more than 3	SW.filter var-s SW.ensureNumericProperty string-num_points  string-> ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
how many turnovers did e0 have when his all season steals equaled 3	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_turnovers
how many points did e0 have over all seasons	SW.getProperty ( SW.filter string-player  string-team string-= en.team.lakers ) string-num_points
how many steals per season does e0 average when hes also got 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_steals
what team does e0 play on	SW.getProperty string-player  string-team
how many points did e0 have when he had 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_points
player who has not played 3 games over a season	SW.filter var-s string-num_games_played string-!= number3 game ( SW.domain string-player ) ) string-player
what player has the largest number of all season fouls	SW.superlative var-s string-max SW.ensureNumericProperty string-num_fouls  ( SW.domain string-player ) ) string-player
name a player with at least three rebounds in the season	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string->= ( SW.ensureNumericEntity number3 rebound ) ( SW.domain string-player ) ) string-player
how many fouls did e0 commit during the same season in which his total number of assists was 3	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_fouls
number of points over a season of player e0 who has 3 assists over a season	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_points
which player belongs to the e0 team or e1	SW.filter var-s string-team string-= SW.concat ( SW.domain string-player ) ) string-player
how many blocks did e0 have during a season	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_blocks
what season did e0 have 3 allseason assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-season
player with at least as many turnover as e0	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
how long has e0 played with more than 3 assists per season	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-season
which player has the fewest allseason blocks	SW.superlative var-s string-min SW.ensureNumericProperty string-num_blocks  ( SW.domain string-player ) ) string-player
which player has made the least number of blocks	SW.superlative var-s string-min SW.ensureNumericProperty string-num_blocks  ( SW.domain string-player ) ) string-player
what player had the most fouls this season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_fouls  ( SW.domain string-player ) ) string-player
how many points did e0 score when he had three rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_points
how many turnovers did e0 make in an allseason total of 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_turnovers
which players played more games than e0 the seasons he played	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
how many steals did e0 have in the d1 season	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_steals
find those players whose tally of games participated in is smaller than the number of games in which e0 has had game time in	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
what player had the least steals this season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_steals  ( SW.domain string-player ) ) string-player
what players have made at least as many blocks as e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
in seasons with more than 3 steals how many blocks did e0 have	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_blocks
player with not less than 3 fouls over a season is at least 3	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string->= ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
how many blocks e0 made in the season he made 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_blocks
how many steals did e0 have for the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_steals
which player had the fewest assists	SW.superlative var-s string-min SW.ensureNumericProperty string-num_assists  ( SW.domain string-player ) ) string-player
number of fouls over a season of player e0 with 3 blocks over a season	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_fouls
e0 rebounds for the season	SW.getProperty string-player  string-num_rebounds
how many games has e0 had more than 3 turnovers in all seasons	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_turnovers
season of player e0 whose has 3 points over a season	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-season
what player has the most blocks in a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_blocks  ( SW.domain string-player ) ) string-player
during the season in which e0 total number of assists was 3 what team was he on	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-team
what position was e0 player when he had three assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-position
what players had equal or more assists than e0 over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_assists  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
player who has most rebounds over a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_rebounds  ( SW.domain string-player ) ) string-player
during the same season that he participated in 3 games name the number of fouls committed by e0	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_fouls
how many turnovers has e0 had	SW.getProperty ( SW.filter string-player  string-position string-= en.position.point_guard ) string-num_turnovers
are there players who have a gamesparticipated in tally equalling that of e0 in any one specific season	SW.filter var-s string-num_games_played string-= ( SW.getProperty string-player  string-num_games_played ) ( SW.domain string-player ) ) string-player
who has played less than 3 games this season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-< ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
number of steals of e0 e1	SW.getProperty ( SW.filter SW.getProperty e1 SW.reverse string-player  string-position string-= e0 ) string-num_steals
what players had same or more rebounds than e0 over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
player with most number of fouls over a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_fouls  ( SW.domain string-player ) ) string-player
name a player with no more blocks in a season that e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
which player had a maximum of 3 assists	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-<= ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
who has had the most turnovers	SW.superlative var-s string-max SW.ensureNumericProperty string-num_turnovers  ( SW.domain string-player ) ) string-player
in the season he had 3 blocks e0 was playing for what team	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-position
what player has as many allseason steals as e0	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
how many points has e0 gotten this season	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_points
during his season playing e0 how many assists was bryant e1 responsible for	SW.getProperty ( SW.filter SW.getProperty e1 SW.reverse string-player  string-position string-= e0 ) string-num_assists
what player has no less than 3 allseason steals	SW.filter var-s SW.ensureNumericProperty string-num_steals  string->= ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
are there players whose point scores in any one season are less than the total point scores of e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
what season did e0 play e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-season
in which season did e0 commit 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-season
how many fouls did e0 have as e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_fouls
what player had less turnovers than e0 this season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
players with no more than 3 steals a season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-<= ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
name the season in which e0 performed 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_blocks
how many points did e0 score when he averaged 3 assists per game over the season	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_points
what player had over 3 fouls	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-> ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
how many games did e0 have 3 steals in	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_games_played
what players have gotten time in at least 3 games	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string->= ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
what player had more blocks than e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
in the season in which e0 played 3 games how many turnovers did he have	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_turnovers
what players hold two or less positions	SW.countComparative var-s string-position string-< number2 ( SW.domain string-player ) ) string-player
how many games did e0 play in during the d1 season	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_games_played
in which seasons e0 made 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-season
number of steals over a season of player e0 with 3 turnovers over a season	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_steals
how many assists did e0 have while playing e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_assists
what season did e0 have 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-season
how many fouls were played by e0 when he was at e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_fouls
in which season did e0 play in e1 position	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-season
what player scored fewer than 3 points in a season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-< ( SW.ensureNumericEntity number3 point ) ( SW.domain string-player ) ) string-player
how many fouls did e0 have when he had 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_fouls
how many blocks did e0 have all season when he had 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_blocks
who has had the same number or less rebounds than e0	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
number of steals over a season of player e0 with 3 points over a season	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_steals
mention the points scored by player e0 who has had 3 rebounds over this season	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_points
in which season did e0 average 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-season
players with less than 3 blocks over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-< ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
which player has scored the minimum number of points	SW.superlative var-s string-min SW.ensureNumericProperty string-num_points  ( SW.domain string-player ) ) string-player
players whose total number of points in a season is not 3	SW.filter var-s string-num_points string-!= number3 point ( SW.domain string-player ) ) string-player
what player played in the same season as e0	SW.filter var-s string-season string-= ( SW.getProperty string-player  string-season ) ( SW.domain string-player ) ) string-player
what position did e0 play when he had three blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-position
which player has lesser number of turnovers than e0	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
how many rebounds did e0 make	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_rebounds
which player had got less than 3 turnovers	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-< ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
how many rebounds did e0 have when he had 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_rebounds
what players played games same as the least number of games played by e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
how many steals did e0 have when he had 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_steals
how many fouls did e0 score during the season	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_fouls
points of e0 over a season in which he played in e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_points
how many blocks e0 made over a season	SW.getProperty string-player  string-num_blocks
what players made more points than e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_points  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
player with most number of steals over a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_steals  ( SW.domain string-player ) ) string-player
when did e0 play	SW.getProperty string-player  string-season
whats the position of e0	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-position
how many points e0 made over a season in which he made 3 rebounds	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_points
what season did e0 have 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-season
team of player e0 who is at e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-team
what players have less than 3 turnovers this season	SW.filter var-s string-num_turnovers string-!= number3 turnover ( SW.domain string-player ) ) string-player
which player has been in the least number of games in any one season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_games_played  ( SW.domain string-player ) ) string-player
players that played for either one or two nba teams	SW.countComparative var-s string-team string-<= number2 ( SW.domain string-player ) ) string-player
in the season in which he had 3 turnovers find the number of  point for which e0 was responsible	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_points
what player has the same amount of turnovers as e0 over a season	SW.filter var-s string-num_turnovers string-= ( SW.getProperty string-player  string-num_turnovers ) ( SW.domain string-player ) ) string-player
how many steals does e0 get in seasons where hes got more than 3 steals	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_steals
players that player more games in a season than that of e0	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
players that have the same or fewer total fouls as e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
what player had less than 3 steals	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-< ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
what players have had more blocks than e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
players with less blocks than e0 over all seasons	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
what player had 3 or more steals this season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string->= ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
how many games did e0 play in the year he had three fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_games_played
how many rebounds has e0 had	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_rebounds
which season did e0 play 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-season
during the season in which he scored 3 assists what position was e0 playing	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-position
number of blocks over a season of player e0 who has 3 points over a season	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_blocks
player whoplayed less games over a season than player e0 has played over a season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
which player does not have 3 steals	SW.filter var-s string-num_steals string-!= number3 steal ( SW.domain string-player ) ) string-player
which team did e0 play for when he had 3 fouls in a season	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-team
what players have had less than or equal the number of rebounds as e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
which players dont play for the la e0	SW.filter var-s string-team string-!= e0 ( SW.domain string-player ) ) string-player
during his season with the e0 how many points did e1 acquire	SW.getProperty ( SW.filter SW.getProperty e1 SW.reverse string-player  string-team string-= e0 ) string-num_points
how many assists did e0 of the e1 have	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_assists
what player plays the same position as e0	SW.filter var-s string-position string-= ( SW.getProperty string-player  string-position ) ( SW.domain string-player ) ) string-player
which player matches the season average steal rate of e0	SW.filter var-s string-num_steals string-= ( SW.getProperty string-player  string-num_steals ) ( SW.domain string-player ) ) string-player
how many games did e0 have three steals in over the season	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_games_played
which team did e0 have 3 steals for	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-team
who has had more than 3 steals	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-> ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
what players all season assists totaled at least as many as e0	SW.filter var-s SW.ensureNumericProperty string-num_assists  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_assists ) ) ( SW.domain string-player ) ) string-player
name the player who has played at most 3 games over this season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-<= ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
which plater made the least amount of blocks during the season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_blocks  ( SW.domain string-player ) ) string-player
find the player with a total number of blocks less than the total number of blocks performed by e0 in any one season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
how many all season rebounds did e0 have when his turnovers equaled 3	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_rebounds
what was the complete number of steals in season where e0 had only three points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-num_steals
how many steals has e0 got in his career	SW.getProperty string-player  string-num_steals
what player had the same or more number of blocks as e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
which player had no more turnovers in a season than e0	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
who has played the most games	SW.superlative var-s string-max SW.ensureNumericProperty string-num_games_played  ( SW.domain string-player ) ) string-player
whats  e0 average steals per season	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-num_steals
which players had 3 or fewer steals over a season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-<= ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
whos got the lead for most turnovers in a season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_turnovers  ( SW.domain string-player ) ) string-player
which players have had fewer turnovers per season than e0	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
name the player with the most blocks during the season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_blocks  ( SW.domain string-player ) ) string-player
players that overall outrebounded e0 during the season	SW.filter var-s SW.ensureNumericProperty string-num_rebounds  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_rebounds ) ) ( SW.domain string-player ) ) string-player
players with greater than three blocks in a season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-> ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
player with not more than 3 fouls over a season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-<= ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
how many fouls were played by e0	SW.getProperty string-player  string-num_fouls
what player has as much fouls as maximum fouls e0 made over a season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
which player plays fewer than two positions	SW.countComparative var-s string-position string-< number2 ( SW.domain string-player ) ) string-player
which player had the fewest blocks in a season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_blocks  ( SW.domain string-player ) ) string-player
name a player with fewer turnovers during the season than e0	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
what player did not score 3 rebounds	SW.filter var-s string-num_rebounds string-!= number3 rebound ( SW.domain string-player ) ) string-player
find those players who have a total number of steals in a given season that is less than the total number of steals acquired by e0 in a given season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
who has had less fouls than e0	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
player who has played more games over a season than player e0 bryan over a season	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_games_played ) ) ( SW.domain string-player ) ) string-player
how many points in a season did e0 have when he had only three assists	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_points
what was the total number of assist in a season for e0 when he had 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_assists
which players have at most 2 positions	SW.countComparative var-s string-position string-<= number2 ( SW.domain string-player ) ) string-player
how many turnovers did e0 have on the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_turnovers
what players scored as many points as e0 over all seasons	SW.filter var-s string-num_points string-= ( SW.getProperty string-player  string-num_points ) ( SW.domain string-player ) ) string-player
player whose assists over a season is at most 3	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-<= ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
player that plays in two positions	SW.countComparative var-s string-position string-<= number2 ( SW.domain string-player ) ) string-player
during which seasons did e0 make 3 blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-season
who has had the least assists	SW.superlative var-s string-min SW.ensureNumericProperty string-num_assists  ( SW.domain string-player ) ) string-player
how many blocks were made by  e0	SW.getProperty string-player  string-num_blocks
how many rebounds did e0 have for the e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_rebounds
number of steals over a season of player e0 wit 3 steals over a season	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_steals
name a player with at least three played games	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string->= ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
which season did e0 have 3 turnovers	SW.getProperty ( SW.filter string-player  string-num_turnovers string-= number3 turnover ) string-season
what was the total number of blocks for e0 in the d1 season	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_blocks
e0 with three assists had how many rebounds	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_rebounds
how many games did e0 play during the season his total number of blocks equaled 3	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_games_played
what is the number of games played by e0 who made 3 rebounds over the season	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-num_games_played
player from player e0 team	SW.filter var-s string-team string-= ( SW.getProperty string-player  string-team ) ( SW.domain string-player ) ) string-player
what players have had more than 3 blocks	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-> ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
which player did not score 3 points	SW.filter var-s string-num_points string-!= number3 point ( SW.domain string-player ) ) string-player
which player has played in the most games	SW.superlative var-s string-max SW.ensureNumericProperty string-num_games_played  ( SW.domain string-player ) ) string-player
season of player e0 who has 3 rebounds over a season	SW.getProperty ( SW.filter string-player  string-num_rebounds string-= number3 rebound ) string-season
what player had at least as many blocks in the season as e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
how many assists did e0 have as e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_assists
in which position did e0 get 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-position
which player has less than 3 fouls total in a season	SW.filter var-s string-num_fouls string-!= number3 foul ( SW.domain string-player ) ) string-player
what player has no more turnovers per season than e0	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
which player has played for the most teams	SW.countSuperlative var-s string-max string-team ( SW.domain string-player ) ) string-player
whats the per season average for points scored while e0 was at e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-num_points
what players made number of rebounds same as  e0 over a season	SW.filter var-s string-num_rebounds string-= ( SW.getProperty string-player  string-num_rebounds ) ( SW.domain string-player ) ) string-player
which player has the highest number of assists	SW.superlative var-s string-max SW.ensureNumericProperty string-num_assists  ( SW.domain string-player ) ) string-player
what team did e0 play for when he had three blocks during a single season	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-team
what was the team of e0  in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-team
players that had three or fewer assists over the season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-<= ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
which player has the least number of points in this season	SW.superlative var-s string-min SW.ensureNumericProperty string-num_points  ( SW.domain string-player ) ) string-player
how many seasons has e0 played	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-season
what team does e0 play for	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-team
for which team e0 made 3 blocks over a season	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-team
who has played more than 3 games	SW.filter var-s SW.ensureNumericProperty string-num_games_played  string-> ( SW.ensureNumericEntity number3 game ) ( SW.domain string-player ) ) string-player
which player made more than 3 blocks over the season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-> ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
what player didnt have 3 assists	SW.filter var-s string-num_assists string-!= number3 assist ( SW.domain string-player ) ) string-player
find a player with 3 or more steals in any one season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string->= ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
how many allseason assists did e0 have along with 3 allseason blocks	SW.getProperty ( SW.filter string-player  string-num_blocks string-= number3 block ) string-num_assists
players with three or more fouls in a season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string->= ( SW.ensureNumericEntity number3 foul ) ( SW.domain string-player ) ) string-player
how many players are there total	.size entity-en.player
name players with turnover amounts in any one season that are less than the turnover amounts attributable to e0 in any one season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-< ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
players who have less than three steals in a season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-< ( SW.ensureNumericEntity number3 steal ) ( SW.domain string-player ) ) string-player
player who has at least 3 assists over a season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string->= ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
what players have no more than three assists over a season	SW.filter var-s SW.ensureNumericProperty string-num_assists  string-<= ( SW.ensureNumericEntity number3 assist ) ( SW.domain string-player ) ) string-player
which player has scored at least as many points as e0	SW.filter var-s SW.ensureNumericProperty string-num_points  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_points ) ) ( SW.domain string-player ) ) string-player
players with less and more than 3 rebounds over all seasons	SW.filter var-s string-num_rebounds string-!= number3 rebound ( SW.domain string-player ) ) string-player
how many rebounds does e0 have each season as a laker	SW.getProperty ( SW.filter string-player  string-team string-= en.team.lakers ) string-num_rebounds
which player takes more fouls than e0 or the same per season	SW.filter var-s SW.ensureNumericProperty string-num_fouls  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_fouls ) ) ( SW.domain string-player ) ) string-player
how many points does e0 average in seasons with 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-num_points
which player has a similar per season rebound average as e0	SW.filter var-s string-num_rebounds string-= ( SW.getProperty string-player  string-num_rebounds ) ( SW.domain string-player ) ) string-player
which player has the minimum number of turnovers of e0	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string->= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
what position did e0 play when he had 3 fouls	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-position
what player has no more than three allseason blocks	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-<= ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
how many rebounds does e0 make per season	SW.getProperty ( SW.filter string-player  string-num_assists string-= number3 assist ) string-num_rebounds
what is the position of e0 in season d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-position
how many blocks did e0 have in three games of the season	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_blocks
how many turnovers did e0 get after getting 3 steals	SW.getProperty ( SW.filter string-player  string-num_steals string-= number3 steal ) string-num_turnovers
how many assists did kboe bryant have when he had 3 steals	SW.getProperty ( SW.filter SW.getProperty en.player.kobe_bryant SW.reverse string-player  string-num_steals string-= number3 steal ) string-num_assists
e0 play e1	SW.getProperty ( SW.filter string-player  string-position string-= e1 ) string-position
number of played games over a season of player e0 whose team is e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_games_played
what players had more points than e0 in d1	SW.getProperty ( SW.filter string-player  string-season string-= d1 ) string-num_points
which player has the largest number of assists over the season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_assists  ( SW.domain string-player ) ) string-player
what is the number of the team	.size entity-en.team
what team does e0 play for	SW.getProperty ( SW.filter string-player  string-team string-= en.team.lakers ) string-team
how many blocks e0 made in the season in which he played 3 games	SW.getProperty ( SW.filter string-player  string-num_games_played string-= number3 game ) string-num_blocks
what players had more 3 or more turnovers in a game	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string->= ( SW.ensureNumericEntity number3 turnover ) ( SW.domain string-player ) ) string-player
how many allseason blocks did e0 have as an e1	SW.getProperty ( SW.filter string-player  string-team string-= e1 ) string-num_blocks
what season did e0 score 3 points	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-season
what position is e0	SW.getProperty ( SW.filter string-player  string-num_fouls string-= number3 foul ) string-position
what position did e0 get 3 points as	SW.getProperty ( SW.filter string-player  string-num_points string-= number3 point ) string-position
which player belongs to e0  steam	SW.filter var-s string-team string-= ( SW.getProperty string-player  string-team ) ( SW.domain string-player ) ) string-player
name a player who has had more blocks than e0	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_blocks ) ) ( SW.domain string-player ) ) string-player
what player has the most steals during a single season	SW.superlative var-s string-max SW.ensureNumericProperty string-num_steals  ( SW.domain string-player ) ) string-player
which player does not belong to the e0 team	SW.filter var-s string-team string-!= e0 ( SW.domain string-player ) ) string-player
player whose steals over a season are not more than steals player e0 over a season	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
what player had more than 3 blocks this season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string-> ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
what player has had more turnovers than e0 during a season	SW.filter var-s SW.ensureNumericProperty string-num_turnovers  string-> ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_turnovers ) ) ( SW.domain string-player ) ) string-player
player having not less than 3 blocks over a season	SW.filter var-s SW.ensureNumericProperty string-num_blocks  string->= ( SW.ensureNumericEntity number3 block ) ( SW.domain string-player ) ) string-player
which player had no more than the number of steals by e0	SW.filter var-s SW.ensureNumericProperty string-num_steals  string-<= ( SW.ensureNumericEntity ( SW.getProperty string-player  string-num_steals ) ) ( SW.domain string-player ) ) string-player
what is the location of e0 startup	SW.filter ( SW.filter entity-en.location SW.reverse string-location string-= e0 ) SW.reverse string-location string-= e0
location is same as the location of three hours long meeting	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-length string-= number3 en.hour )
important meetings at e0	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-location string-= e0
show me all meetings that e0 is not attending	SW.filter entity-en.meeting string-attendee string-!= e0
e0 end time	SW.getProperty e0 string-end_time
what meeting has a start time at the end time of e0	SW.filter entity-en.meeting string-start_time string-= SW.getProperty e0 string-end_time
what meeting is being held at the e0	SW.filter entity-en.meeting string-location string-= e0
which meetings are significant	SW.filter entity-en.meeting string-is_important
show me all meetings e0 attended on d1	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-date string-= d1
what important meeting started at d0	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-start_time string-= d0
what meeting has an end time of at least d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string->= ( SW.ensureNumericEntity d0 )
show me locations with the fewest meetings	SW.countSuperlative entity-en.location string-min SW.reverse string-location entity-en.meeting
meeting no longer than duration of e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
meetings that start after d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-> ( SW.ensureNumericEntity d0 )
what meeting has two locations	SW.countComparative entity-en.meeting string-location string-<= number2
what is the location of the meeting that e0 is attending	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-attendee string-= e0 )
which meetings are scheduled to end at d0	SW.filter entity-en.meeting string-end_time string-= d0
show me all meetings scheduled to run for 3 hours	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity number3 en.hour )
places that house at least one meeting	SW.countSuperlative entity-en.location string-min SW.reverse string-location entity-en.meeting
what meeting has the shortest time	SW.superlative entity-en.meeting string-min SW.ensureNumericProperty string-end_time
meetings that end later than the e0 meeting	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
meeting which is on d0 or d1	SW.filter entity-en.meeting string-date string-= SW.concat
is this meeting three hours long or an hour long	SW.concat
meetings that are shorter than three hours	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity number3 en.hour )
show me all people who have attended more than two meetings	SW.countComparative entity-en.person SW.reverse string-attendee string-> number2 entity-en.meeting
important meetings	SW.filter entity-en.meeting string-is_important
what meeting is no greater than one to three hours	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.concat )
how many meetings are there	.size entity-en.meeting
meeting which has minimum two attendees	SW.countComparative entity-en.meeting string-attendee string->= number2
what person is attending the meeting that starts at d0	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-start_time string-= d0 )
who is attending the e0 for the meeting	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-location string-= e0 )
meetings that do not start at d0	SW.filter entity-en.meeting string-start_time string-!= d0
where is the threehour long meeting	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-length string-= number3 en.hour )
what meeting ends at the start or after the start of e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
people that do not attend the e0 meeting	SW.filter entity-en.person SW.reverse string-attendee string-!= e0
show me meetings ending at d0 in e0	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-location string-= e0
meetings starting later than d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-< ( SW.ensureNumericEntity d0 )
what meeting has a length greater than e0 startup	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
she me all meetings with a duration between 1 and 3 hours	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.concat )
what meeting has an end time the same as e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
meeting at a single location	SW.countComparative entity-en.meeting string-location string-< number2
how many attendees are there for this meeting	.size entity-en.person
meeting that ends at end time of e0	SW.filter entity-en.meeting string-end_time string-= SW.getProperty e0 string-end_time
what is the length of e0 startup	SW.getProperty e0 string-length
meetings that end at d0 and start at d0	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-start_time string-= d0
meeting that starts no later than end time of e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
meetings on d0	SW.filter entity-en.meeting string-date string-= d0
which meetings end at d0	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-end_time string-= d0
show me meetings on d0 with e0	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-date string-= d0
what meeting starts before d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-< ( SW.ensureNumericEntity SW.concat )
meetings on d0 that end at d1	SW.filter ( SW.filter entity-en.meeting string-date string-= d0 ) string-end_time string-= d1
show me meetings that have two attendees	SW.countComparative entity-en.meeting string-attendee string-= number2
meetings ending at d0 that are three hours long	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-end_time string-= d0
show me all meetings ending after d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-> ( SW.ensureNumericEntity SW.concat )
find all meetings which begin on d0 or d1	SW.concat
meeting which starts at d0 at e0	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-location string-= e0
what meeting has an end time of d0 on jan2	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-date string-= date:2015:1:2
meeting held before the e0 meeting	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-date  )
show me meetings that share location with the e0 meeting	SW.filter entity-en.meeting string-location string-= ( SW.filter entity-en.location SW.reverse string-location string-= e0 )
meeting which starts at d0	SW.filter entity-en.meeting string-start_time string-= d0
three hours long important meeting	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-is_important
show me all meetings with lengths that either less or more than three hours	SW.filter entity-en.meeting string-length string-!= number3 en.hour
meetings that are three hours long that start at d0	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-length string-= number3 en.hour
important meetings attended by e0	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-attendee string-= e0
show me all meetings not happening at e0	SW.filter entity-en.meeting string-location string-!= e0
which meetings end when e0 is scheduled to start	SW.filter entity-en.meeting string-end_time string-= SW.getProperty e0 string-start_time
d0 meeting	SW.filter ( SW.filter entity-en.meeting string-date string-= d0 ) string-date string-= d0
what meeting has a date of d0 at e0	SW.filter ( SW.filter entity-en.meeting string-date string-= d0 ) string-location string-= e0
what meetings have a start time of d0 or d1	SW.filter entity-en.meeting string-start_time string-= SW.concat
meeting before d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-< ( SW.ensureNumericEntity d0 )
meeting ends after d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-> ( SW.ensureNumericEntity d0 )
show me all meetings e0 is attending which are three hours long	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-attendee string-= e0
meetings that do not end at d0	SW.filter entity-en.meeting string-end_time string-!= d0
what time does the e0 stand up end	SW.getProperty e0 string-end_time
show me the dates of all e0 meetings	SW.getProperty e0 string-date
meeting which has longest end time	SW.superlative entity-en.meeting string-max SW.ensureNumericProperty string-end_time
show me all meetings in greenber cafe that will run three hours	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-location string-= en.location.greenberg_cafe
meeting with largest number of attendees	SW.countSuperlative entity-en.meeting string-max string-attendee
show me all meetings ending at d0 which are scheduled to be three hours long	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-length string-= number3 en.hour
what meeting has an end time smaller than e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
what is the meeting that take place immediately before the e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
show me all meetings scheduled to be less than three hours or less than one hour	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.concat )
show me all locations which do not host the e0	SW.filter entity-en.location SW.reverse string-location string-!= e0
what is the shortest meeting	SW.superlative entity-en.meeting string-min SW.ensureNumericProperty string-length
who is attending e0	SW.getProperty e0 string-attendee
what meeting starts earlier than d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-< ( SW.ensureNumericEntity d0 )
locations that house meetings on d0	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-date string-= d0 )
where will e0 and e1 take place	SW.filter entity-en.location SW.reverse string-location string-= SW.concat
show me all meetings ending at d0 or d1	SW.filter entity-en.meeting string-end_time string-= SW.concat
show me all meetings three hours long	SW.filter entity-en.meeting string-length string-= number3 en.hour
three hour meeting with e0 as attendee	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-length string-= number3 en.hour
meetings that start earlier than the e0 meeting	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
important meeting on d0	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-date string-= d0
what meeting has the length of most e0 startup meetings	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
show me all meetings which e0 has attended that end at d1	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d1 ) string-attendee string-= e0
what meeting is e0 attending at d1	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-start_time string-= d1
who is attending the meeting on d0	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-date string-= d0 )
show me all meetings marked important	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-is_important
what location is not the same as e0	SW.filter entity-en.location SW.reverse string-location string-!= e0
who has attended the least number of meetings	SW.countSuperlative entity-en.person string-min SW.reverse string-attendee entity-en.meeting
show me all meetings starting at the same time as the e0	SW.filter entity-en.meeting string-start_time string-= SW.getProperty e0 string-start_time
where is my d0 meeting	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-date string-= d0 )
what meeting ends at d0 and e0 is attending	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-end_time string-= d0
show me all meetings which happened at the same location as the least number of meetings	SW.countSuperlative entity-en.location string-min SW.reverse string-location entity-en.meeting
show me meetings that take 3 hours and are with e0	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-attendee string-= e0
show me all meetings three hours long happening at the e0	SW.filter ( SW.filter entity-en.meeting string-location string-= e0 ) string-length string-= number3 en.hour
show me all meetings that end after the e0 stand up meeting starts	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
what meeting has e0 attending and starts at d1	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-start_time string-= d1
what meeting is longer than e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
show me all meetings no longer than the e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
show me the locations of all meetings three hours in length	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-length string-= number3 en.hour )
what is the location of the meting with least number of attendees	SW.countSuperlative entity-en.location string-min SW.reverse string-location entity-en.meeting
who is at the e0 or e1	SW.filter entity-en.person SW.reverse string-attendee string-= SW.concat
what meeting had someone who went to e0	SW.filter entity-en.meeting string-attendee string-= SW.getProperty e0 string-attendee
show me all meetings on d0 ending at d1	SW.filter ( SW.filter entity-en.meeting string-date string-= d0 ) string-end_time string-= d1
meeting occurs on later date than e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-date  )
show me all meetings happening on d0 or d1	SW.filter entity-en.meeting string-date string-= SW.concat
show me all meetings beginning earlier than the e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
show me meetings at e0 on d1	SW.filter ( SW.filter entity-en.meeting string-location string-= e0 ) string-date string-= d1
person is attendee of e0 or e1	SW.filter entity-en.person SW.reverse string-attendee string-= SW.concat
show me the meetings scheduled earliest in the month	SW.superlative entity-en.meeting string-min SW.ensureNumericProperty string-date
locations of the e0 meeting or e1 meeting	SW.filter entity-en.location SW.reverse string-location string-= SW.concat
meetings that end the earliest	SW.superlative entity-en.meeting string-min SW.ensureNumericProperty string-end_time
show me the locations of all meetings on d0	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-date string-= d0 )
meeting ends no later than start time of e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
show me all meetings the same length of the e0	SW.filter entity-en.meeting string-length string-= SW.getProperty e0 string-length
meetings that are not on d0	SW.filter entity-en.meeting string-date string-!= d0
what meeting has the earliest start time	SW.superlative entity-en.meeting string-min SW.ensureNumericProperty string-start_time
person attending the most meetings	SW.countSuperlative entity-en.person string-max SW.reverse string-attendee entity-en.meeting
what is the number of the meeting	.size entity-en.meeting
how many meetings are scheduled	.size entity-en.meeting
show me any meetings which e0 has attended and take place at e1	SW.filter ( SW.filter entity-en.meeting string-location string-= e1 ) string-attendee string-= e0
what meeting has a date no later than d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string->= ( SW.ensureNumericEntity d0 )
meetings on d0 that e0 attends	SW.filter ( SW.filter entity-en.meeting string-date string-= d0 ) string-attendee string-= e0
what meeting has the latest start time	SW.superlative entity-en.meeting string-max SW.ensureNumericProperty string-start_time
what meeting is as long or longer than e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
three hour long meeting at e0	SW.filter ( SW.filter entity-en.meeting string-location string-= e0 ) string-length string-= number3 en.hour
meeting that starts at d0 or earlier	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string->= ( SW.ensureNumericEntity d0 )
where are the meetings ending at d0 going to be held	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-end_time string-= d0 )
show me all meetings which begin at the same time the e0 ends	SW.filter entity-en.meeting string-start_time string-= SW.getProperty e0 string-end_time
what meeting ends at d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string->= ( SW.ensureNumericEntity SW.concat )
meetings that are three hours long and end at d0	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-length string-= number3 en.hour
show me all of the people who did not attend the e0 meeting	SW.filter entity-en.person SW.reverse string-attendee string-!= e0
three hour meeting at e0	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-location string-= e0
show me all meetings that start no earlier than d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string->= ( SW.ensureNumericEntity d0 )
show me all meetings that begin at the time the e0 meeting ends	SW.filter entity-en.meeting string-start_time string-= SW.getProperty e0 string-end_time
meetings held later than d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-> ( SW.ensureNumericEntity d0 )
what location is the meeting that ends at d0	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-end_time string-= d0 )
person attending same meeting as e0	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-attendee string-= e0 )
when is e0 or e1	SW.concat
what meeting has an end time earlier than e0 startup	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
show me meetings that have the same location as e0 startup	SW.filter entity-en.meeting string-location string-= SW.getProperty e0 string-location
show me important meetings	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-is_important
meeting starts no later than start time of e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
what meetings run for the shortest length of time	SW.superlative entity-en.meeting string-min SW.ensureNumericProperty string-length
what important meeting has a length of three hours	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-length string-= number3 en.hour
meetings that end at or after d0 or at or after d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string->= ( SW.ensureNumericEntity SW.concat )
show me all meetings not beginning at d0	SW.filter entity-en.meeting string-start_time string-!= d0
what meeting was shorter or longer than three hours	SW.filter entity-en.meeting string-length string-!= number3 en.hour
e0 start time	SW.getProperty e0 string-start_time
show me all meetings on d0 which are also 3 hours long	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-date string-= d0
show me meetings that will end before e0 begins	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
show me meetings not on d0	SW.filter entity-en.meeting string-date string-!= d0
which location hosts the most meetings	SW.countSuperlative entity-en.location string-max SW.reverse string-location entity-en.meeting
d0 meeting with e0 as attendee	SW.filter ( SW.filter entity-en.meeting string-date string-= d0 ) string-attendee string-= e0
e0 startup attendee	SW.getProperty e0 string-attendee
show me all meetings happening after the e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-date  )
what location is most meetings	SW.countSuperlative entity-en.location string-max SW.reverse string-location entity-en.meeting
show me the meeting which has happened at the most locations	SW.countSuperlative entity-en.meeting string-max string-location
show me all meetings that start later than d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-> ( SW.ensureNumericEntity d0 )
meetings attended by e0 that are three hours long	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-length string-= number3 en.hour
show me all meetings labeled as important that start at d0	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-is_important
show me the meetings with the latest end times	SW.superlative entity-en.meeting string-max SW.ensureNumericProperty string-end_time
show me meetings which do not conclude at d0	SW.filter entity-en.meeting string-end_time string-!= d0
show me all meetings at least one hour or three hours long	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.concat )
meetings that end after the e0 startup meeting starts	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
show me all meetings e0 has attended which begin at d1	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d1 ) string-attendee string-= e0
show me all meetings beginning later than the e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
show me all meetings which begin at the same time or earlier than the e0 ends	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
meetings held on or after d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string->= ( SW.ensureNumericEntity d0 )
show me all meetings on d0 happening at the e0	SW.filter ( SW.filter entity-en.meeting string-location string-= e0 ) string-date string-= d0
meeting at location of e0	SW.filter entity-en.meeting string-location string-= SW.getProperty e0 string-location
important meetings that are three hours long	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-is_important
meeting which starts before the start time of e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
e0 date	SW.getProperty e0 string-date
show me meetings before d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-< ( SW.ensureNumericEntity d0 )
show me all meetings that end by d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string->= ( SW.ensureNumericEntity d0 )
show me all meetings happening at the same location as the e0	SW.filter entity-en.meeting string-location string-= ( SW.filter entity-en.location SW.reverse string-location string-= e0 )
show me meetings starting later than d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-> ( SW.ensureNumericEntity SW.concat ) )
show me all meetings that end at d0 on d1	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-date string-= d1
meetings that end before d0 or before d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-< ( SW.ensureNumericEntity SW.concat )
show me all meetings on d0 beginning at d1	SW.filter ( SW.filter entity-en.meeting string-date string-= d0 ) string-start_time string-= d1
what meeting start time is at the end of e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
meeting starts at d0 or d1 at the earliest	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-<= ( SW.ensureNumericEntity SW.concat )
show me all meetings marked important which end at d0	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-is_important
meetings that are attended by e0 and are three hours long	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-attendee string-= e0
show meetings that start at d0 in e0	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-location string-= e0
show me all meetings at the same location as the e0	SW.filter entity-en.meeting string-location string-= SW.getProperty e0 string-location
meetings that are three hours or longer	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity number3 en.hour )
where is the important meeting being held	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-is_important )
show me all meetings which end at the same time as the e0 ends	SW.filter entity-en.meeting string-end_time string-= SW.getProperty e0 string-end_time
show me all meetings located at e0	SW.filter ( SW.filter entity-en.meeting string-location string-= e0 ) string-location string-= e0
show me all meetings that last longer than three hours	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.concat )
which meeting is attended by the most people	SW.countSuperlative entity-en.meeting string-max string-attendee
meeting which starts at d0 on d1	SW.filter ( SW.filter entity-en.meeting string-date string-= d1 ) string-start_time string-= d0
show me all meetings with two attendees	SW.countComparative entity-en.meeting string-attendee string-= number2
meeting that starts later than start of e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
show me any meetings located at e0 or e1	SW.filter entity-en.meeting string-location string-= SW.concat
show me meetings starting before d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-<= ( SW.ensureNumericEntity SW.concat d0 ) )
show me all meetings happening on days other than d0	SW.filter entity-en.meeting string-date string-!= d0
what meeting starts before e0 ends	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
what meeting starts at d0 on d1	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-date string-= d1
what meeting has fan end time after d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-> ( SW.ensureNumericEntity SW.concat )
what meetings have the same duration as the e0 stand up meeting	SW.filter entity-en.meeting string-length string-= SW.getProperty e0 string-length
which meetings are held at e0	SW.filter entity-en.meeting string-location string-= e0
what meetings on d0 end at d1	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d1 ) string-date string-= d0
show me meetings on d0 in e0	SW.filter ( SW.filter entity-en.meeting string-date string-= d0 ) string-location string-= e0
meetings that are three hours long or one hour long	SW.filter entity-en.meeting string-length string-= SW.concat
show me all meetings happening on the same day or before the e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-date  )
show me meeting locations with e0	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-attendee string-= e0 )
what meeting has a start time earlier than the e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
what meetings end at d0 or d1	SW.filter entity-en.meeting string-end_time string-= SW.concat
show me all meetings three hours long which are marked as important	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-is_important
important meeting with e0 as attendee	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-attendee string-= e0
what meeting starts at least at d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string->= ( SW.ensureNumericEntity SW.concat )
what is the location of the d0 meeting	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-date string-= d0 )
show me all people attending either the e0 meeting or e1	SW.filter entity-en.person SW.reverse string-attendee string-= SW.concat
meeting ends at least at start time of e0 roundup	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
what important meeting is located at e0	SW.filter ( SW.filter entity-en.meeting string-location string-= e0 ) string-is_important
meetings at e0 that start at d1	SW.filter ( SW.filter entity-en.meeting string-location string-= e0 ) string-start_time string-= d1
show me all meetings starting earlier than d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-< ( SW.ensureNumericEntity d0 )
what meeting ending at d0 is e0 attending	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-end_time string-= d0
what important meetings are scheduled for d0	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-date string-= d0
meeting which has shortest start time	SW.superlative entity-en.meeting string-min SW.ensureNumericProperty string-start_time
meetings that start after the e0 meeting starts	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
meetings held in the most locations	SW.countSuperlative entity-en.meeting string-max string-location
show me all meetings scheduled to be three hours or one hour long	SW.concat
meetings that start at or before the time of the e0 meeting	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
meetings that end earlier than the e0 meeting	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
show me all meetings happening after d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-> ( SW.ensureNumericEntity SW.concat )
which meetings will take as much time as e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
who are the attendees for fo the meetings in e0	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-location string-= e0 )
meetings held before d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-< ( SW.ensureNumericEntity SW.concat )
show me all meetings happening before d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-< ( SW.ensureNumericEntity SW.concat )
meetings that end at or after d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string->= ( SW.ensureNumericEntity d0 )
meeting longer than one or three hours	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.concat )
show me all important meetings that e0 is attending	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-is_important
show me all important meetings that end at d0	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-end_time string-= d0
show me all meetings beginning at d0	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-start_time string-= d0
location features the largest number of meetings	SW.countSuperlative entity-en.location string-max SW.reverse string-location entity-en.meeting
show me meetings before d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-< ( SW.ensureNumericEntity SW.concat )
what meeting has the same date as e0 startup	SW.filter entity-en.meeting string-date string-= SW.getProperty e0 string-date
show me all meetings that have at most two locations	SW.countComparative entity-en.meeting string-location string-<= number2
show me all 3 hour long meetings that end at d0	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-length string-= number3 en.hour
meetings attended by two people	SW.countComparative entity-en.meeting string-attendee string-= number2
meetings that end at or after the e0 meeting ends	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
show me meeting which end before e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
show me all meetings which end later than the e0 begins	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
person who attends important meeting	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-is_important )
what meeting has a date of d0 and has e0 attending	SW.filter ( SW.filter entity-en.meeting string-date string-= d0 ) string-attendee string-= e0
what meeting ends no later than d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-<= ( SW.ensureNumericEntity SW.concat )
meetings attended by e0 that start at d1	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-start_time string-= d1
person attending at least two meetings	SW.countComparative entity-en.person SW.reverse string-attendee string->= number2 entity-en.meeting
people that attend at least two meetings	SW.countComparative entity-en.person SW.reverse string-attendee string->= number2 entity-en.meeting
show me meetings starting at d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string->= ( SW.ensureNumericEntity SW.concat )
show me any meetings which end at d0	SW.filter entity-en.meeting string-end_time string-= d0
what meeting has two attendees or less	SW.countComparative entity-en.meeting string-attendee string-<= number2
show me all meetings which are exactly one hour or exactly three hours long	SW.filter entity-en.meeting string-length string-= SW.concat
where is the e0 meeting located	SW.getProperty e0 string-location
meeting in which e0 is attending which starts at d1	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-start_time string-= d1
meetings that are three hours or longer or an hour or longer	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.concat )
who is attending the same meeting as e0	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-attendee string-= e0 )
important meetings that end at d0	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-is_important
what meeting will take place no later than d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-<= ( SW.ensureNumericEntity d0 )
what meeting ends at most at d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-<= ( SW.ensureNumericEntity d0 )
what meeting does not start at d0	SW.filter entity-en.meeting string-start_time string-!= d0
what meeting is on d0 or earlier	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-<= ( SW.ensureNumericEntity d0 )
show me all d0 meetings that e0 is attending	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-attendee string-= e0
who is attending e0	SW.getProperty e0 string-attendee
what are the areas where two or more meetings take place	SW.countComparative entity-en.location SW.reverse string-location string->= number2 entity-en.meeting
what is the location of the important meeting	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-is_important )
show me all meetings attended by e0 which are three hours long	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-length string-= number3 en.hour
what meetings take place on d0 in e0	SW.filter ( SW.filter entity-en.meeting string-location string-= e0 ) string-date string-= d0
what time does the e0 meeting end	SW.getProperty e0 string-end_time
how long is the meeting	string-sum SW.getProperty entity-en.meeting string-length
what three hour meeting starts at d0	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-length string-= number3 en.hour
show me the meetings which end no later than the e0 ends	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
show me meetings not at e0	SW.filter entity-en.meeting string-location string-!= e0
meeting which is on the date of first e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-date  )
show me meetings that end before the e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
show all meetings that end at d0 on d1	SW.filter ( SW.filter entity-en.meeting string-date string-= d1 ) string-end_time string-= d0
show me all meetings ending later than the e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
show me all meetings on d0 at the e0	SW.filter ( SW.filter entity-en.meeting string-date string-= d0 ) string-location string-= e0
show me all three hour meetings that end at d0	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-end_time string-= d0
show me meetings at d0 with e0	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-attendee string-= e0
meetings that start later than the e0 meeting	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
what meetings are the same day as the e0 meeting	SW.filter entity-en.meeting string-date string-= SW.getProperty e0 string-date
people attending meetings that end at d0	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-end_time string-= d0 )
show me any meetings that e0 has not attended	SW.filter entity-en.meeting string-attendee string-!= e0
what meeting is on d0 at d1	SW.filter ( SW.filter entity-en.meeting string-date string-= d0 ) string-start_time string-= d1
show me all meetings that end at d0	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-end_time string-= d0
what meeting has an earlier date than d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-< ( SW.ensureNumericEntity d0 )
meetings that end later than d0 or later than d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-> ( SW.ensureNumericEntity SW.concat )
meeting held in the fewest number of locations	SW.countSuperlative entity-en.meeting string-min string-location
location of at least two meetings is the location	SW.countComparative entity-en.location SW.reverse string-location string->= number2 entity-en.meeting
what meeting starts earlier than the end time of e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
show me all meetings that start at d0 and last three hours	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-length string-= number3 en.hour
what meeting is before e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-date  )
show me any meetings on d0 beginning at d1	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d1 ) string-date string-= d0
how long is this meeting	string-sum SW.getProperty entity-en.meeting string-length
meetings that are the same length as the e0 meeting	SW.filter entity-en.meeting string-length string-= SW.getProperty e0 string-length
show me all meetings happening later than d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-> ( SW.ensureNumericEntity SW.concat )
person that attends the fewest meetings	SW.countSuperlative entity-en.person string-min SW.reverse string-attendee entity-en.meeting
show me any meetings that e0 or e1 have attended	SW.concat
show me meetings that last three hours	SW.filter entity-en.meeting string-length string-= number3 en.hour
what is the start time for the e0 stand up meeting	SW.getProperty e0 string-start_time
what is the location of the important meeting	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-is_important )
show me all meetings ending at d0 that e0 is attending	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-end_time string-= d0
what person is attending e0	SW.filter ( SW.filter entity-en.person SW.reverse string-attendee string-= e0 ) SW.reverse string-attendee string-= e0
show me any meetings that are either the e0 or e1	SW.concat
what meeting did e0 not attend	SW.filter entity-en.meeting string-attendee string-!= e0
which meeting is the shortest	SW.superlative entity-en.meeting string-min SW.ensureNumericProperty string-length
person who attends e0	SW.filter entity-en.person SW.reverse string-attendee string-= e0
who is the person attending the e0 stand up meeting	SW.filter ( SW.filter entity-en.person SW.reverse string-attendee string-= e0 ) SW.reverse string-attendee string-= e0
location different from location of e0	SW.filter entity-en.location SW.reverse string-location string-!= e0
how long does the average meeting last	string-avg SW.getProperty entity-en.meeting string-length
show me all attendees of meetings ending at d0	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-end_time string-= d0 )
show me all attendees of meetings on d0	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-date string-= d0 )
what meeting starts when e0 ends	SW.filter entity-en.meeting string-start_time string-= SW.getProperty e0 string-end_time
what meeting is one hour or longer	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.concat )
meetings on or before d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-<= ( SW.ensureNumericEntity d0 )
meetings that start before the e0 meeting ends	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
meeting featuring e0 as attendee starting at d1	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d1 ) string-attendee string-= e0
what meeting ended after d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-> ( SW.ensureNumericEntity d0 )
what person is attending the meeting at e0	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-location string-= e0 )
show me all meetings happening on or before d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-<= ( SW.ensureNumericEntity d0 )
what meeting ends at d0 on d1	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-date string-= d1
meetings that are attended by people that also attend the e0 meeting	SW.filter entity-en.meeting string-attendee string-= ( SW.filter entity-en.person SW.reverse string-attendee string-= e0 )
show me meetings that start before the e0 meeting ends	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
what meeting was shorter than three hours	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.concat )
show me all meetings happening on or after the date of the e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-date  )
show me meetings before the e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-date  )
what meetings have the same date as the e0 meeting	SW.filter entity-en.meeting string-date string-= SW.getProperty e0 string-date
show me where the e0 and e1 is happening	SW.filter entity-en.location SW.reverse string-location string-= SW.concat
show me all meetings on d0	SW.filter ( SW.filter entity-en.meeting string-date string-= d0 ) string-date string-= d0
show me the meeting that starts at d0 on d1	SW.filter ( SW.filter entity-en.meeting string-date string-= d1 ) string-start_time string-= d0
show me all meetings starting at or before d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-<= ( SW.ensureNumericEntity d0 )
show me all meetings marked as important happening at e0	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-location string-= e0
meeting which ends at or after the end time of e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
e0 duration	SW.getProperty e0 string-length
meetings that start at or before d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-<= ( SW.ensureNumericEntity d0 )
what meeting has the smallest length	SW.superlative entity-en.meeting string-min SW.ensureNumericProperty string-length
show me all meetings with either e0 or e1 attending	SW.filter entity-en.meeting string-attendee string-= SW.concat
person attending d0 meeting	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-date string-= d0 )
show me the dates of the e0 meetings	SW.getProperty e0 string-date
who is attending the d0 meeting	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-start_time string-= d0 )
show me meetings with e0 or e1	SW.filter entity-en.meeting string-attendee string-= SW.concat
which meetings in e0 will last three hours	SW.filter ( SW.filter entity-en.meeting string-location string-= e0 ) string-length string-= number3 en.hour
show me all meetings marked as important	SW.filter entity-en.meeting string-is_important
two attendees are at the meeting	SW.countComparative entity-en.meeting string-attendee string-= number2
show me all meetings e0 has attended which have ended at d1	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-end_time string-= d1
meetings that are the same length or shorter than the e0 meeting	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
show me all meetings scheduled for three hourse	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-length string-= number3 en.hour
find me a meeting shorter than three hours	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity number3 en.hour )
meetings that start after d0 or after d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-> ( SW.ensureNumericEntity SW.concat )
meetings on d0 that are three hours long	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-date string-= d0
what is the meeting that starts at d0 in e0	SW.filter ( SW.filter entity-en.meeting string-location string-= e0 ) string-start_time string-= d0
meetings that end at d0 or d1	SW.filter entity-en.meeting string-end_time string-= SW.concat
meetings attended by the smallest number of people	SW.countSuperlative entity-en.meeting string-min string-attendee
what meeting has the same location as e0	SW.filter entity-en.meeting string-location string-= ( SW.filter entity-en.location SW.reverse string-location string-= e0 )
which meeting has the fewest scheduled locations	SW.countSuperlative entity-en.meeting string-min string-location
show me locations of all meetings which are marked as important	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-is_important )
show me all meetings with two or more people attending	SW.countComparative entity-en.meeting string-attendee string->= number2
who attends the most meetings	SW.countSuperlative entity-en.person string-max SW.reverse string-attendee entity-en.meeting
locations of important meetings	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-is_important )
show me all meetings ending no later than d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-<= ( SW.ensureNumericEntity d0 )
what meeting ends ealiest in the day	SW.superlative entity-en.meeting string-min SW.ensureNumericProperty string-end_time
meetings that start before d0 or before d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-< ( SW.ensureNumericEntity SW.concat )
show me the attendees for all meetings on d0	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-date string-= d0 )
show me all meetings at the e0 ending at d1	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d1 ) string-location string-= e0
show me all meetings happening on or after d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string->= ( SW.ensureNumericEntity d0 )
what meeting did e0 attend at the e1	SW.filter ( SW.filter entity-en.meeting string-location string-= e1 ) string-attendee string-= e0
show me all meetings that start no earlier than when the e0 meeting ends	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
show me the people attending the most meetings	SW.countSuperlative entity-en.person string-min SW.reverse string-attendee entity-en.meeting
show me all meetings ending before d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-< ( SW.ensureNumericEntity d0 )
show me all three hour meetings on d0	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-date string-= d0
person who attends the meeting that ends at d0	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-end_time string-= d0 )
locations that do not house the e0 meeting	SW.filter entity-en.location SW.reverse string-location string-!= e0
location where more than two meetings are held	SW.countComparative entity-en.location SW.reverse string-location string-> number2 entity-en.meeting
shortest meeting	SW.superlative entity-en.meeting string-min SW.ensureNumericProperty string-length
what meeting ends before the start of e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
what meeting has the longest time	SW.superlative entity-en.meeting string-max SW.ensureNumericProperty string-end_time
show me all meetings which begin earlier than d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-< ( SW.ensureNumericEntity SW.concat )
meetings attended by two or more people	SW.countComparative entity-en.meeting string-attendee string->= number2
meeting whose location is same as the  location of e0	SW.filter entity-en.meeting string-location string-= ( SW.filter entity-en.location SW.reverse string-location string-= e0 )
is the meeting at d0 or d1	SW.concat
what is the location that more than two meetings will be held at	SW.countComparative entity-en.location SW.reverse string-location string-> number2 entity-en.meeting
show me all meeting that take place by d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-<= ( SW.ensureNumericEntity SW.concat )
meetings that are not held at e0	SW.filter entity-en.meeting string-location string-!= e0
people attending meetings that e0 attends	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-attendee string-= e0 )
what important meetings start at d0	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-is_important
important meetings that start at d0	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-start_time string-= d0
when is the e0	SW.getProperty e0 string-start_time
meeting on d0 with e0 as attendee	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-date string-= d0
what location is the meeting that starts at d0	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-start_time string-= d0 )
what important meeting has e0 attending	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-attendee string-= e0
what meeting is on or before d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-<= ( SW.ensureNumericEntity SW.concat )
show me all people who have attended at least two meetings	SW.countComparative entity-en.person SW.reverse string-attendee string->= number2 entity-en.meeting
meeting at e0 which ends at d1	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d1 ) string-location string-= e0
show me all meetings beginning at d0 and all meetings ending at d0	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-end_time string-= d0
what location are the fewest meetings held	SW.countSuperlative entity-en.location string-min SW.reverse string-location entity-en.meeting
what meeting ends at d0 in which e0 is attending	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-attendee string-= e0
meeting ends no later than d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-<= ( SW.ensureNumericEntity SW.concat )
show me all meetings attended by people who have also attended the e0	SW.filter entity-en.meeting string-attendee string-= ( SW.filter entity-en.person SW.reverse string-attendee string-= e0 )
what meeting is the same length as that of e0 startup	SW.filter entity-en.meeting string-length string-= SW.getProperty e0 string-length
meeting that ends sooner than e0 ends	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
show me meetings at e0	SW.filter ( SW.filter entity-en.meeting string-location string-= e0 ) string-location string-= e0
what important meeting has a location at e0	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-location string-= e0
show me all locations that are used for more than two meetings	SW.countComparative entity-en.location SW.reverse string-location string-> number2 entity-en.meeting
what is the average length of all the meetings	string-avg SW.getProperty entity-en.meeting string-length
show me all meetings in e0 or e1	SW.filter entity-en.meeting string-location string-= SW.concat
meeting of smallest duration	SW.superlative entity-en.meeting string-min SW.ensureNumericProperty string-end_time
person attending three hour meeting	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-length string-= number3 en.hour )
what meeting is on d0 or d1	SW.filter entity-en.meeting string-date string-= SW.concat
meetings that are three hours or less or one hour or less	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.concat )
what is the number of the location	.size entity-en.location
meeting that ends at start time of e0	SW.filter entity-en.meeting string-end_time string-= SW.getProperty e0 string-start_time
duration of meeting	string-sum SW.getProperty entity-en.meeting string-length
show me the meetings with the least number of different locations	SW.countSuperlative entity-en.meeting string-min string-location
what meeting is at least three hours	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity number3 en.hour )
show me all meetings that e0 is attending	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e0 ) string-attendee string-= e0
locations of meetings that are three hours long	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-length string-= number3 en.hour )
show me all meetings three hours long which end at d0	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-end_time string-= d0
show me the meeting starting latest in the day	SW.superlative entity-en.meeting string-max SW.ensureNumericProperty string-start_time
what meeting has the most amount of locations	SW.countSuperlative entity-en.meeting string-max string-location
what meeting starts at d0	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-start_time string-= d0
meeting that starts at d0 and ends at 1pm	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-start_time string-= d0
how long is the e0 meeting	SW.getProperty e0 string-length
what meeting has the later date	SW.superlative entity-en.meeting string-max SW.ensureNumericProperty string-date
what meeting has a start time at d0 at e0	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-location string-= e0
people attending meetings that start at d0	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-start_time string-= d0 )
what person attends most meetings	SW.countSuperlative entity-en.person string-max SW.reverse string-attendee entity-en.meeting
show me all meetings three hours long at the e0	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-location string-= e0
meeting whose start time is after end time of e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
which meetings are important	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-is_important
show me meetings starting before d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-<= ( SW.ensureNumericEntity d0 )
show me all locations which have had at least two meetings	SW.countComparative entity-en.location SW.reverse string-location string->= number2 entity-en.meeting
show me meetings at fewer than two locations	SW.countComparative entity-en.meeting string-location string-< number2
show me all meetings between d0 and d1	SW.concat
show me meetings happening after d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-> ( SW.ensureNumericEntity d0 )
what meeting had the fewest people show up	SW.countSuperlative entity-en.meeting string-min string-attendee
show the meeting on d0	SW.filter entity-en.meeting string-date string-= d0
show me all meetings which begin after the e0 ends	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
three hour meeting that ends at d0	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-length string-= number3 en.hour
show me the meeting e0 will attend which ends at d1	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d1 ) string-attendee string-= e0
show me all meetings with at least two people attending	SW.countComparative entity-en.meeting string-attendee string->= number2
show me all meetings that begin no later than the time the e0 meeting starts	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
show me any meetings e0 has attended on d1	SW.filter ( SW.filter entity-en.meeting string-date string-= d1 ) string-attendee string-= e0
meetings that start at d0 or d1	SW.filter entity-en.meeting string-start_time string-= SW.concat
what is the average length of a meeting	string-avg SW.getProperty entity-en.meeting string-length
show me meetings with the most locations	SW.countSuperlative entity-en.meeting string-max string-location
show me all meetings which end earlier than the e0 begins	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
meetings with the earliest start time	SW.superlative entity-en.meeting string-min SW.ensureNumericProperty string-start_time
what meetings are imporant and start at d0	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-is_important
meetings that are the same length as or longer than the e0 meeting	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
start time of the meeting is after the start time of e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
people that attend more than two meetings	SW.countComparative entity-en.person SW.reverse string-attendee string-> number2 entity-en.meeting
which meeting is scheduled on the earliest date	SW.superlative entity-en.meeting string-min SW.ensureNumericProperty string-date
what meeting has a start time no later than d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-<= ( SW.ensureNumericEntity SW.concat )
what location has more than two meetings	SW.countComparative entity-en.location SW.reverse string-location string-> number2 entity-en.meeting
show me meetings that start before the e0 ends	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
meeting starts later than d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-> ( SW.ensureNumericEntity d0 )
what meetings are scheduled to run for 3 hours	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity number3 en.hour )
show me the meetings which have lasted the longest	SW.superlative entity-en.meeting string-max SW.ensureNumericProperty string-length
show me all meetings less than three hours long	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity number3 en.hour )
meeting with least attendees	SW.countSuperlative entity-en.meeting string-min string-attendee
important meeting	SW.filter entity-en.meeting string-is_important
what is the location that the most number of meetings will be held	SW.countSuperlative entity-en.location string-max SW.reverse string-location entity-en.meeting
what meetings end at the same time as the e0 roundup meeting	SW.filter entity-en.meeting string-end_time string-= SW.getProperty e0 string-end_time
show me all meetings that fall before or after d0	SW.filter entity-en.meeting string-date string-!= d0
how many people attended meetings	.size entity-en.person
what person is attending e0 startup	SW.filter entity-en.person SW.reverse string-attendee string-= e0
meetings that end at d0	SW.filter entity-en.meeting string-end_time string-= d0
which meetings dont start at d0	SW.filter entity-en.meeting string-start_time string-!= d0
show me all meetings at least three hours long	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity number3 en.hour )
show me meetings that take 3 hours	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-length string-= number3 en.hour
what is the most recent meeting	SW.superlative entity-en.meeting string-max SW.ensureNumericProperty string-date
show me all meetings that share an attendee with the e0 meeting	SW.filter entity-en.meeting string-attendee string-= ( SW.filter entity-en.person SW.reverse string-attendee string-= e0 )
meetings that are three hours long or less	SW.filter entity-en.meeting SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity number3 en.hour )
what meeting is at the same location as e0	SW.filter entity-en.meeting string-location string-= SW.getProperty e0 string-location
meeting ends after end time of e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-end_time  )
meetings attended by people that attend the e0 meeting	SW.filter entity-en.meeting string-attendee string-= SW.getProperty e0 string-attendee
meetings held at e0 or e1	SW.filter entity-en.meeting string-location string-= SW.concat
show me all meetings that end at d0 and start at d0	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-start_time string-= d0
what is an important meeting	SW.filter ( SW.filter entity-en.meeting string-is_important ) string-is_important
what meeting has a after d0 or d1	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-> ( SW.ensureNumericEntity SW.concat )
three or one hours	SW.concat
what meeting has a later date than e0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-date  )
what meeting starts the earliest	SW.superlative entity-en.meeting string-min SW.ensureNumericProperty string-start_time
show me all meetings that start no earlier than the e0 meeting	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-date  )
what important meeting has a length of three hours	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-is_important
show me who is attending three hour meetings	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-length string-= number3 en.hour )
people that attend meetings at e0	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-location string-= e0 )
meetings with the latest start time	SW.superlative entity-en.meeting string-max SW.ensureNumericProperty string-start_time
meetings that end at the same as the e0 meeting	SW.filter entity-en.meeting string-end_time string-= SW.getProperty e0 string-end_time
what location does not hold the e0 meeting	SW.filter entity-en.location SW.reverse string-location string-!= e0
meeting share attendee with e0	SW.filter entity-en.meeting string-attendee string-= SW.getProperty e0 string-attendee
show me the location of all meetings attended by e0	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-attendee string-= e0 )
who has attended the least meetings	SW.countSuperlative entity-en.person string-min SW.reverse string-attendee entity-en.meeting
what person is an attendee of at least two meetings	SW.countComparative entity-en.person SW.reverse string-attendee string->= number2 entity-en.meeting
which person is attending an important meeting	SW.filter entity-en.person SW.reverse string-attendee string-= ( SW.filter entity-en.meeting string-is_important )
who attends e0	SW.filter entity-en.person SW.reverse string-attendee string-= e0
what date is the e0 meeting	SW.getProperty e0 string-date
show me meetings that start and end at d0	SW.filter ( SW.filter entity-en.meeting string-end_time string-= d0 ) string-start_time string-= d0
show me all meetings lasting three hours beginning at d0	SW.filter ( SW.filter entity-en.meeting string-length string-= number3 en.hour ) string-start_time string-= d0
what is the number of the person	.size entity-en.person
what meeting starts at the e0 average start time	SW.filter entity-en.meeting SW.ensureNumericProperty string-start_time  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
meetings with the latest end time	SW.superlative entity-en.meeting string-max SW.ensureNumericProperty string-end_time
show me meetings after d0	SW.filter entity-en.meeting SW.ensureNumericProperty string-date  string-> ( SW.ensureNumericEntity SW.concat )
meetings that end at the same time as or later than the start of the e0 meeting	SW.filter entity-en.meeting SW.ensureNumericProperty string-end_time  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-start_time  )
what meetings have the same start time as the week startup meeting	SW.filter entity-en.meeting string-start_time string-= SW.getProperty en.meeting.weekly_standup string-start_time
which people will attend two or more meetings	SW.countComparative entity-en.person SW.reverse string-attendee string-> number2 entity-en.meeting
which meeting has the earliest end time	SW.superlative entity-en.meeting string-min SW.ensureNumericProperty string-end_time
meeting that has maximum 2 attendees	SW.countComparative entity-en.meeting string-attendee string-<= number2
show me all meetings which end at the same time the e0 begins	SW.filter entity-en.meeting string-end_time string-= SW.getProperty e0 string-start_time
meeting that starts and ends at d0	SW.filter ( SW.filter entity-en.meeting string-start_time string-= d0 ) string-end_time string-= d0
which meeting is scheduled on the latest date	SW.superlative entity-en.meeting string-max SW.ensureNumericProperty string-date
meeting which starts at d0 at e0	SW.filter ( SW.filter entity-en.meeting string-location string-= e0 ) string-start_time string-= d0
what time does the e0 meeting end	SW.getProperty e0 string-end_time
what person is an attendee of more than two meetings	SW.countComparative entity-en.person SW.reverse string-attendee string-> number2 entity-en.meeting
meetings at e0 attended by e1	SW.filter ( SW.filter entity-en.meeting string-attendee string-= e1 ) string-location string-= e0
show me all meetings not ending at d0	SW.filter entity-en.meeting string-end_time string-!= d0
meeting shares attendee with e0	SW.filter entity-en.meeting string-attendee string-= ( SW.filter entity-en.person SW.reverse string-attendee string-= e0 )
what is the location of the meeting that will have two or more attendees	SW.countComparative entity-en.location SW.reverse string-location string->= number2 entity-en.meeting
show me meeting locations that start at d0	SW.filter entity-en.location SW.reverse string-location string-= ( SW.filter entity-en.meeting string-start_time string-= d0 )
who is not an attendee of e0	SW.filter entity-en.person SW.reverse string-attendee string-!= e0
select the block that is below e0	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) SW.reverse string-above string-= e0
find the blocks with length and height of 3 inches	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-height string-= number3 en.inch
which special brick is e0	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-is_special
find me all blocks below the smallest numbers of blocks	SW.countSuperlative entity-en.block string-min string-below entity-en.block
find a block between e0 and a block above e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-above string-= e0 )
which brick is 3 or 6 inches high	SW.filter entity-en.block string-height string-= SW.concat
is there a block piled on top of e0	SW.filter entity-en.block string-above string-= e0
find me a block that has a special block to its right	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-is_special )
choose the brick to the right of the 3 inch block	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
find the block above two blocks	SW.countComparative entity-en.block SW.reverse string-below string-= number2 entity-en.block
select a brick to the right of the brick directly below e0	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-below string-= e0 )
what brick is no more than 3 inches high	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity number3 en.inch )
block whose height is at most 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity number3 en.inch )
find the block that has a length of 3 inches and is below e0	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) SW.reverse string-below string-= e0
what is the width of the block	string-sum SW.getProperty entity-en.block string-width
block right of e0 which is 3 inches high	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-height string-= number3 en.inch
e0 block rght of e1	SW.filter ( SW.filter entity-en.block string-right string-= e1 ) string-shape string-= e0
find me all blocks that e0 is left and right of	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) SW.reverse string-right string-= e0
choose a block that is shorter than e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
block left of block above e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-left string-= e0 )
find me all the bricks at least 3 inches long	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity number3 en.inch )
find me a block at most 6 inches wide	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity SW.concat )
select the block whose width is 3 inches	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
select a block that has less than two colors	SW.countComparative entity-en.block string-color string-< number2
select the block that is to the left of e0 and that has a length of 3 inches	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-length string-= number3 en.inch
which brick is wider than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity number3 en.inch )
find me all blocks  with at most two blocks left of it	SW.countComparative entity-en.block SW.reverse string-left string-<= number2 entity-en.block
what block is at least as tall as e0 is wide	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
find me all the blocks at least as long as e0 is wide	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
what block is above the 3 inch high block	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
2 blocks right of e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-right string-= e0 )
find a block with a height no more than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity number3 en.inch )
find me a block that is to the left of two or less blocks	SW.countComparative entity-en.block string-left string-<= number2 entity-en.block
find the block that is above e0	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-above string-= e0 )
find a block of 3 height above e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-height string-= number3 en.inch
find me all blocks with at most two blocks to the left	SW.countComparative entity-en.block string-left string-< number2 entity-en.block
what is the left most block	SW.countSuperlative entity-en.block string-max SW.reverse string-left entity-en.block
block two spaces above e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-above string-= e0 )
block to right of two or more blocks	SW.countComparative entity-en.block string-right string-> number2 entity-en.block
find the block that has the smallest length	SW.superlative entity-en.block string-min SW.ensureNumericProperty string-length
what is the height of e0	SW.getProperty e0 string-height
what brick has more than 2 bricks below it	SW.countComparative entity-en.block SW.reverse string-below string-> number2 entity-en.block
block below e0	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) SW.reverse string-above string-= e0
find a block without a length of 3 inches	SW.filter entity-en.block string-length string-!= number3 en.inch
block two up from e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
block whose height is 3 inches and that is below e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-below string-= e0
what block is below the special block	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-is_special )
what 3 inch brick is to the left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-length string-= number3 en.inch
find me all blocks above e0	SW.filter entity-en.block string-above string-= e0
what is the number of blocks	.size entity-en.block
find me all blocks shorter than e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
find the block that is to the right of e0 with a width of 3 inches	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-width string-= number3 en.inch
select the block above the right one	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block SW.reverse string-above string-= en.block.block1 )
find me all blocks left of 3 inch wide blocks	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
find me all blocks with a length longer than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.concat )
which brick is above e0	SW.filter entity-en.block string-above string-= e0
which brick is 3 inches wide and to the right of e0	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-right string-= e0
select a brick that is at least 3 inches wide	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity number3 en.inch )
find me all the e0 blocks	SW.filter entity-en.block string-shape string-= e0
find me all blocks above that is left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) SW.reverse string-above string-= e0
3 inch wide block above e0	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-width string-= number3 en.inch
which block is below block that is at the right of e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-right string-= e0 )
find me all blocks whose width is smaller than 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.concat )
block that is special and whose length is 3 inches	SW.filter ( SW.filter entity-en.block string-is_special ) string-length string-= number3 en.inch
which brick is farthest to the left	SW.countSuperlative entity-en.block string-min SW.reverse string-right entity-en.block
find me all 3 inch wide blocks right of e0	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-right string-= e0
find me all 3 inch tall blocks that e0 is right of	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) SW.reverse string-right string-= e0
block above block that is below e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-below string-= e0 )
what special blocks are above e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-above string-= e0
3 inch wide block to the right of e0	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-right string-= e0
find me all blocks that is left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-left string-= e0
3 inches long block and that is above e0	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) SW.reverse string-above string-= e0
what block has the same width as block 1s height	SW.filter entity-en.block string-width string-= SW.getProperty en.block.block1 string-height
which block is below the block below e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
which block is the same height as e0	SW.filter entity-en.block string-height string-= SW.getProperty e0 string-height
block which has block 1s below and right	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= en.block.block1 ) string-left string-= en.block.block1
what block is to the left of e0 and has a width of 3 inches	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-width string-= number3 en.inch
block below block right of e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
select the least colorful brick	SW.countSuperlative entity-en.block string-min string-color
find me all blocks below e0	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-below string-= e0
find a block under and to the right of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) SW.reverse string-left string-= e0
block which is at the right of most number of blocks	SW.countSuperlative entity-en.block string-max SW.reverse string-right entity-en.block
find me all blocks with less than 2 shapes	SW.countComparative entity-en.block string-shape string-< number2
find me all 3 inch long blocks  that e0 is left of	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-length string-= number3 en.inch
select a block below e0 that is 3 inches long	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-below string-= e0
what block is left of the least number of blocks	SW.countSuperlative entity-en.block string-min SW.reverse string-left entity-en.block
find me all blocks left of e0 blocks	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-shape string-= e0 )
find the block that has a width of 3 inches and is above e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-width string-= number3 en.inch
find me all the blocks with less than 2 blocks above it	SW.countComparative entity-en.block SW.reverse string-above string-< number2 entity-en.block
select the e0 block that is left of e1	SW.filter ( SW.filter entity-en.block string-left string-= e1 ) string-shape string-= e0
find the block to the left of the largest number of blocks	SW.countSuperlative entity-en.block string-max string-left entity-en.block
find blocks above e0 and below e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-below string-= e0
what blocks are to the left and below e0	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) string-left string-= e0
find a block below and to the right of e0	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-below string-= e0 )
what block is to the left of and below e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
a e0 or a e1	SW.concat
find a block the same color as e0	SW.filter entity-en.block string-color string-= SW.getProperty e0 string-color
select the block with a length of 3 inches that is above e0	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-above string-= e0
what shape is e0	SW.getProperty e0 string-shape
find me all blocks with less than 2 colors	SW.countComparative entity-en.block string-color string-< number2
what block is e0 below and to the left of	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) SW.reverse string-left string-= e0
find the block underneath e0 that is also 3 inches long	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) string-length string-= number3 en.inch
find a block that is beneath either e0 or e1	SW.filter entity-en.block string-below string-= SW.concat
find the block that is right of e0 and has a width of 3 inches	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-width string-= number3 en.inch
select the block that e0 is not below	SW.filter entity-en.block SW.reverse string-below string-!= e0
select the block that is at least 3 inches tall	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity number3 en.inch )
select the special block that is to the right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-is_special
choose a block below the 3 inch brick	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
find the block with 3 inches of width	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) SW.reverse string-above string-= en.block.block1
what color is e0	SW.getProperty e0 string-color
find me all blocks above and to the right of e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) SW.reverse string-left string-= e0
what is the block above that has its length as 3 inches	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
select the block that e0 is above with a width of 3 inches	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) string-width string-= number3 en.inch
block not right of e0	SW.filter entity-en.block SW.reverse string-left string-!= e0
find a block with the same height as e0	SW.filter entity-en.block string-height string-= SW.getProperty e0 string-height
block above e0 block	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-shape string-= e0 )
block that is right of block that is special	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-is_special )
find me all the blocks below and to the left of e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-left string-= e0 )
choose a block that is at most 2 block to the left	SW.countComparative entity-en.block SW.reverse string-left string-<= number2 entity-en.block
choose a block that is left of e0	SW.filter entity-en.block string-left string-= e0
which brick has a width less than the length of e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
find the block with the most colors	SW.countSuperlative entity-en.block string-max string-color
find me the block that is to the right of the special block	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-is_special )
block whose length is at most height of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
select the block that is to the left of two or more blocks	SW.countComparative entity-en.block string-left string->= number2 entity-en.block
block that more than two block is left of	SW.countComparative entity-en.block SW.reverse string-left string-> number2 entity-en.block
block which is at the left of the block below e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
find the longest block	SW.superlative entity-en.block string-max SW.ensureNumericProperty string-length
find a block above at most two blocks	SW.countComparative entity-en.block SW.reverse string-below string-<= number2 entity-en.block
find a block 6 inches or less long	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.concat )
look right of e0 and find 3 inch block	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) SW.reverse string-left string-= e0
find me a 3 inch long special block	SW.filter ( SW.filter entity-en.block string-is_special ) string-length string-= number3 en.inch
find the block taller than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity number3 en.inch )
name a block with e0 below and to the right	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-right string-= e0
e0 block left of e1	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e1 ) string-shape string-= e0
what is the length of e0	SW.getProperty e0 string-length
block that is special and that is left of e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-left string-= e0
block that is below block whose length is 3 inches	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
block less than two blocks below	SW.countComparative entity-en.block SW.reverse string-below string-< number2 entity-en.block
find me all the blocks two blocks left of e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-left string-= e0 )
select the e0 blocks	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-shape string-= e0 )
what is the number of bricks	.size entity-en.block
find me a block with at most two blocks to the left of it	SW.countComparative entity-en.block string-right string-<= number2 entity-en.block
which brick is longer than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity number3 en.inch )
find me a block that is not a e0	SW.filter entity-en.block string-shape string-!= e0
block which does not have e0 above	SW.filter entity-en.block SW.reverse string-above string-!= e0
find me all blocks underneath at least 2 blocks	SW.countComparative entity-en.block string-below string-> number2 entity-en.block
block left of blocks 1 and 2	SW.filter entity-en.block SW.reverse string-left string-= SW.concat
find me all special blocks that e0 is under	SW.filter ( SW.filter entity-en.block string-is_special ) SW.reverse string-below string-= e0
select the block that has a width of 3 inches and is below e0	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) SW.reverse string-below string-= e0
find me all 3 or 6 inch wide blocks	SW.filter entity-en.block string-width string-= SW.concat
select a block that has width and height of 3 inches each	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-height string-= number3 en.inch
find me all the blocks shorter than e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
block whose length is at most length of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
find the block that is to the left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) SW.reverse string-left string-= e0
find a block taller than e0 is wide	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
which is the 3 inches tall block at the left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-height string-= number3 en.inch
which brick is furthest to the left	SW.countSuperlative entity-en.block string-max string-left entity-en.block
what is the length of the block	string-sum SW.getProperty entity-en.block string-length
find me all 3 inch tall blocks that e0 is left of	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-height string-= number3 en.inch
locate a block that is on the left side of the smallest number of blocks	SW.countSuperlative entity-en.block string-min string-left entity-en.block
two blocks right of e0	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
block to the left of e0 thats 3 inches wide	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-width string-= number3 en.inch
select the bricks that are less than 6 inches tall then select the bricks that are less than 3 inches tall	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity SW.concat )
below and left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) SW.reverse string-right string-= e0
get me a block above and to the left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) SW.reverse string-below string-= e0
choose the block above e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-above string-= e0
find me all 3 inch tall blocks that e0 is above	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) SW.reverse string-above string-= e0
block that the most number of block is left of	SW.countSuperlative entity-en.block string-max SW.reverse string-left entity-en.block
find blocks wider than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity number3 en.inch )
block around e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-left string-= e0
second left of e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
what is the average length of the bricks	string-avg SW.getProperty entity-en.block string-length
find me all blocks below two block	SW.countComparative entity-en.block string-below string-< number2 entity-en.block
a special block whose shape is e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-shape string-= e0
left and above e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-above string-= e0
find the block located beneath e0 that has a 3 inch diameter	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-below string-= e0
which brick is below the brick shaped like a e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-shape string-= e0 )
block with same color as of e0	SW.filter entity-en.block string-color string-= SW.getProperty e0 string-color
select the block that has two shapes	SW.countComparative entity-en.block string-shape string-= number2
block that has the smallest height	SW.superlative entity-en.block string-min SW.ensureNumericProperty string-height
what block is to the right and above e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) SW.reverse string-above string-= e0
find a block that has a length of less than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity number3 en.inch )
find a block shorter than the width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
block on bottom	SW.countComparative entity-en.block string-below string->= number2 entity-en.block
left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) SW.reverse string-left string-= e0
which brick is no wider than e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
find me the block in the shape of a e0 above e1	SW.filter ( SW.filter entity-en.block string-above string-= e1 ) string-shape string-= e0
special block to right of e0	SW.filter ( SW.filter entity-en.block string-is_special ) SW.reverse string-left string-= e0
block above block one	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= en.block.block1 ) string-above string-= en.block.block1
find me the block that is to the right of the block that e0 is above	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
blocks of two or more colors	SW.countComparative entity-en.block string-color string->= number2
find me all blocks with at most 2 blocks to the right of it	SW.countComparative entity-en.block SW.reverse string-right string-<= number2 entity-en.block
find the block below the special block	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-is_special )
choose a block that is to the left of e0	SW.countComparative entity-en.block SW.reverse string-left string-< number2 entity-en.block
what brick is below a brick that is 3 inches long	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
find the block up 1 and right 1 of e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-right string-= e0 )
which brick is 3 inches wide and 3 inches high	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-width string-= number3 en.inch
what block is as tall as e0 is wide	SW.filter entity-en.block string-height string-= SW.getProperty e0 string-width
what is the average height of the blocks	string-avg SW.getProperty entity-en.block string-height
block that is right of e0 and that is right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-right string-= e0
what block is e0 or e1 to the right of	SW.filter entity-en.block SW.reverse string-right string-= SW.concat
what block is taller than e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
name a block that has two or more shapes	SW.countComparative entity-en.block string-shape string->= number2
locate the block with a length that exceeds the width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
find me all the blocks as long as e0	SW.filter entity-en.block string-length string-= SW.getProperty e0 string-length
find me all blocks below 3 inch high blocks	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
find me all blocks below the special blocks	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-is_special )
select the block that is on the left side of the block that is 3 inches in length	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
what block is above the block that is 3 inches long	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
what block is to the left and below e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
which brick has a length shorter than the length of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
find me all blocks as wide or wider than e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
block that is below the least number of block	SW.countSuperlative entity-en.block string-min string-below entity-en.block
find the block whose height is 3 inches	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) SW.reverse string-right string-= en.block.block1
find me the block with the least blocks below it	SW.countSuperlative entity-en.block string-min string-above entity-en.block
find me all blocks that is to the right of the least number of blocks	SW.countSuperlative entity-en.block string-min string-right entity-en.block
block is at the second left of e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
find me the block that is to the left of the block that e0 is above	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
which block is at the very bottom	SW.countSuperlative entity-en.block string-min SW.reverse string-above entity-en.block
which brick is to the left of the 3 inch brick	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
find me all blocks at least 3 inches wide	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity number3 en.inch )
choose a block that is taller than 3 or 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity SW.concat )
find the block that has a height of 3 inches and that e0 is to the right of	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) SW.reverse string-right string-= e0
find me all blocks left of e0 or e1	SW.filter entity-en.block string-left string-= SW.concat
find the block with a height less than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity number3 en.inch )
select the brick that is to the furthest left	SW.countSuperlative entity-en.block string-max SW.reverse string-right entity-en.block
what block is to the right of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-right string-= e0
find me all special blocks that is below	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-is_special )
is there a block to the right of either e0 or e1	SW.filter entity-en.block string-right string-= SW.concat
what block is 3 inches tall and e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-shape string-= e0
find me all blocks with at least 2 blocks above it	SW.countComparative entity-en.block SW.reverse string-above string->= number2 entity-en.block
what block is to the right of the 3 inch long block	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
which brick has no more than two blocks to its left	SW.countComparative entity-en.block string-right string-<= number2 entity-en.block
what e0 blocks are above e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) SW.reverse string-below string-= e1
find me all e0 blocks that is right of e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-right string-= e1
block that is below block whose height is 3 inches	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
find me all blocks with the same width as e0	SW.filter entity-en.block string-length string-= SW.getProperty e0 string-width
what block is of 3 inches height and above e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) SW.reverse string-above string-= e0
find a block with a length greater than e0 is tall	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
which type of block has the most shapes	SW.countSuperlative entity-en.block string-max string-shape
locate block one or e0	SW.concat
which brick is shaped like a e0	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-shape string-= e0
block left and above e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) SW.reverse string-below string-= e0
find me all blocks above at most 2 blocks	SW.countComparative entity-en.block string-above string-<= number2 entity-en.block
is there a block with a width equal to either 3 or 6 inches	SW.filter entity-en.block string-width string-= SW.concat
block above 1 block and left of 1 block	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= en.block.block1 ) SW.reverse string-left string-= en.block.block1
find me all the 3 inch wide blocks below e0	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-below string-= e0
find me all blocks with height and width equal to 3 inches	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-height string-= number3 en.inch
find the block that e0 is above	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) string-above string-= e0
select the blocks above and below e0	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-below string-= e0
find me all blocks right of the block that e0 is below	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
find me all blocks with more than 2 colors	SW.countComparative entity-en.block string-color string-> number2
find me all the bricks with 2 blocks above it	SW.countComparative entity-en.block SW.reverse string-above string-= number2 entity-en.block
select the brick that has the least blocks to the left of it	SW.countSuperlative entity-en.block string-max string-right entity-en.block
what block has e0 on its right and is e1	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-shape string-= e1
block whose width is smaller than height of e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
which block has two blocks above it	SW.countComparative entity-en.block SW.reverse string-above string-= number2 entity-en.block
select the block that e0 is below	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-below string-= e0
find me all the blocks longer than e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
find me all the bricks with a smaller width than e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
which brick is shorter than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity number3 en.inch )
find me all blocks with at least 2 blocks to the right of it	SW.countComparative entity-en.block SW.reverse string-right string-> number2 entity-en.block
select the block which is right to e0 with 3 inches	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-right string-= e0
left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) SW.reverse string-right string-= e0
find me all blocks over that e0 is above	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
find me all blocks longer than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity number3 en.inch )
right of e0 and e1	SW.filter entity-en.block SW.reverse string-left string-= SW.concat
find a block wider than e0 is tall	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
block to the left of e0	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-left string-= e0 )
block below and left from e0	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) SW.reverse string-right string-= e0
find me the block that e0 is below and that has a length of 3 inches	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-length string-= number3 en.inch
is there a block piled on top of either e0 or e1	SW.filter entity-en.block string-above string-= SW.concat
which brick is at most 3 or 6 inches long	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.concat )
is there a block on the right side of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-right string-= e0
find a block with less that two blocks above it	SW.countComparative entity-en.block string-below string-< number2 entity-en.block
select the blocks to the left of and above e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-above string-= e0
block whose shape is a e0 and whose width is 3 inches	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-width string-= number3 en.inch
how long is the block	string-sum SW.getProperty entity-en.block string-length
what brick is at least 3 or 6 inches	SW.concat
block below and to left of e0	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) SW.reverse string-right string-= e0
find a block taller than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity SW.concat )
select all bricks that are not 3 inches wide	SW.filter entity-en.block string-width string-!= number3 en.inch
find a block whose width is three inches that e0 is to the right of	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-width string-= number3 en.inch
find me all 3 inch wide blocks that is right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-width string-= number3 en.inch
choose a brick that is at least 3 inches wide	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity SW.concat )
select all e0 blocks	SW.filter entity-en.block string-shape string-= e0
above e0 or e1	SW.filter entity-en.block SW.reverse string-below string-= SW.concat
block to the left of a block that e0 is left of	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
find me all blocks no bigger than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity number3 en.inch )
find a block shorter than 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity SW.concat )
select the block that e0 is not below it	SW.filter entity-en.block string-above string-!= e0
block whose length is 3 inches	SW.filter entity-en.block string-length string-= number3 en.inch
what block below e0 is 3 inches wide	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-below string-= e0
select the blocks to the left of e0	SW.filter entity-en.block string-left string-= e0
block above at most two block	SW.countComparative entity-en.block SW.reverse string-above string-<= number2 entity-en.block
block whose height is not 3 inches	SW.filter entity-en.block string-height string-!= number3 en.inch
what block is two blocks to the right of e0	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
which brick is no higher than 3 or 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.concat )
find me the block that is to the left of e0 whose shape is a e1	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-shape string-= e1
block whose width is width of e0	SW.filter entity-en.block string-width string-= SW.getProperty e0 string-width
block that is right of block that is right of e0	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-right string-= e0 )
what block is above a block that is three inches in height	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
find me all special blocks left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-is_special
block left of e0	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-shape string-= e0 )
what block is to the right of the block that e0 is to the right of	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
find a block that is at least the same height as e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
block that has the largest height	SW.superlative entity-en.block string-max SW.ensureNumericProperty string-height
find me the block with the least colors	SW.countSuperlative entity-en.block string-min string-color
find the block that is in the shape of a e0 that e1 is to the right of	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) SW.reverse string-right string-= e1
what block is to the left of the block that is to the right of e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-right string-= e0 )
select the special 3 inch tall block	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-is_special
block right of e0 block	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-shape string-= e0 )
select the brick two bricks left of e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-left string-= e0 )
is there a block with a width that equals 3 or 6 inches maximum	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity SW.concat )
block at the right of a special block	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-is_special )
there is a block below e0 and a block above that one find it	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-below string-= e0 )
what block three inches in width is left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-width string-= number3 en.inch
find me all 3 inch tall blocks which e0 is above	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) string-height string-= number3 en.inch
block that is special and that is right of e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-right string-= e0
block that is above e0	SW.filter entity-en.block string-above string-= e0
find a block 6 inches or shorter	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.concat )
find a block that is above e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-above string-= e0 )
find me all blocks that is above and right of e0	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
find me all blocks with less than 2 blocks to the left	SW.countComparative entity-en.block SW.reverse string-left string-< number2 entity-en.block
what block has at most two blocks above it	SW.countComparative entity-en.block string-below string-<= number2 entity-en.block
third block to the left	SW.filter entity-en.block string-left string-= SW.concat
find me all the bricks that have at most 2 blocks below it	SW.countComparative entity-en.block SW.reverse string-below string-<= number2 entity-en.block
find me all the e0 or e1 bricks	SW.filter entity-en.block string-shape string-= SW.concat
find me all 3 or 6 inch long blocks	SW.filter entity-en.block string-length string-= SW.concat
find me all blocks that e0 is left and above	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
below and right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) SW.reverse string-above string-= e0
what block is below the 3 inch long block	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
block that two block is right of	SW.countComparative entity-en.block SW.reverse string-right string-= number2 entity-en.block
which special block is to the left of e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-left string-= e0
select blocks that have a height of 3 inches and are to the right of e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-right string-= e0
what block has the most blocks below it	SW.countSuperlative entity-en.block string-max string-above entity-en.block
select the block above the left one	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= en.block.block1 ) string-left string-= en.block.block1
select the brick that is below and to the left of e0	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-below string-= e0 )
find me all blocks not left of e0	SW.filter entity-en.block string-left string-!= e0
what e0 block is left of e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-left string-= e1
select the block to the left of the block above e0	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-above string-= e0 )
find a 3 inch wide e0 block	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-width string-= number3 en.inch
find me all blocks over and right of e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-right string-= e0
which brick is below the brick to the right of e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-right string-= e0 )
3 inch block left of e0	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) SW.reverse string-right string-= e0
find me all blocks that is left and right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-left string-= e0
find me all blocks that is right of the block which e0 is right of	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
what is the height of e0	SW.getProperty e0 string-height
find the block below and to the left of e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-below string-= e0 )
what block is above e0	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) SW.reverse string-above string-= e0
block whose length is at least length of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
find me all e0 blocks that e1 is below	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e1 ) string-shape string-= e0
find me all 3 inch tall blocks	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
find a block 6 inches long or less	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.concat )
find me all the blocks left and below e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-below string-= e0 )
what block has two or more shapes	SW.countComparative entity-en.block string-shape string->= number2
e0 to right of e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-right string-= e1
which brick is left of e0 or e1	SW.filter entity-en.block string-left string-= SW.concat
find me all e0 blocks left of e1	SW.filter ( SW.filter entity-en.block string-left string-= e1 ) string-shape string-= e0
find me a block that is to the left of the block with a width of 3 inches	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
find me all blocks to the right and above e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) SW.reverse string-below string-= e0
which block is above and to left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-above string-= e0
find me all the blocks taller than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity SW.concat )
block that has e0 at right and below	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
get the blocks below e0	SW.filter entity-en.block SW.reverse string-above string-= e0
locate a 3inch lwide block	SW.filter entity-en.block string-width string-= number3 en.inch
choose the brick that is the least thick	SW.superlative entity-en.block string-min SW.ensureNumericProperty string-width
what is the average height of the bricks	string-avg SW.getProperty entity-en.block string-height
find the shortest block	SW.superlative entity-en.block string-min SW.ensureNumericProperty string-height
select a block with two blocks below it	SW.countComparative entity-en.block string-above string->= number2 entity-en.block
find me the block that e0 is below and above	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) SW.reverse string-above string-= e0
find a block with a diameter that is wider than 3 inches total	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity number3 en.inch )
find me all blocks with at most 2 colors	SW.countComparative entity-en.block string-color string-<= number2
what is the width of e0	SW.getProperty e0 string-width
choose a block that is the right of e0	SW.countComparative entity-en.block SW.reverse string-right string-<= number2 entity-en.block
find the block with the most shapes	SW.countSuperlative entity-en.block string-max string-shape
block that is special and that is special	SW.filter ( SW.filter entity-en.block string-is_special ) string-is_special
which block has a length smaller than block 1s width	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.getProperty en.block.block1 string-width  )
block left of a block that is left of e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-left string-= e0 )
find a special block above e0	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-is_special
what block is to the left of the 3 inch wide block	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
find me all blocks right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) SW.reverse string-right string-= e0
left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) SW.reverse string-right string-= e0
find me all blocks that is right of e0	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-right string-= e0 )
select all blocks with height equal to the length of e0	SW.filter entity-en.block string-height string-= SW.getProperty e0 string-length
find me all the 3 inch tall e0 bricks	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-height string-= number3 en.inch
block left of 2 blocks	SW.countComparative entity-en.block string-left string->= number2 entity-en.block
find me all blocks that e0 is right and below	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
2nd left of e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
3 inch block right of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-height string-= number3 en.inch
the block below block one and to the right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-below string-= e0
find blocks above e0 or e1	SW.filter entity-en.block SW.reverse string-below string-= SW.concat
select the block that is to the right of e0 and has a height of 3 inches	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-height string-= number3 en.inch
select the block that e0 is to the left and below	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) SW.reverse string-below string-= e0
block left from 3 inch block	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
choose a block that is shape like a e0 or e1	SW.filter entity-en.block string-shape string-= SW.concat
find me all blocks at most as wide as e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
find me all blocks with less than 2 blocks below it	SW.countComparative entity-en.block SW.reverse string-below string-< number2 entity-en.block
block above 3 inches long block	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) SW.reverse string-left string-= e0
find those blocks with lengths that exceed either 3 or 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.concat )
block of height not more than width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
find me all blocks below that e0 is above	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) SW.reverse string-above string-= e0
what block is longer than e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
block with maximum two colors	SW.countComparative entity-en.block string-color string-<= number2
block wider than e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
select the e0 block below e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) SW.reverse string-above string-= e1
what block is shorter than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity number3 en.inch )
select the block with a width of 3 inches	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) SW.reverse string-right string-= en.block.block1
which brick is no longer than e0 is wide	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
select the lower block that is 3 inches tall	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
locate the block beneath the block that has a width of 3 inches	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
choose a block which is as long as e0 is wide	SW.filter entity-en.block string-length string-= SW.getProperty e0 string-width
select the block to the right of e0	SW.filter entity-en.block string-right string-= e0
block that the least number of block is above	SW.countSuperlative entity-en.block string-min SW.reverse string-above entity-en.block
find me all blocks below e0 blocks	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-shape string-= e0 )
block below and to right of e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
find me all blocks with at least 2 blocks to the right	SW.countComparative entity-en.block string-left string->= number2 entity-en.block
what block is to the right of the block that is three inches wide	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
block right and below e0	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-below string-= e0
select the block that e0 is not to the left of	SW.filter entity-en.block SW.reverse string-left string-!= e0
find a block that e0 is above and to the left of	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) SW.reverse string-left string-= e0
select the 3 or 6 inch wide block	SW.filter entity-en.block string-width string-= SW.concat
block with height of either 3 inches or 6 inches	SW.filter entity-en.block string-height string-= SW.concat
choose a brick that is to the left of a brick that is 3 inches wide	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
which block is to the left of the block that e0 is below	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
find me all special blocks left of something	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-is_special )
find blocks that are at least as tall as e0 is wide	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
which brick is 2 bricks to the right of e0	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-right string-= e0 )
choose block at right of block over e0	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-above string-= e0 )
block below e0 which is 3 inches long	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-length string-= number3 en.inch
find a block with a length and width of 3 inches each side	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-width string-= number3 en.inch
above and left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) SW.reverse string-right string-= e0
select all blocks that are 3 inches long	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-length string-= number3 en.inch
find me all the blocks shorter than e0 is long	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
block whose height is at most 3 inches or 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.concat )
locate the block with the least amount of blocks beside it on the left	SW.countSuperlative entity-en.block string-min SW.reverse string-left entity-en.block
find the block located to the right of at least two other blocks	SW.countComparative entity-en.block SW.reverse string-left string->= number2 entity-en.block
select a brick that is no bigger than 3 inches long	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity number3 en.inch )
what blocks are both above and below e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-below string-= e0
find me all blocks taller than e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
select the brick with the least number of blocks to the left of it	SW.countSuperlative entity-en.block string-min SW.reverse string-left entity-en.block
find me all 3 inch long blocks	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
get the second block above e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-above string-= e0 )
find me all blocks over that e0 is left of	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
which block is below e0 that is at least 3 inches high	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) string-width string-= number3 en.inch
what block is above and to the left of e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) SW.reverse string-left string-= e0
find the blocks who have a height of 3 inches are are to the left of e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-left string-= e0
find me all blocks which e0 is right and left of	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
select the block right of e0 that is 3 inches tall	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-height string-= number3 en.inch
find the block to the right of the 3 inch tall block	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
find me all blocks that e0 is below	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) SW.reverse string-below string-= e0
block whose height is larger than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity number3 en.inch )
find me a block that has less than two blocks below it	SW.countComparative entity-en.block SW.reverse string-below string-< number2 entity-en.block
block above most number of blocks	SW.countSuperlative entity-en.block string-max string-above entity-en.block
what block is above the 3 inch wide block	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
find me all blocks 2 blocks from the right	SW.countComparative entity-en.block string-right string-= number2 entity-en.block
select the block that is 3 inches in length and is above e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-length string-= number3 en.inch
which block is above the brick that is 3 inches high	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
find a block taller than e0 is long	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
block that is below e0 or e1	SW.filter entity-en.block string-below string-= SW.concat
choose the most shapeless block	SW.countSuperlative entity-en.block string-min string-shape
block below block one	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-below string-= en.block.block1 )
which brick is not 3 inches wide	SW.filter entity-en.block string-width string-!= number3 en.inch
what block three inches in height is above e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-above string-= e0
right and below e0	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) SW.reverse string-above string-= e0
which blocks have a height equal to the width of e0	SW.filter entity-en.block string-height string-= SW.getProperty e0 string-width
left and below of e0	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
what block has a width of 3 inches and is above e0	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-above string-= e0
block above and right from e0	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-left string-= e0 )
what block is to the left of the block above e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-above string-= e0 )
find me all blocks above that e0 is right of	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
find a block buried under at least two other blocks	SW.countComparative entity-en.block SW.reverse string-above string->= number2 entity-en.block
which brick is at least 3 inches long	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity number3 en.inch )
select the blocks that are to the right of e0 blocks	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-shape string-= e0 )
what is the blocks height	string-sum SW.getProperty entity-en.block string-height
select a block above block one that is 3 inches long	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= en.block.block1 ) string-length string-= number3 en.inch
which brick is the same shape as e0	SW.filter entity-en.block string-shape string-= SW.getProperty e0 string-shape
select a brick that is at least as wide as e0 is long	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
find the block that is left to the block of 3 inches	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
find me all blocks right of that e0 is above	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
gather all the blocks that are not 3 inches long	SW.filter entity-en.block string-height string-!= number3 en.inch
select the blocks that are above and below e0	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) string-above string-= e0
which one is a 3 inch special block	SW.filter ( SW.filter entity-en.block string-is_special ) string-width string-= number3 en.inch
what block is to the left of the 3 inch tall block	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
find a block with a 3 inch long block below it	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
find me the block that is to the right of two or more blocks	SW.countComparative entity-en.block string-right string->= number2 entity-en.block
which brick has a width smaller than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity number3 en.inch )
find me all blocks above e0	SW.filter entity-en.block SW.reverse string-below string-= e0
select the e0 shaped block	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= en.block.block1 ) string-shape string-= e0
what blocks have a height not equal to 3 inches	SW.filter entity-en.block string-height string-!= number3 en.inch
block whose length is larger than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity number3 en.inch )
block that less than two block is left of	SW.countComparative entity-en.block SW.reverse string-left string-< number2 entity-en.block
find the block that has a height that does not surpass the height of e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
select me the block that is above e0 and has a height of 3 inches	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-height string-= number3 en.inch
find the blocks that are to the left of e0	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-left string-= e0 )
is there a block beneath two other blocks	SW.countComparative entity-en.block SW.reverse string-above string-= number2 entity-en.block
which brick is taller than e0 is high	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
find me all 3 inch tall blocks right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-height string-= number3 en.inch
average height of block	string-avg SW.getProperty entity-en.block string-height
locate a block that is shorter than 3 inches or 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.concat )
block above less than two blocks	SW.countComparative entity-en.block string-above string-< number2 entity-en.block
what is the number of the block	.size entity-en.block
find me all the bricks at least as wide as e0 is tall	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
find the tallest block	SW.superlative entity-en.block string-max SW.ensureNumericProperty string-height
find me all blocks below e0 which e0 is also below	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) SW.reverse string-below string-= e0
the block beneath the block which is less than two	SW.countComparative entity-en.block SW.reverse string-above string-< number2 entity-en.block
see block above e0 and get block left of that one	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
select brick whose length is more than the width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
select the block above e0 that is 3 inches wide	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-above string-= e0
choose a block above the least populated bricks	SW.countSuperlative entity-en.block string-min string-above entity-en.block
find me a block with two or less colors	SW.countComparative entity-en.block string-color string-<= number2
find me all the special blocks above e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-is_special
find the block with the most blocks to the right of	SW.countSuperlative entity-en.block string-max string-right entity-en.block
cannot paraphase	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-right string-= en.block.block1 )
select blocks that have a length of 3 icnhes and are to the right of e0	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) SW.reverse string-right string-= e0
find the block that is to the left of e0	SW.filter entity-en.block SW.reverse string-left string-= e0
block whose length is larger than 3 inches or 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.concat )
select the block on the right side of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) SW.reverse string-left string-= e0
what brick has no more than two bricks to its left	SW.countComparative entity-en.block SW.reverse string-left string-<= number2 entity-en.block
what brick is both unique and 3 inches	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-is_special
below and left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-below string-= e0
which brick is below less than two bricks	SW.countComparative entity-en.block string-below string-< number2 entity-en.block
which brick is below a brick that is 3 inches wide	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
tell me the number of blocks	.size entity-en.block
find me all the 3 inch long blocks	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-length string-= number3 en.inch
find the block located on the left side of the special block	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-is_special )
e0 block below e1	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e1 ) string-shape string-= e0
what block is to the left of block one	SW.filter ( SW.filter entity-en.block string-left string-= en.block.block1 ) string-left string-= en.block.block1
find me all blocks below 2 blocks	SW.countComparative entity-en.block string-below string-= number2 entity-en.block
find the block that is to the right of e0 whose shape is also a e1	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-shape string-= e1
block below two other blocks	SW.countComparative entity-en.block string-below string->= number2 entity-en.block
find me all blocks shorter than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity number3 en.inch )
find the block with 3 inches of height	SW.filter entity-en.block string-height string-= number3 en.inch
find me all special blocks that e0 is left of	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-is_special
select the block that is two blocks above that block	SW.countComparative entity-en.block SW.reverse string-above string-= number2 entity-en.block
find me all the bricks below e0 or e1	SW.filter entity-en.block string-below string-= SW.concat
the blocks under e0 are smaller	SW.countComparative entity-en.block SW.reverse string-below string-< number2 entity-en.block
block longer than width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
find me a block that is either 3 or 6 inches tall	SW.filter entity-en.block string-height string-= SW.concat
find me all 3 inch long blocks that e0 is right of	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) SW.reverse string-right string-= e0
3 inch block to right of e0	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) SW.reverse string-left string-= e0
find me all 3 inch wide and long blocks	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-length string-= number3 en.inch
find the single block that is located to the right of the largest number of blocks	SW.countSuperlative entity-en.block string-max SW.reverse string-left entity-en.block
what block has the greatest height	SW.superlative entity-en.block string-max SW.ensureNumericProperty string-height
get me a block below and above e0	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) string-above string-= e0
select a block with a length larger than the length of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
find me all e0 blocks which is right of e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-right string-= e1
what block is to the left of the most blocks	SW.countSuperlative entity-en.block string-max SW.reverse string-right entity-en.block
what e0 block is above e1	SW.filter ( SW.filter entity-en.block string-above string-= e1 ) string-shape string-= e0
3 inch tall bock below e0	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) string-height string-= number3 en.inch
e0 block above e1	SW.filter ( SW.filter entity-en.block string-above string-= e1 ) string-shape string-= e0
find a block with two or less blocks to the right of it	SW.countComparative entity-en.block SW.reverse string-right string-<= number2 entity-en.block
select all special blocks above e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-is_special
find me all e0 blocks that is left or right of e1	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e1 ) string-shape string-= e0
select a block who has width greater than or equal to block 1s height	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity SW.getProperty en.block.block1 string-height  )
get a block above any e0 block	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-shape string-= e0 )
block left and above e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) SW.reverse string-below string-= e0
find me a block that is below at most two blocks	SW.countComparative entity-en.block SW.reverse string-above string-<= number2 entity-en.block
width of e0	SW.getProperty e0 string-width
what brick is 3 inches wide and 3 inches high	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-height string-= number3 en.inch
find me a block with a width of three inches that e0 is below	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-width string-= number3 en.inch
choose a brick that is wider than e0 is high	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
what block has the fewest shapes	SW.countSuperlative entity-en.block string-min string-shape
find me all e0 blocks that is left of e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-left string-= e1
block that is above block whose length is 3 inches	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
choose a block that is taller than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity number3 en.inch )
right of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) SW.reverse string-left string-= e0
find me all 3 inch tall special blocks	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-is_special
find me all blocks with a length shorter than the width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
what block is below e0 and has a height of 3 inches	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-height string-= number3 en.inch
find a block with the least number of blocks below it	SW.countSuperlative entity-en.block string-min SW.reverse string-below entity-en.block
find me all blocks with at least 2 shapes	SW.countComparative entity-en.block string-shape string-> number2
choose a block to the left of e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-left string-= e0 )
find all the special blocks that are 3 inches long	SW.filter ( SW.filter entity-en.block string-is_special ) string-length string-= number3 en.inch
find me all blocks below e0 or e1	SW.filter entity-en.block SW.reverse string-above string-= SW.concat
find the block underneath e0 that is 3 inches long	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-below string-= e0
find a block that is at least 3 to 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.concat )
which brick is to the right of the special brick	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-is_special )
find me all blocks that e0 is above and right of	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-above string-= e0 )
find me all blocks not above e0	SW.filter entity-en.block string-above string-!= e0
block that is below block that is left of e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-left string-= e0 )
what is the total width of the brick	string-sum SW.getProperty entity-en.block string-width
choose a 3 inch tall brick	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity number3 en.inch )
find me a e0 block 3 inches long	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-shape string-= e0
3 inch wide block below e0	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) string-width string-= number3 en.inch
find me the block that is to the left of e0 with a height of 3 inches	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-height string-= number3 en.inch
select all bricks right of e0 or e1	SW.filter entity-en.block string-right string-= SW.concat
what block is longer than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity number3 en.inch )
which block is farthest to the left	SW.countSuperlative entity-en.block string-min string-right entity-en.block
find me all the blocks with more than 2 blocks above it	SW.countComparative entity-en.block SW.reverse string-above string-> number2 entity-en.block
find me all the bricks wider than the width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
find me all blocks as wider than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity SW.concat )
which brick is higher than e0 is long	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
select the blocks that have a height less than or equal to block 1s length	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.getProperty en.block.block1 string-length  )
find a block to the right of a block 3 in height	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
which block is to the left of e0	SW.filter entity-en.block string-right string-!= e0
choose e0 or e1	SW.concat
is there a block located to the left of another block that is 3 inches long	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
which block is above e0	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) string-above string-= e0
which brick is furthest to the right	SW.countSuperlative entity-en.block string-min string-left entity-en.block
block whose length is larger than width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
find a block with a e0 block below it	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-shape string-= e0 )
what is the block above special block	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-is_special )
name a block of 3inch width above e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-width string-= number3 en.inch
find me all blocks whose width is shorter than the height of e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
select a brick whose length is at least the width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
block above and rigth from e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) SW.reverse string-below string-= e0
get the block that is 3 inches tall found left of e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-left string-= e0
is there a block to the right of e0 and to the left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-left string-= e0
find me any e0 block	SW.filter entity-en.block string-shape string-= e0
find me a block above at least two blocks	SW.countComparative entity-en.block SW.reverse string-below string->= number2 entity-en.block
select all bricks with length of 1	SW.filter entity-en.block string-height string-= SW.getProperty en.block.block1 string-length
block left and above e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) SW.reverse string-below string-= e0
which block has a width of less than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.concat )
block two below e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
find me the block that e0 is to the right of	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-below string-= e0
find me all blocks that e0 is left and under	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) SW.reverse string-below string-= e0
find a block shaped like a e0	SW.filter entity-en.block string-shape string-= e0
block at the left of least number of blocks	SW.countSuperlative entity-en.block string-min string-left entity-en.block
select the brick that has the least blocks to the right of it	SW.countSuperlative entity-en.block string-min string-left entity-en.block
which block is at least 3 or 6 inches long	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.concat )
what is the average width of the blocks	string-avg SW.getProperty entity-en.block string-width
which brick is at least 3 inches high	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity number3 en.inch )
block to the right of at least 2 blocks	SW.countComparative entity-en.block string-right string->= number2 entity-en.block
select the block that is below the block to the right of e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-right string-= e0 )
find the skinniest block	SW.superlative entity-en.block string-min SW.ensureNumericProperty string-width
find me the block that is above e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-above string-= e0 )
2 blocks below e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
which special brick is to the right of e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-right string-= e0
block a above block that is above e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-above string-= e0 )
block whose length is at least 3 inches or 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.concat )
find all special blocks to the right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-is_special
which block is above and to the right of e0	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-above string-= e0 )
find me a block wider than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity number3 en.inch )
find me the block that has a height of 3 inches	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
find the block below the block under e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
which brick is above e0 or e1	SW.filter entity-en.block string-above string-= SW.concat
find all blocks above 2 or fewer blocks	SW.countComparative entity-en.block string-above string-<= number2 entity-en.block
what block is shorter then e0 is long	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
which brick has two blocks below it	SW.countComparative entity-en.block SW.reverse string-below string-< number2 entity-en.block
block that is left of e0 or e1	SW.filter entity-en.block string-left string-= SW.concat
which brick is not to the left of e0	SW.filter entity-en.block string-left string-!= e0
choose a block that is right of a 3 inch brick	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
find the e0 shaped block below e1	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e1 ) string-shape string-= e0
block that is below e0 and whose width is 3 inches	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) string-width string-= number3 en.inch
choose the most colorful block	SW.countSuperlative entity-en.block string-max string-color
block below and right of e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
locate the block that is on top of at least one other block and that has a length of 3 inches	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
select all blocks above e0	SW.filter entity-en.block string-below string-!= e0
find the block that e0 is to the left of and above	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) SW.reverse string-above string-= e0
find a block with a diameter that does not surpass the height of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
find me a e0 or e1 shaped block	SW.filter entity-en.block string-shape string-= SW.concat
find the block with the e0 block above it	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-shape string-= e0 )
which block is the tallest	SW.superlative entity-en.block string-max SW.ensureNumericProperty string-height
find me all 3 inch tall blocks left of e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-left string-= e0
block left of block one	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= en.block.block1 ) string-left string-= en.block.block1
left of and below e0	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-below string-= e0 )
which block is to the left of no more than two blocks	SW.countComparative entity-en.block string-left string-<= number2 entity-en.block
find me all blocks below of which is above e0	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) string-above string-= e0
block two right from e0	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-right string-= e0 )
find me all special 3 inch long blocks	SW.filter ( SW.filter entity-en.block string-is_special ) string-length string-= number3 en.inch
e0 block right of e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-right string-= e1
find me a block to the right of either e0 or e1	SW.filter entity-en.block string-right string-= SW.concat
block that is left of block that is below e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-below string-= e0 )
find a e0 block with a 3 inch height	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-height string-= number3 en.inch
block two above e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
block that is right of less than two block	SW.countComparative entity-en.block string-right string-< number2 entity-en.block
find me all 3 inch high blocks	SW.filter entity-en.block string-height string-= number3 en.inch
find me all blocks that is below which e0 is right of	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
the unique 3 inch wide block	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-is_special
choose the brick that is 3 inches high below e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-below string-= e0
which block is closest to the bottom	SW.countSuperlative entity-en.block string-max SW.reverse string-above entity-en.block
find me all blocks and and over e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-above string-= e0 )
find me all blocks at least 3 inches in width	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity number3 en.inch )
find a block to the right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-right string-= e0
which e0 blocks are to the right of e1	SW.filter ( SW.filter entity-en.block string-right string-= e1 ) string-shape string-= e0
which special block is 3 inches high	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-is_special
the 3x3 inch block	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-width string-= number3 en.inch
find me the block that is to the left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-left string-= e0
find me all blocks below and to the right of e0	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) SW.reverse string-left string-= e0
find a block that is 3 inches long	SW.filter entity-en.block string-length string-= number3 en.inch
block right and up from e0	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-above string-= e0
e0 right of e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-right string-= e1
find a block that is right of at least two blocks	SW.countComparative entity-en.block SW.reverse string-right string->= number2 entity-en.block
select the blocks below and to the left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) SW.reverse string-left string-= e0
find me all the blocks right of the e0 block	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-shape string-= e0 )
block that is left of block whose height is 3 inches	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
what block has two or less shapes	SW.countComparative entity-en.block string-shape string-<= number2
select all blocks whose length at a maximum of 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.concat )
2 blocks right of e0	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
what block is 3 or less inches tall	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity number3 en.inch )
find me all blocks as high as e0 is long	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
block to the right and below e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-right string-= e0 )
what block has the most blocks to the right of it	SW.countSuperlative entity-en.block string-max string-left entity-en.block
block whose length is 3 inches and whose shape is a e0	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-shape string-= e0
select the blocks below e0	SW.countComparative entity-en.block string-below string->= number2 entity-en.block
is there a block to the right of the block that is underneath e0	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-below string-= e0 )
which block is the same color as e0	SW.filter entity-en.block string-color string-= SW.getProperty e0 string-color
find me the block that e0 is to ther right of and that has a shape of a e1	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-shape string-= e1
find me the block that is below the block that is below e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
what block is at least as tall as e0 is long	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
select a block that has a length of more than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity number3 en.inch )
block to right of two others	SW.countComparative entity-en.block string-right string-= number2 entity-en.block
what special blocks are left of e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-left string-= e0
select the block that is above e0 with a length of 3 inches	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-length string-= number3 en.inch
select the left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) SW.reverse string-above string-= e0
what is the height of e0	SW.getProperty e0 string-height
select the block that is to the right of more than 2 blocks	SW.countComparative entity-en.block string-right string-> number2 entity-en.block
block whose length is not 3 inches	SW.filter entity-en.block string-length string-!= number3 en.inch
select the blocks that are 3 inches wide	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
find me a 3 inch long block	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-length string-= number3 en.inch
what block is above the block that is to the left of e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
find me the block that is to the left of the block that is to the right of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) SW.reverse string-right string-= e0
what block is to the right of e0 and is in the shape of a e1	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-shape string-= e1
block whose length is at least width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
block that is right of at most one block	SW.countComparative entity-en.block string-right string-< number2 entity-en.block
a 3 inch brick that is shaped like a e0	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-width string-= number3 en.inch
select the 3 inch wide special block	SW.filter ( SW.filter entity-en.block string-is_special ) string-width string-= number3 en.inch
find a block with the least blocks to the left of	SW.countSuperlative entity-en.block string-min string-left entity-en.block
block with more than two shapes	SW.countComparative entity-en.block string-shape string-> number2
find me all 3 inch tall blocks that e0 is right of	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-height string-= number3 en.inch
select all 3 inch high blocks	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-height string-= number3 en.inch
block to the right of e0 and above it	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) SW.reverse string-below string-= e0
find the block located beneath the second block that is located to the left of e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-left string-= e0 )
what block is longer than e0 is wide	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
find the 3 inch wide special block	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-is_special
get a block to the left of e0 or e1	SW.filter entity-en.block SW.reverse string-right string-= SW.concat
which brick is no wider than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity number3 en.inch )
which brick has no more than 2 bricks to its right	SW.countComparative entity-en.block SW.reverse string-right string-<= number2 entity-en.block
find me a block that e0 is to the left of	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
which block is the shortest	SW.superlative entity-en.block string-min SW.ensureNumericProperty string-height
above e0 to the left	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
which brick is to the left of the brick that is 3 inches tall	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
select the e0	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) string-is_special
find me all blocks that e0 is below and above	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) SW.reverse string-above string-= e0
what special blocks have a length of 3 inches	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-is_special
block not to right of e0	SW.filter entity-en.block SW.reverse string-right string-!= e0
select the brick that is above the least number of blocks	SW.countSuperlative entity-en.block string-min string-above entity-en.block
find me all blocks at e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-right string-= e0 )
find the block with a height that does not surpass either 3 or 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity SW.concat )
which brick is as long as e0 is tall	SW.filter entity-en.block string-length string-= SW.getProperty e0 string-height
block that has e0 above and below	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) string-below string-= e0
e0 shaped block that is to the left of e1	SW.filter ( SW.filter entity-en.block string-left string-= e1 ) string-shape string-= e0
select the block with the biggest width	SW.superlative entity-en.block string-max SW.ensureNumericProperty string-width
find me all special blocks above e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-above string-= e0
which brick is at least as long as e0 is wide	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
what block is below two blocks	SW.countComparative entity-en.block string-below string-= number2 entity-en.block
are there any 3inch long blocks to the right of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-length string-= number3 en.inch
find me all the blocks above 3 inch long blocks	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
what block is below the block that e0 is below	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
block as long as e0 is wide	SW.filter entity-en.block string-length string-= SW.getProperty e0 string-width
find me a block with two blocks to the left of it	SW.countComparative entity-en.block SW.reverse string-left string->= number2 entity-en.block
find me the blocks that are more than two shapes	SW.countComparative entity-en.block string-shape string-> number2
what block is unique and shaped like a e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-shape string-= e0
select the 3 inch tall block below e0	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) string-height string-= number3 en.inch
find me all the blocks as tall as e0	SW.filter entity-en.block string-height string-= SW.getProperty e0 string-height
what shape is e0	SW.getProperty e0 string-shape
find the block that is special and to the right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-is_special
what block has e0 above and left	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-below string-= e0
which brick is no wider than e0 is long	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
find me all blocks above that e0 is below	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
what block is below the block that e0 is to the left of	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
find me either e0 or e1	SW.concat
3 inches high block below e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-below string-= e0
what block is left and below e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-below string-= e0
find me all blocks as wide as e0 is long	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
choose a 3 inch block under e0	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) string-width string-= number3 en.inch
which brick has more than two bricks above it	SW.countComparative entity-en.block SW.reverse string-above string-> number2 entity-en.block
select the special block to the right of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-is_special
find a block that is on the left side of two other blocks	SW.countComparative entity-en.block SW.reverse string-right string-= number2 entity-en.block
find the block that is right and below e0	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
select a block with equivalent width to e0	SW.filter entity-en.block string-width string-= SW.getProperty e0 string-width
find the block above the least blocks	SW.countSuperlative entity-en.block string-min SW.reverse string-below entity-en.block
block to left of two or more blocks	SW.countComparative entity-en.block string-left string->= number2 entity-en.block
what brick is as wide as e0 is long	SW.filter entity-en.block string-width string-= SW.getProperty e0 string-length
what block is to the right and below e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-right string-= e0 )
choose a block that is the right of the furthest block to the left	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-left string-= en.block.block1 )
which block is longer than e0 is wide	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
what block has the shape of a e0 and is to the left of e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-left string-= e1
get me a block to the right of a 3inch block	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
find me all 3 inch wide blocks that e0 is above	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) SW.reverse string-above string-= e0
block that is right of at most two block	SW.countComparative entity-en.block string-right string-<= number2 entity-en.block
find the block underneath the e0 block	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-shape string-= e0 )
find me all special blocks right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-is_special
find me all blocks with 2 blocks below it	SW.countComparative entity-en.block SW.reverse string-below string-= number2 entity-en.block
block below two or more blocks	SW.countComparative entity-en.block string-below string-> number2 entity-en.block
select the block that is to the left of the block that e0 is above	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) SW.reverse string-above string-= e0
block below 3 inches wide block	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
select the 3 inch block below e0	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-below string-= e0
number of block	.size entity-en.block
find all e0 blocks below e1	SW.filter ( SW.filter entity-en.block string-below string-= e1 ) string-shape string-= e0
find me a block below at least two blocks	SW.countComparative entity-en.block SW.reverse string-above string->= number2 entity-en.block
find me all blocks that is left or right of e0	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
special block right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-is_special
find me a block with a height of 3 inches that e0 is to the left of	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) SW.reverse string-left string-= e0
find me all the blocks right of 3 inch long blocks	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
find the block with the same shape as e0	SW.filter entity-en.block string-shape string-= SW.getProperty e0 string-shape
what color is e0	SW.getProperty e0 string-color
is there a block that is to the left of e0 that is also 3 inches in length	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-left string-= e0
find me all e0 blocks which e1 is right of	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) SW.reverse string-right string-= e1
block that more than two block is right of	SW.countComparative entity-en.block SW.reverse string-right string-> number2 entity-en.block
what brick has at least 2 bricks to its right	SW.countComparative entity-en.block SW.reverse string-right string->= number2 entity-en.block
choose a block no bigger than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity number3 en.inch )
which e0 block is 3 inches wide	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-shape string-= e0
find me all the special e0 blocks	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-is_special
2 blocks below e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-below string-= e0 )
block whose length is at most either 3 inches or 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.concat )
choose a block that is the same width as block 1s length	SW.filter entity-en.block string-width string-= SW.getProperty en.block.block1 string-length
what blocks are left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-left string-= e0
find the blocks that are above and left to the e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-left string-= e0
find all special blocks that are 3 inches wide	SW.filter ( SW.filter entity-en.block string-is_special ) string-width string-= number3 en.inch
select a special e0 block	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-is_special
find the block that e0 is below	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
which block of 3 width is to the right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-width string-= number3 en.inch
look right of e0 and get the special block	SW.filter ( SW.filter entity-en.block string-is_special ) SW.reverse string-left string-= e0
block 3 inches high and long	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-length string-= number3 en.inch
which brick is closest to the bottom	SW.countSuperlative entity-en.block string-min string-above entity-en.block
which brick is to the left of e0	SW.filter entity-en.block string-left string-= e0
what block is e0 below and to the right of	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
find me all blocks front and left of e0	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
bloch longer than the length of e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
locate the block with a diameter less than that of e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
find me the block that is above the block that is below e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
find me all blocks right to whatever e0 is left of	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
find me all the blocks below at most 1 blocks	SW.countComparative entity-en.block string-below string-< number2 entity-en.block
block below e0 and e1	SW.filter entity-en.block SW.reverse string-above string-= SW.concat
choose the block below the special looking e0	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) string-is_special
which brick is to the left of less than two bricks	SW.countComparative entity-en.block string-left string-< number2 entity-en.block
select blocks that are two colors	SW.countComparative entity-en.block string-color string-= number2
are there any blocks whose height is that of either 3 inches or 6 inches at most	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.concat )
find all blocks that are below blocks with height equal to 3 inches	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
find me all blocks above e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) SW.reverse string-below string-= e0
either e0 or e1	SW.concat
find me all blocks right of 3 inch high blocks	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
is there a block that has only one block to the left of it	SW.countComparative entity-en.block string-right string-< number2 entity-en.block
find me all special blocks that is right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-is_special
what block is 3 tall and has e0 on its left	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) SW.reverse string-left string-= e0
choose a special block that is below e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-below string-= e0
what block is left of a 3 inch block	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
bock right of block that is right of e0	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-right string-= e0 )
find a block to the left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-left string-= e0
block whose shape is not a e0	SW.filter entity-en.block string-shape string-!= e0
select a block with less than two colors	SW.countComparative entity-en.block string-color string-< number2
choose the block beneath the 2 block	SW.countComparative entity-en.block SW.reverse string-below string-> number2 entity-en.block
what block is to the right of and below e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
what is the block below and left of e0	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
find me all the blocks that has at most 2 blocks to the left	SW.countComparative entity-en.block string-right string-<= number2 entity-en.block
select the brick with the least blocks above it	SW.countSuperlative entity-en.block string-min SW.reverse string-above entity-en.block
find me all blocks above e0 blocks	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-shape string-= e0 )
what brick is as long as e0 is wide	SW.filter entity-en.block string-length string-= SW.getProperty e0 string-width
find me all blocks above and to the left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) SW.reverse string-right string-= e0
3 inches long block which has e0 at left	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-length string-= number3 en.inch
find the total height of the blocks	string-sum SW.getProperty entity-en.block string-height
what is the total width of the block	string-sum SW.getProperty entity-en.block string-width
block that is shorter than e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
block left from two others	SW.countComparative entity-en.block string-left string-= number2 entity-en.block
what block is above the block of block1	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block SW.reverse string-below string-= en.block.block1 )
block left of e0	SW.filter entity-en.block SW.reverse string-right string-= e0
find me all blocks not right of e0	SW.filter entity-en.block string-right string-!= e0
choose a block that is as thick as e0 is long	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
find me all blocks as long as e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
which brick is above the brick to the right of e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-right string-= e0 )
find the shortest block	SW.superlative entity-en.block string-min SW.ensureNumericProperty string-height
what block has e0 at right and left	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-left string-= e0
gather all the blocks that are 3 inches or more	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity number3 en.inch )
choose the brick that is above the brick to the left of e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-left string-= e0 )
choose the block that is below and to the left of e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-below string-= e0 )
block whose height is 3 inches and whose width is 3 inches	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-width string-= number3 en.inch
block above two others	SW.countComparative entity-en.block string-above string-= number2 entity-en.block
find me all blocks right of 3 inch tall blocks	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
find the block that e0 is above and below	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
find the special block to the left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-is_special
find me all blocks 2 below e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
which e0 shaped block is to the right of e1	SW.filter ( SW.filter entity-en.block string-right string-= e1 ) string-shape string-= e0
find me a block with a e0 shape and has a length of 3 inches	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-length string-= number3 en.inch
locate the block that is no taller in inches than the width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
select the block that e0 is to the right and above	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
which block has the shortest length	SW.superlative entity-en.block string-min SW.ensureNumericProperty string-length
block that has e0 or e1 at right	SW.filter entity-en.block SW.reverse string-right string-= SW.concat
find the block that is on the other side of a block located to the left of e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-left string-= e0 )
choose the brick below e0 that is 3 inches long	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-below string-= e0
bricks that are the same size as e0	SW.filter entity-en.block string-width string-= SW.getProperty e0 string-width
3 inch block right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-height string-= number3 en.inch
block that is right of block whose height is 3 inches	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
find me all blocks 2 below e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-below string-= e0 )
find me a 3inch wide block to the right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-width string-= number3 en.inch
what blocks are below e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-below string-= e0 )
is there a block whose diameter and length is an equal 3 inches in both those directions	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-width string-= number3 en.inch
block whose shape is a e0	SW.filter entity-en.block string-shape string-= e0
choose a block that is not e0 shaped	SW.filter entity-en.block string-shape string-!= e0
which brick is not below e0	SW.filter entity-en.block string-below string-!= e0
which brick is no higher than e0 is wide	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
select bricks that are at least 3 inches high	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity SW.concat )
find me all the blocks above e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-above string-= e0
find a block the same shape as e0	SW.filter entity-en.block string-shape string-= SW.getProperty e0 string-shape
find me all 3 inch high special blocks	SW.filter ( SW.filter entity-en.block string-is_special ) string-height string-= number3 en.inch
select the blocks left of and above e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) SW.reverse string-below string-= e0
find the block that is underneath e0	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) string-below string-= e0
get the special block from right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-is_special
find me all blocks with less than 2 blocks to the right of it	SW.countComparative entity-en.block SW.reverse string-right string-< number2 entity-en.block
select the 3 inch long block to the right of e0	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-right string-= e0
select the block above e0 and on the left side	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) SW.reverse string-above string-= e0
choose a block that is under e0	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) string-below string-= e0
select the blocks below e0	SW.filter entity-en.block string-below string-= e0
find the blocks that have two shapes or less	SW.countComparative entity-en.block string-shape string-<= number2
what block is to the right of the 3 inch wide block	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
3 inch tall block right from e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) SW.reverse string-left string-= e0
find me all blocks below and right of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-below string-= e0
find me the block that is above the block that e0 is below	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
block right of block which is left of e0	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-left string-= e0 )
what block is to the right of e0	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
select the shortest block	SW.superlative entity-en.block string-min SW.ensureNumericProperty string-length
choose a block that is smaller than e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
3 inches wide block at the right of e0	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) SW.reverse string-left string-= e0
find me all blocks that e0 is right and below of	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-below string-= e0
select the block to the right of the least amount of blocks	SW.countSuperlative entity-en.block string-min SW.reverse string-right entity-en.block
3 inch tall block  above e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-above string-= e0
choose a brick that is no higher than e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
block whose length is smaller than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity number3 en.inch )
find me the block that e0 is below and to the left of	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
select the blocks to the right of greater that two blocks	SW.countComparative entity-en.block string-right string-> number2 entity-en.block
what block is as long as e0 is wide	SW.filter entity-en.block string-length string-= SW.getProperty e0 string-width
find me all the blocks above e0 or e1	SW.filter entity-en.block string-above string-= SW.concat
e0 block above e1	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e1 ) string-shape string-= e0
select the block above on the left	SW.filter ( SW.filter entity-en.block string-left string-= en.block.block1 ) string-above string-= en.block.block1
select all the e0 blocks above block1	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= en.block.block1 ) string-shape string-= e0
find the block with only one color	SW.countComparative entity-en.block string-color string-< number2
find me a special e0 block	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-is_special
which brick is to the right of e0 or e1	SW.filter entity-en.block string-right string-= SW.concat
find the block that is at least 3 inches long	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity number3 en.inch )
choose a block that is below and to the left of e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-left string-= e0 )
select a block with height less than e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
find the blocks that have a width of 3 inches and are to the left of e0	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) SW.reverse string-left string-= e0
3 inch long block below e0	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) string-length string-= number3 en.inch
block that is shorter than block one	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.getProperty en.block.block1 string-height  )
block below block that is above e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-above string-= e0 )
which brick has no more than 2 colors	SW.countComparative entity-en.block string-color string-<= number2
select the blocks above e0 and 2	SW.filter entity-en.block SW.reverse string-below string-= SW.concat
what is the average height of a brick	string-avg SW.getProperty entity-en.block string-height
block that has a width of 3 inches and is below e0	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-width string-= number3 en.inch
block right of at least two block	SW.countComparative entity-en.block string-right string->= number2 entity-en.block
which brick is below no more than two bricks	SW.countComparative entity-en.block string-below string-<= number2 entity-en.block
select blocks that are below and to the left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-left string-= e0
find me all blocks taller than the length of e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
find me all the 3 inch long bricks left of e0	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-left string-= e0
the third block to the right	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-right string-= en.block.block1 )
find me all blocks below and to the right of e0	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) string-right string-= e0
block above least number of blocks	SW.countSuperlative entity-en.block string-min SW.reverse string-above entity-en.block
what block is 3 inches or less long	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity number3 en.inch )
3 inch block below e0	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) SW.reverse string-above string-= e0
find me all 3 inch wide blocks above e0	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-width string-= number3 en.inch
3 inch block left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-length string-= number3 en.inch
find me all blocks not 3 inches high	SW.filter entity-en.block string-height string-!= number3 en.inch
find the block with the same length as e0	SW.filter entity-en.block string-length string-= SW.getProperty e0 string-length
block left of more than 2 blocks	SW.countComparative entity-en.block string-left string-> number2 entity-en.block
block whose height is larger than width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
select the block right of e0	SW.countComparative entity-en.block string-right string-= number2 entity-en.block
block that is left of the block above e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-left string-= e0 )
what block is to the left of either e0 or e1	SW.filter entity-en.block string-left string-= SW.concat
which brick is at least as high as e0 is long	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
find me all special blocks that e0 is below	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-is_special
choose a block that is not 3 inches	SW.filter entity-en.block string-length string-!= number3 en.inch
find me all blocks that have two shapes	SW.countComparative entity-en.block string-shape string-= number2
find me all blocks left and below e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-below string-= e0
which blocks are left of singleorfewer blocks	SW.countComparative entity-en.block string-left string-< number2 entity-en.block
find the block located on top of the highest number of other blocks	SW.countSuperlative entity-en.block string-max string-above entity-en.block
select the block below e0 and e1	SW.filter entity-en.block SW.reverse string-above string-= SW.concat
select the 3 inch high block above e0	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-height string-= number3 en.inch
find me all blocks that is above 3 inch tall blocks	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
block above e0	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-shape string-= e0 )
name a block that has e0 on its left	SW.filter entity-en.block SW.reverse string-left string-= e0
block that is at the right of most number of blocks	SW.countSuperlative entity-en.block string-max string-right entity-en.block
what block is to the left of the least blocks	SW.countSuperlative entity-en.block string-min SW.reverse string-right entity-en.block
select the block that is above the smallest group of blocks	SW.countSuperlative entity-en.block string-min SW.reverse string-below entity-en.block
find me all blocks that e0 is left and below	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-above string-= e0
what block has a width of three inches and that e0 is below	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) SW.reverse string-below string-= e0
left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) SW.reverse string-left string-= e0
block above e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) SW.reverse string-below string-= e0
which block is the same length as e0	SW.filter entity-en.block string-length string-= SW.getProperty e0 string-length
find me the special block on top of the block	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-is_special )
select a block that has a width that is the same width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
what block has e0 left and right	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
choose a block between 3 or 6 inches	SW.concat
find me all special blocks that e0 is right of	SW.filter ( SW.filter entity-en.block string-is_special ) SW.reverse string-right string-= e0
which blocks are right of e0 or e1	SW.filter entity-en.block string-right string-= SW.concat
what 3 inches long block is above e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-length string-= number3 en.inch
block whose length is length of e0	SW.filter entity-en.block string-length string-= SW.getProperty e0 string-length
what is the total length of the blocks	string-sum SW.getProperty entity-en.block string-length
what block has a width of 3 inches and is to the left of e0	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-left string-= e0
find the block with a length shorter than that of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
block in e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) SW.reverse string-left string-= e0
blocks of more than two colours	SW.countComparative entity-en.block string-color string-> number2
find me all blocks that is 2 blocks below e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
block that is not right of e0	SW.filter entity-en.block string-right string-!= e0
select the block to the right of the block above e0	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
find me all blocks with more than 2 blocks to the left of it	SW.countComparative entity-en.block SW.reverse string-left string-> number2 entity-en.block
3 inch long block above e0	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-above string-= e0
block right of the block below e0	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
what block is left of e0 and 3 inches in length	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) SW.reverse string-left string-= e0
find a block that is is left of block two	SW.countComparative entity-en.block SW.reverse string-left string->= number2 entity-en.block
what block is the block to the right and below e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
choose a block that is 3 inches and shaped like a e0	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-shape string-= e0
find a block whose height is smaller than the length of e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
which block has less than two blocks to its right	SW.countComparative entity-en.block SW.reverse string-right string-< number2 entity-en.block
locate the block beneath e0 that also has a width of 3 inches	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) string-width string-= number3 en.inch
find me all blocks that is right of more than 2 blocks	SW.countComparative entity-en.block string-right string-> number2 entity-en.block
find me all blocks with length less than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity number3 en.inch )
find a block with height equal to block 1s length	SW.filter entity-en.block string-height string-= SW.getProperty en.block.block1 string-length
find special blocks with e0 above them	SW.filter ( SW.filter entity-en.block string-is_special ) SW.reverse string-above string-= e0
which brick is higher than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-> ( SW.ensureNumericEntity number3 en.inch )
block that is below block that is below e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-below string-= e0 )
select the block with the most shapes	SW.countSuperlative entity-en.block string-max string-shape
find me all the blocks with at most 2 shapes	SW.countComparative entity-en.block string-shape string-<= number2
block that has e0 in the right and left	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) SW.reverse string-right string-= e0
select the special block above e0	SW.filter ( SW.filter entity-en.block string-is_special ) SW.reverse string-below string-= e0
find me the block that is to the left and below e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) SW.reverse string-above string-= e0
choose a block between 3 and 6 inches wide	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.concat )
find me all the blocks that are special	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-is_special )
select a block to the left of e0 that is 3 inches long	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-left string-= e0
what block is to the right of e0 and has a length of 3 inches	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-length string-= number3 en.inch
find the block that is to the right of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-right string-= e0
find me all blocks above a e0 block	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-shape string-= e0 )
find me all blocks that is above and right of e0	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
is there a block piled on any other block but only one	SW.countComparative entity-en.block string-above string-< number2 entity-en.block
find the block with 3 inches in length	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
how wide is e0	SW.getProperty e0 string-width
what block has height less than or equal to the length of e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
block that is right of block that is above e0	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-above string-= e0 )
what is the total width of the blocks	string-sum SW.getProperty entity-en.block string-width
block with lowest width	SW.superlative entity-en.block string-min SW.ensureNumericProperty string-width
find me all the blocks left of special blocks	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-is_special )
what block is to left of more than two blocks	SW.countComparative entity-en.block SW.reverse string-right string-> number2 entity-en.block
block above e0	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-above string-= e0 )
find me all blocks right and below e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-right string-= e0 )
block above 3 inch tall block	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
locate a block with a width that is more than either 3 or 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity SW.concat )
select the block that is to the left and above e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-above string-= e0
find me all blocks below 3 inch long blocks	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
which block is only a single color	SW.countComparative entity-en.block string-color string-< number2
find me the block that is above and to the left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) SW.reverse string-below string-= e0
select the block to the left of the special block	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-is_special )
what e0 block is to the right of e1	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-right string-= e1
find the 3 inch long block	SW.filter entity-en.block string-length string-= number3 en.inch
block within 2 blocks to the left	SW.countComparative entity-en.block SW.reverse string-left string-<= number2 entity-en.block
what is the average block width	string-avg SW.getProperty entity-en.block string-width
find me all 3 inch long blocks which e0 is below	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) SW.reverse string-below string-= e0
which block has a width of either 3 or 6 inches	SW.filter entity-en.block string-width string-= SW.concat
what block is to the left of more than two blocks	SW.countComparative entity-en.block string-left string-> number2 entity-en.block
find me all blocks with a width shorter than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity number3 en.inch )
select the block above the block to the right e0	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-left string-= e0 )
find me all the blocks as tall as the width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
select block below and to the left of e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-left string-= e0 )
find a block below the block on the right of e0	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
find me all blocks left and above e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) SW.reverse string-below string-= e0
what block has the most blocks above it	SW.countSuperlative entity-en.block string-max string-below entity-en.block
right of block above e0	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
find me all blocks with at least 2 blocks below	SW.countComparative entity-en.block SW.reverse string-below string->= number2 entity-en.block
block above and left of e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) SW.reverse string-right string-= e0
not more than 3 inches wide block	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity number3 en.inch )
find me all blocks at most 3 inches wide	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity number3 en.inch )
block that has the most number of shape	SW.countSuperlative entity-en.block string-max string-shape
left and above e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-left string-= e0
select all blocks that are in the shape of a e0	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-shape string-= e0 )
block right of 3 inch wide block	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
find me all blocks right of e0 or e1	SW.filter entity-en.block SW.reverse string-right string-= SW.concat
locate the block that has a shape other than that of a e0	SW.filter entity-en.block string-shape string-!= e0
look below and right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-below string-= e0
what block is to the left of the block that e0 is below	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
block that has the smallest width	SW.superlative entity-en.block string-min SW.ensureNumericProperty string-width
find me all the bricks  longer than the width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
find me all blocks below that e0 is left of	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-below string-= e0 )
which block has the largest height	SW.superlative entity-en.block string-max SW.ensureNumericProperty string-height
block that is right of e0 and whose length is 3 inches	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-length string-= number3 en.inch
find me all the blocks as tall as e0 is long	SW.filter entity-en.block string-height string-= SW.getProperty e0 string-length
block above block one and to the right	SW.filter ( SW.filter entity-en.block string-right string-= en.block.block1 ) SW.reverse string-below string-= en.block.block1
find a block that is to the right of two blocks	SW.countComparative entity-en.block string-right string-<= number2 entity-en.block
select the pyramidshape blocks above e0	SW.filter ( SW.filter entity-en.block string-shape string-= en.shape.pyramid ) string-above string-= e0
find me all blocks above which e0 is right of	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-above string-= e0
find me all blocks that above and below e0	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) SW.reverse string-below string-= e0
what block has a length of 3 inches and e0 above it	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) string-length string-= number3 en.inch
which brick has the least number of shapes	SW.countSuperlative entity-en.block string-min string-shape
block whose length is width of e0	SW.filter entity-en.block string-length string-= SW.getProperty e0 string-width
find me all the blocks not below e0	SW.filter entity-en.block string-below string-!= e0
what is the total height of the blocks	string-sum SW.getProperty entity-en.block string-height
choose a block that looks just like e0	SW.filter entity-en.block string-shape string-= SW.getProperty e0 string-shape
find me a 3 inch tall e0 block	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-height string-= number3 en.inch
3 inch block above e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-above string-= e0
what block is to the right and above e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) SW.reverse string-below string-= e0
find me all blocks below 3 inch wide blocks	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
what brick has at least two bricks to its left	SW.countComparative entity-en.block SW.reverse string-left string->= number2 entity-en.block
which brick is shorter than e0 is high	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
find me all blocks at least the same height as e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
find the 3inch long block which is located to the right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-length string-= number3 en.inch
block that is above block which is right of e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-right string-= e0 )
find the block that is not less than 3 inches tall	SW.filter entity-en.block SW.ensureNumericProperty string-height  string->= ( SW.ensureNumericEntity number3 en.inch )
find me all blocks below which e0 is above	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-below string-= e0 )
choose the block above the speciallooking e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-is_special
what block is shorter than e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
select the block above the right	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= en.block.block1 ) SW.reverse string-right string-= en.block.block1
select the blocks that are 3 inches long	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
3 inch block above e0	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) SW.reverse string-below string-= e0
what is the length of e0	SW.getProperty e0 string-length
find the block that is shaped like a e0 or a e1	SW.filter entity-en.block string-shape string-= SW.concat
block above 3 inch block	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
block whose length is at most width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
what block is to the right of e0 and has a width of 3 inches	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-width string-= number3 en.inch
find me all blocks left of 2 blocks	SW.countComparative entity-en.block string-left string-= number2 entity-en.block
is there a block on top of the e0 block	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-shape string-= e0 )
block whose width is smaller than length of e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
3 inches high block	SW.filter entity-en.block string-height string-= number3 en.inch
block that block one isnt left of	SW.filter entity-en.block SW.reverse string-left string-!= en.block.block1
find me a block with equal or less width than e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
block below special block	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-is_special )
block that at most two block is below	SW.countComparative entity-en.block SW.reverse string-below string-<= number2 entity-en.block
which special brick is 3 inches wide	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-is_special
how wide is e0	SW.getProperty e0 string-width
block below 2 blocks	SW.countComparative entity-en.block string-below string-= number2 entity-en.block
select the block that is special and below e0	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-is_special
find me all blocks below that e0 is right of	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-below string-= e0 )
is there a block with the same color as e0	SW.filter entity-en.block string-color string-= SW.getProperty e0 string-color
special block to right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-is_special
height of e0	SW.getProperty e0 string-height
block above at leat two blocks	SW.countComparative entity-en.block SW.reverse string-above string->= number2 entity-en.block
find the block of 3 inches height and placed in left	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
what is the color of e0	SW.getProperty e0 string-color
select block to the left of two blocks	SW.countComparative entity-en.block SW.reverse string-right string-= number2 entity-en.block
a 3 inch block has a block on top of it find that block	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
find me all the blocks left of 3 inch tall blocks	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
find me the block that e0 is below	SW.filter entity-en.block SW.reverse string-below string-= e0
find me all blocks above and right of e0	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-right string-= e0 )
find me all the blocks that has at most 2 blocks to the right of it	SW.countComparative entity-en.block string-left string-<= number2 entity-en.block
find me all special e0 blocks	SW.filter ( SW.filter entity-en.block string-is_special ) string-shape string-= e0
see block below e0 and choose the one left of it	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
find me all blocks below which e0 is right of	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) SW.reverse string-right string-= e0
choose a block above a 3 inch block	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
choose a block that is not more than 2 shapes	SW.countComparative entity-en.block string-shape string-<= number2
what is the height of the block	string-sum SW.getProperty entity-en.block string-height
select the block on the left	SW.filter ( SW.filter entity-en.block string-above string-= en.block.block1 ) string-left string-= en.block.block1
find the block below e0 that is 3 inches high	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) string-height string-= number3 en.inch
block at the right of 3 inches wide block	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
block right of a block which is above e0	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-above string-= e0 )
select the blocks on the right and left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-right string-= e0
block right of more than two blocks	SW.countComparative entity-en.block SW.reverse string-right string-> number2 entity-en.block
locate the e0 block	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-shape string-= e0
find a special block	SW.filter ( SW.filter entity-en.block string-is_special ) string-is_special
which block has the largest number of blocks to its left	SW.countSuperlative entity-en.block string-max SW.reverse string-left entity-en.block
find the block that is on top of e0	SW.filter ( SW.filter entity-en.block string-above string-= e0 ) string-above string-= e0
find me the special blocks below e0	SW.filter ( SW.filter entity-en.block string-below string-= e0 ) string-is_special
block to the right of the 3 inch high block	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
locate a block that is no wider than the height of e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
is there a block no wider than 3 or 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.concat )
find a block at most as tall as block 1s width	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-<= ( SW.ensureNumericEntity SW.getProperty en.block.block1 string-width  )
which brick has a length smaller than 3 or 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.concat )
what block is at least as long as block 1s height	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.getProperty en.block.block1 string-height  )
block that is left of block whose length is 3 inches	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
what block is e0 to the right of	SW.filter entity-en.block SW.reverse string-right string-= e0
block at the left of e0 shaped block	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-shape string-= e0 )
which brick is longer than e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
choose block underneath block under e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-below string-= e0 )
find a block with equal height and width measurements specifically 3 inches	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-length string-= number3 en.inch
find me all the bricks below at most 2 blocks	SW.countComparative entity-en.block string-below string-<= number2 entity-en.block
find me all the blocks that is 3 inches wide and long	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-width string-= number3 en.inch
find me all the 3 inch wide blocks	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-width string-= number3 en.inch
find a block that is 3 inches tall	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) string-height string-= number3 en.inch
a three inches block at the left of e0	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-left string-= e0
block that is above more than two blocks	SW.countComparative entity-en.block SW.reverse string-above string-> number2 entity-en.block
find me a block as wide as e0 or wider	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
block below and two left of e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
block two above e0	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
which block is to the left of the 3inch high block	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
find a block with two or less blocks to the left	SW.countComparative entity-en.block SW.reverse string-left string-<= number2 entity-en.block
select all blocks of length 1	SW.getProperty en.block.block1 string-length
find me all blocks that e0 is right of and which is left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) string-left string-= e0
which brick has no more than two bricks above it	SW.countComparative entity-en.block SW.reverse string-above string-<= number2 entity-en.block
which brick is to the left of the special brick	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-is_special )
what blocks length is smaller than block 1s width	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.getProperty en.block.block1 string-width  )
find me all blocks wider than the height of e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
find the block that has a width of 3 inches and is to the right of e0	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-right string-= e0
find the block located on top of the block that is 3 inches high	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
left of special block	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block string-is_special )
which special brick is above e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-above string-= e0
block that the least number of block is left of	SW.countSuperlative entity-en.block string-min SW.reverse string-left entity-en.block
find me the block that has a length of 3 inches	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-length string-= number3 en.inch )
find me all the blocks that is not 3 inches long	SW.filter entity-en.block string-length string-!= number3 en.inch
find the block to the right of the block that is to the left of e0	SW.filter entity-en.block string-right string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
select the block with a width smaller than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity number3 en.inch )
block up and left from e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
find me all special blocks that e0 is above	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) string-is_special
block not below e0	SW.filter entity-en.block SW.reverse string-above string-!= e0
what is the height of an average block	string-avg SW.getProperty entity-en.block string-height
what block is above the block that is above e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-above string-= e0 )
find the special block to the right of e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-right string-= e0
block above the block at right of e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block SW.reverse string-left string-= e0 )
find the block with more than two blocks above it	SW.countComparative entity-en.block SW.reverse string-above string-> number2 entity-en.block
find me the block with the smallest width	SW.superlative entity-en.block string-min SW.ensureNumericProperty string-width
which brick is wider than e0 is wide	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-> ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
block whose height is smaller than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity number3 en.inch )
which brick has a length shorter than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity number3 en.inch )
find me all the blocks that is not a e0	SW.filter entity-en.block string-shape string-!= e0
which brick is above a brick that is 3 inches wide	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
find me the block that is below the block which e0 is above	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
block that the least number of block is right of	SW.countSuperlative entity-en.block string-min SW.reverse string-right entity-en.block
block whose shape is a e0 and that is special	SW.filter ( SW.filter entity-en.block string-shape string-= e0 ) string-is_special
is it a e0 or a e1	SW.concat
find me all blocks at most 3 inches long	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity number3 en.inch )
block that left of block one and special	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= en.block.block1 ) string-is_special
what block is two blocks to the left of e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-left string-= e0 )
any block with width of either 3 inches or 6 inches	SW.filter entity-en.block string-width string-= SW.concat
find a block that is on top of two other blocks	SW.countComparative entity-en.block SW.reverse string-below string-= number2 entity-en.block
find me all blocks with the shape of e0	SW.getProperty e0 string-shape
find me all blocks shorter than the width of e0	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
below and right from e0	SW.filter entity-en.block SW.reverse string-right string-= ( SW.filter entity-en.block SW.reverse string-below string-= e0 )
select block of length 3 or 6 inches	SW.filter entity-en.block string-length string-= SW.concat
find me all 3 inch long blocks below e0	SW.filter ( SW.filter entity-en.block SW.reverse string-above string-= e0 ) string-length string-= number3 en.inch
what is the average width of the bricks	string-avg SW.getProperty entity-en.block string-width
find blocks that are at least 3 inches wide or 6 inches wide	SW.filter entity-en.block SW.ensureNumericProperty string-width  string->= ( SW.ensureNumericEntity SW.concat )
right of 3 inch block	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
what block is above e0 or e1	SW.filter entity-en.block SW.reverse string-above string-= SW.concat
find a block that e0 is longer than	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
block above more than 2 blocks	SW.countComparative entity-en.block string-above string-> number2 entity-en.block
choose the block that has the same width as e0 has height	SW.filter entity-en.block string-width string-= SW.getProperty e0 string-height
block two above e0	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-above string-= e0 )
find me all the blocks that has at least 2 blocks to the left	SW.countComparative entity-en.block SW.reverse string-right string->= number2 entity-en.block
find the block whose length and height is 3 inches	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-height string-= number3 en.inch
find the special block that is 3 inches	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-is_special
find me all blocks which is left and above e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block SW.reverse string-above string-= e0 )
what block is special and has e0 on its right	SW.filter ( SW.filter entity-en.block string-is_special ) SW.reverse string-right string-= e0
what 3 inch brick is to the right of e0	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) string-length string-= number3 en.inch
which brick is no wider than 3 or 6 inches	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity SW.concat )
block above 3 inch block	SW.filter entity-en.block SW.reverse string-below string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
find the block that is shorer than e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
block whose height is height of e0	SW.filter entity-en.block string-height string-= SW.getProperty e0 string-height
which brick is no longer than e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-<= ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
3 inch block above e0	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) string-above string-= e0
find me all blocks 2 blocks below e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-below string-= e0 )
find a block shorter than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-height  string-< ( SW.ensureNumericEntity number3 en.inch )
find me all blocks at least 3 inch wide	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity SW.concat )
block that has e0 above and left	SW.filter ( SW.filter entity-en.block string-right string-= e0 ) SW.reverse string-above string-= e0
find me all blocks 3 inch long right of e0	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-right string-= e0
find the 3 inch long block to the left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) string-length string-= number3 en.inch
block whose length is minimum the height of e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string->= ( SW.ensureNumericEntity SW.getProperty e0 string-height  )
block above and to the left of e0	SW.filter ( SW.filter entity-en.block string-left string-= e0 ) SW.reverse string-below string-= e0
choose a block to the right of the most blocks	SW.countSuperlative entity-en.block string-min string-right entity-en.block
block below three inch block	SW.filter entity-en.block SW.reverse string-above string-= ( SW.filter entity-en.block string-height string-= number3 en.inch )
right of special block	SW.filter entity-en.block SW.reverse string-left string-= ( SW.filter entity-en.block string-is_special )
find a block with a length of 3 inches that e0 is above	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) SW.reverse string-above string-= e0
what block is above e0	SW.filter entity-en.block string-left string-= ( SW.filter entity-en.block string-above string-= e0 )
find me a special 3 inch long block	SW.filter ( SW.filter entity-en.block string-length string-= number3 en.inch ) string-is_special
describe the shape of e0	SW.getProperty e0 string-shape
find me all 3 inch wide blocks that e0 is below	SW.filter ( SW.filter entity-en.block string-width string-= number3 en.inch ) SW.reverse string-below string-= e0
block which has e0 at left and above	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) SW.reverse string-above string-= e0
dual colored block	SW.countComparative entity-en.block string-color string-> number2
find me all blocks that e0 is left and right of	SW.filter ( SW.filter entity-en.block SW.reverse string-left string-= e0 ) string-right string-= e0
select a block longer than 3 inches	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity SW.concat )
which block is below a block that e0 is to the right of	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block SW.reverse string-right string-= e0 )
choose a block that is not as thick as e0	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-length  )
what block is below the most blocks	SW.countSuperlative entity-en.block string-max SW.reverse string-above entity-en.block
find a block to the right and above e0	SW.filter entity-en.block string-above string-= ( SW.filter entity-en.block string-right string-= e0 )
left of block 3	SW.filter entity-en.block SW.reverse string-right string-= SW.concat
block aboe and left of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) SW.reverse string-below string-= e0
find me all 3 inch tall blocks which e0 is left of	SW.filter ( SW.filter entity-en.block string-height string-= number3 en.inch ) SW.reverse string-left string-= e0
find the average height of a block	string-avg SW.getProperty entity-en.block string-height
select all blocks with length greater than 3	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-> ( SW.ensureNumericEntity number3 en.inch )
choose a block that is less thick than e0	SW.filter entity-en.block SW.ensureNumericProperty string-length  string-< ( SW.ensureNumericEntity SW.getProperty e0 string-width  )
find me all special blocks that are below e0	SW.filter ( SW.filter entity-en.block string-is_special ) SW.reverse string-below string-= e0
what is the special block in the left of e0	SW.filter ( SW.filter entity-en.block string-is_special ) SW.reverse string-right string-= e0
what block has width less than or equal to block 1s length	SW.filter entity-en.block SW.ensureNumericProperty string-width  string-<= ( SW.ensureNumericEntity SW.getProperty en.block.block1 string-length  )
which 3 inches long block is above e0	SW.filter ( SW.filter entity-en.block SW.reverse string-below string-= e0 ) string-length string-= number3 en.inch
what block has two blocks or less below it	SW.countComparative entity-en.block SW.reverse string-below string-<= number2 entity-en.block
find all special blocks below e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-below string-= e0
select the block on the left side of e0	SW.filter ( SW.filter entity-en.block SW.reverse string-right string-= e0 ) SW.reverse string-right string-= e0
choose a block that is below a 3 inch block	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-width string-= number3 en.inch )
which brick is below the brick that is above e0	SW.filter entity-en.block string-below string-= ( SW.filter entity-en.block string-above string-= e0 )
find me all special blocks above e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-above string-= e0
find me a special block to the left of e0	SW.filter ( SW.filter entity-en.block string-is_special ) string-left string-= e0